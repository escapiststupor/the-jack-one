{"version":3,"sources":["webpack:///./Examples/test.ts","webpack:///./Engine/Render/SpriteSheetRendererComponent.ts","webpack:///./Engine/Display/SpriteSheet.ts"],"names":[],"mappings":"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","file":"examples/test.bundle.js","sourcesContent":["// tslint:disable max-classes-per-file no-stateless-class\nimport 'Engine/preset';\n\nimport { instantiate, bootstrap, def, DEBUG, DEBUG_RENDERER } from 'Engine/runtime';\ndef(DEBUG);\ndef(DEBUG_RENDERER);\n\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Scene } from 'Engine/Core/Scene';\n// import { Screen } from 'Engine/Display/Screen';\nimport { SceneManager } from 'Engine/Core/SceneManager';\nimport { Class } from 'Engine/Decorator/Class';\n// import { TextRendererComponent } from 'Engine/Render/TextRendererComponent';\nimport { KeyboardInput } from 'Engine/Input/KeyboardInput';\nimport { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { SpriteSheetRendererComponent } from 'Engine/Render/SpriteSheetRendererComponent';\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { SpriteSheet } from 'Engine/Display/SpriteSheet';\nimport { Texture } from 'Engine/Resource/Texture';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Color } from 'Engine/Display/Color';\nimport { Logger } from 'Engine/Core/Logger';\n\n@Class()\nclass Subject extends GameObject {\n  // public renderer = this.addComponent(TextRendererComponent);\n  // public renderer = this.addComponent(SpriteRendererComponent);\n  public renderer = this.addComponent(SpriteSheetRendererComponent);\n  // public renderer = this.addComponent(LineRendererComponent);\n}\n\n@Class()\nclass World {\n\n  constructor(@Inject(SceneManager) sceneManager: SceneManager,\n              @Inject(KeyboardInput) keyboardInput: KeyboardInput,\n              @Inject(Logger) logger: Logger) {\n    const scene = instantiate(Scene);\n    sceneManager.add(scene);\n\n    // const texture = new Texture('/Assets/rect.png');\n    const texture = new Texture('/Assets/flappy-bird/bird.png');\n    const sprite = new Sprite(texture);\n    sprite.rect.position.reset(0, 0);\n    sprite.rect.width = 210;\n    sprite.rect.height = 200;\n    const spritesheet = new SpriteSheet(\n      texture,\n      [\n        { x:   0, y: 0, width: 210, height: 200 },\n        { x: 210, y: 0, width: 210, height: 200 },\n        { x: 420, y: 0, width: 210, height: 200 }\n      ],\n      6\n    );\n\n    scene.resources.add(texture);\n\n    const subject = instantiate(Subject);\n    // subject.renderer.text = 'Hello Engine';\n    // subject.renderer.sprite = sprite;\n    subject.renderer.spriteSheet = spritesheet;\n    // subject.renderer.sprite = <Sprite>spritesheet.getSprite('default', 0);\n    // subject.transform.scale.setTo(1.4, 1);\n    // subject.renderer.addPoint(\n    //   new Vector(100, 100),\n    //   new Vector(100, -100),\n    //   new Vector(-100, -100),\n    //   new Vector(-100, 100)\n    // );\n    // subject.renderer.closePath = true;\n    // subject.renderer.strokeColor = Color.Blue;\n    // subject.transform.position.reset(100, 0);\n    scene.add(subject);\n\n    const onKeyDown$ = keyboardInput.keyDown$.map(e => e.key);\n    onKeyDown$.filter(code => code === 'w').subscribe(() => subject.transform.position.y += 10);\n    onKeyDown$.filter(code => code === 's').subscribe(() => subject.transform.position.y -= 10);\n    onKeyDown$.filter(code => code === 'd').subscribe(() => subject.transform.position.x += 10);\n    onKeyDown$.filter(code => code === 'a').subscribe(() => subject.transform.position.x -= 10);\n    onKeyDown$.filter(code => code === 'q').subscribe(() => subject.transform.rotation += Math.PI / 6);\n    onKeyDown$.filter(code => code === 'e').subscribe(() => subject.transform.rotation -= Math.PI / 6);\n    onKeyDown$.filter(code => code === 'c').subscribe(() => subject.transform.scale.add(0.1));\n    onKeyDown$.filter(code => code === 'z').subscribe(() => subject.transform.scale.add(-0.1));\n\n    onKeyDown$.subscribe(key => logger.log(`key down: ${key}`));\n  }\n\n}\n\ninstantiate(World);\n\nbootstrap().catch(console.error);\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/test.ts","import { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { SpriteSheet } from 'Engine/Display/SpriteSheet';\nimport { Time } from 'Engine/Time/Time';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n@UniqueComponent()\nexport class SpriteSheetRendererComponent extends SpriteRendererComponent {\n\n  private _spriteSheet: SpriteSheet;\n\n  private sheetKey: string;\n\n  private currentIndex: number = 0;\n\n  private sprites: ReadonlyArray<Sprite>;\n\n  private accumulator: number = 0;\n\n  get spriteSheet(): SpriteSheet { return this._spriteSheet; }\n\n  set spriteSheet(value: SpriteSheet) { this.setSpriteSheep(value); }\n\n  @Inject(Time)\n  private time: Time;\n\n  public play(key = 'default'): void {\n    this.currentIndex = 0;\n    this.sheetKey = key;\n    this.accumulator = 0;\n    this.sprites = this._spriteSheet.getSprites(this.sheetKey);\n  }\n\n  public update(): void {\n    this.accumulator += this.time.deltaTime;\n\n    if (this.accumulator > this._spriteSheet.frameTime) {\n      const times = (this.accumulator / this._spriteSheet.frameTime) | 0;\n      this.accumulator %= this._spriteSheet.frameTime;\n      this.currentIndex += times;\n      if (this.currentIndex >= this.sprites.length) {\n        this.currentIndex = 0;\n      }\n    }\n\n    this.sprite = this.sprites[this.currentIndex];\n\n    // After updated sprite, super call for calculate bounds.\n    super.update();\n  }\n\n  private setSpriteSheep(spriteSheet: SpriteSheet): void {\n    this._spriteSheet = spriteSheet;\n    // initialize sprites\n    if (!this.sprites) {\n      this.play();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/SpriteSheetRendererComponent.ts","import { Texture } from 'Engine/Resource/Texture';\nimport { Sprite } from 'Engine/Display/Sprite';\n\nexport interface SpriteSheetCell {\n  x?: number;\n  y?: number;\n  width: number;\n  height: number;\n}\n\nexport type SpriteSheetCells = SpriteSheetCell[];\n\nexport interface SpriteSheetCellMap {\n  [name: string]: SpriteSheetCells;\n}\n\ninterface InternalSpriteSheet {\n  frameTime: number;\n}\n\nexport class SpriteSheet {\n\n  private sprites: Map<string, Sprite[]> = new Map();\n\n  public readonly frameTime: number;\n\n  public get fps(): number { return this._fps; }\n\n  public set fps(value: number) {\n    this._fps = value;\n    (<InternalSpriteSheet>this).frameTime = 1000 / value;\n  }\n\n  constructor(public texture: Texture,\n              private cellMapOrCells: SpriteSheetCellMap|SpriteSheetCells,\n              private _fps = 24) {\n    if (Array.isArray(cellMapOrCells)) {\n      const sprites = this.makeSprites(texture, cellMapOrCells);\n      const key = 'default';\n      this.sprites.set(key, sprites);\n    } else {\n      const keys = Object.keys(cellMapOrCells);\n      keys.forEach(key => {\n        const cells = cellMapOrCells[key];\n        const sprites = this.makeSprites(texture, cells);\n        this.sprites.set(key, sprites);\n      });\n    }\n\n    this.frameTime = 1000 / _fps;\n}\n\n  public getSprites(key: string): ReadonlyArray<Sprite> {\n    return this.sprites.get(key) || [];\n  }\n\n  public getSprite(key: string, index: number): Sprite|undefined {\n    const sprites = this.sprites.get(key);\n    if (!sprites) {\n      return;\n    }\n\n    const correctedIndex = index % sprites.length;\n\n    return sprites[correctedIndex];\n  }\n\n  private makeSprites(texture: Texture, cells: SpriteSheetCells): Sprite[] {\n    const sprites: Sprite[] = [];\n    cells.forEach(cell => {\n      const sprite = new Sprite(texture);\n      sprite.rect.position.setTo(cell.x || 0, cell.y || 0);\n      sprite.rect.width = cell.width;\n      sprite.rect.height = cell.height;\n      sprites.push(sprite);\n    });\n    return sprites;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Display/SpriteSheet.ts"],"sourceRoot":""}