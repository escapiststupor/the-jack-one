{"version":3,"sources":["webpack:///./Examples/test.ts","webpack:///./Engine/Media/AudioPlayerComponent.ts","webpack:///./Engine/Resource/Sound.ts"],"names":[],"mappings":"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","file":"examples/test.bundle.js","sourcesContent":["import 'Engine/preset';\nimport { Sound } from 'Engine/Resource/Sound';\nimport { getService, instantiate } from 'Engine/runtime';\nimport { MouseInput } from 'Engine/Input/MouseInput';\nimport { AudioPlayerComponent } from 'Engine/Media/AudioPlayerComponent';\n\n// tslint:disable max-classes-per-file no-stateless-class\n\n// import { instantiate, bootstrap, def, DEBUG, DEBUG_RENDERER } from 'Engine/runtime';\n// def(DEBUG);\n// def(DEBUG_RENDERER);\n\n// import { GameObject } from 'Engine/Core/GameObject';\n// import { Scene } from 'Engine/Core/Scene';\n// // import { Screen } from 'Engine/Display/Screen';\n// import { SceneManager } from 'Engine/Core/SceneManager';\n// import { Class } from 'Engine/Decorator/Class';\n// // import { TextRendererComponent } from 'Engine/Render/TextRendererComponent';\n// import { KeyboardInput } from 'Engine/Input/KeyboardInput';\n// import { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\n// import { SpriteSheetRendererComponent } from 'Engine/Render/SpriteSheetRendererComponent';\n// import { Sprite } from 'Engine/Display/Sprite';\n// import { SpriteSheet } from 'Engine/Display/SpriteSheet';\n// import { Texture } from 'Engine/Resource/Texture';\n// import { Inject } from 'Engine/Decorator/Inject';\n// import { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\n// import { Vector } from 'Engine/Math/Vector';\n// import { Color } from 'Engine/Display/Color';\n// import { Logger } from 'Engine/Core/Logger';\n\n// @Class()\n// class Subject extends GameObject {\n//   // public renderer = this.addComponent(TextRendererComponent);\n//   // public renderer = this.addComponent(SpriteRendererComponent);\n//   public renderer = this.addComponent(SpriteSheetRendererComponent);\n//   // public renderer = this.addComponent(LineRendererComponent);\n// }\n\n// @Class()\n// class World {\n\n//   constructor(@Inject(SceneManager) sceneManager: SceneManager,\n//               @Inject(KeyboardInput) keyboardInput: KeyboardInput,\n//               @Inject(Logger) logger: Logger) {\n//     const scene = instantiate(Scene);\n//     sceneManager.add(scene);\n\n//     // const texture = new Texture('./assets/rect.png');\n//     const texture = new Texture('./assets/flappy-bird/bird.png');\n//     const sprite = new Sprite(texture);\n//     sprite.rect.position.reset(0, 0);\n//     sprite.rect.width = 210;\n//     sprite.rect.height = 200;\n//     const spritesheet = new SpriteSheet(\n//       texture,\n//       [\n//         { x:   0, y: 0, width: 210, height: 200 },\n//         { x: 210, y: 0, width: 210, height: 200 },\n//         { x: 420, y: 0, width: 210, height: 200 }\n//       ],\n//       6\n//     );\n\n//     scene.resources.add(texture);\n\n//     const subject = instantiate(Subject);\n//     // subject.renderer.text = 'Hello Engine';\n//     // subject.renderer.sprite = sprite;\n//     subject.renderer.spriteSheet = spritesheet;\n//     // subject.renderer.sprite = <Sprite>spritesheet.getSprite('default', 0);\n//     // subject.transform.scale.setTo(1.4, 1);\n//     // subject.renderer.addPoint(\n//     //   new Vector(100, 100),\n//     //   new Vector(100, -100),\n//     //   new Vector(-100, -100),\n//     //   new Vector(-100, 100)\n//     // );\n//     // subject.renderer.closePath = true;\n//     // subject.renderer.strokeColor = Color.Blue;\n//     // subject.transform.position.reset(100, 0);\n//     scene.add(subject);\n\n//     const onKeyDown$ = keyboardInput.keyDown$.map(e => e.key);\n//     onKeyDown$.filter(code => code === 'w').subscribe(() => subject.transform.position.y += 10);\n//     onKeyDown$.filter(code => code === 's').subscribe(() => subject.transform.position.y -= 10);\n//     onKeyDown$.filter(code => code === 'd').subscribe(() => subject.transform.position.x += 10);\n//     onKeyDown$.filter(code => code === 'a').subscribe(() => subject.transform.position.x -= 10);\n//     onKeyDown$.filter(code => code === 'q').subscribe(() => subject.transform.rotation += Math.PI / 6);\n//     onKeyDown$.filter(code => code === 'e').subscribe(() => subject.transform.rotation -= Math.PI / 6);\n//     onKeyDown$.filter(code => code === 'c').subscribe(() => subject.transform.scale.add(0.1));\n//     onKeyDown$.filter(code => code === 'z').subscribe(() => subject.transform.scale.add(-0.1));\n\n//     onKeyDown$.subscribe(key => logger.log(`key down: ${key}`));\n//   }\n\n// }\n\n// instantiate(World);\n\n// bootstrap().catch(console.error);\n\nconst sound = new Sound('./assets/nyan.wav');\n\n// const mouseInput = getService(MouseInput);\n\n// const globalGain = new AudioContext().createGain();\n\n// function play(volume = 0.1) {\n//   const gain = sound.context.createGain();\n//   gain.connect(sound.context.destination);\n\n//   const source = sound.context.createBufferSource();\n//   source.buffer = sound.data;\n//   source.loop = true;\n//   source.connect(gain);\n\n//   gain.gain.value = volume;\n\n//   source.start();\n\n//   return { gain, source };\n// }\n\nconst audioPlayer = (<any>window).audioPlayer = instantiate(AudioPlayerComponent);\n\naudioPlayer.source = sound;\naudioPlayer.volume = 0.1;\naudioPlayer.playbackRate = 1;\n// audioPlayer.loop = true;\n\n(async () => {\n  await sound.load();\n  audioPlayer.play();\n})();\n\n// (<any>window).play = play;\n// (<any>window).globalGain = globalGain;\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/test.ts","import { Inject } from 'Engine/Decorator/Inject';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Component } from 'Engine/Core/Component';\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Sound } from 'Engine/Resource/Sound';\nimport { forwardRef } from 'Engine/Utility/Type';\n\nforwardRef(() => GameObject);\n\nexport class AudioPlayerComponent extends Component {\n\n  protected gainNode: GainNode;\n\n  protected bufferSource: AudioBufferSourceNode;\n\n  private _volume = 1;\n\n  private _loop = false;\n\n  private _isPaused = false;\n\n  private _isPlaying = false;\n\n  /**\n   * When resume, change playback rate, have to calculate pause\n   */\n  private _lastCalculatedAt = 0;\n\n  /**\n   * Has played time from audio started.\n   */\n  private _elapsedTime = 0;\n\n  private _playbackRate = 1;\n\n  private _source: Sound|undefined;\n\n  public get isPaused(): boolean { return this._isPaused; }\n\n  public get isPlaying(): boolean { return this._isPlaying; }\n\n  public get playbackRate(): number { return this._playbackRate; }\n\n  public set playbackRate(value: number) { this.setPlaybackRate(value); }\n\n  public get volume(): number { return this._volume; }\n\n  public set volume(value: number) { this.setVolume(value); }\n\n  public get loop(): boolean { return this._loop; }\n\n  public set loop(value: boolean) { this.setLoop(value); }\n\n  public get source(): Sound|undefined { return this._source; }\n\n  public set source(value: Sound|undefined) {\n    this._source = value;\n  }\n\n  constructor(host: GameObject,\n              @Inject(BrowserDelegate) private browser: BrowserDelegate) {\n    super(host);\n  }\n\n  public reset(): void {\n    super.reset();\n\n    if (!this._source) {\n      return;\n    }\n\n    this.createBufferSource(this._source.context, this._source.data);\n  }\n\n  public resume(): void {\n    if (!this._source || !this._source.isLoaded) {\n      return;\n    }\n\n    if (!this._isPaused) {\n      return;\n    }\n\n    this.createBufferSource(this._source.context, this._source.data);\n    this.bufferSource.start(0, this._elapsedTime & this._source.duration);\n    this._isPaused = false;\n    this._isPlaying = true;\n  }\n\n  public pause(): void {\n    if (!this._isPlaying) {\n      return;\n    }\n\n    this.calculatePlayedTime();\n    this._isPaused = true;\n    this.bufferSource.stop(0);\n  }\n\n  public play(): void {\n    if (!this._source || !this._source.isLoaded) {\n      return;\n    }\n\n    if (this._isPaused) {\n      this.resume();\n      return;\n    }\n\n    if (this._isPlaying) {\n      return;\n    }\n\n    this.createBufferSource(this._source.context, this._source.data);\n    this.bufferSource.start(0);\n    this._isPaused = false;\n    this._isPlaying = true;\n    this._lastCalculatedAt = Date.now();\n  }\n\n  public stop(): void {\n    if (!this._isPlaying) {\n      return;\n    }\n\n    this._elapsedTime = 0;\n    this._isPaused = false;\n    this.bufferSource.stop(0);\n  }\n\n  public setPlaybackRate(value: number): void {\n    this._playbackRate = value;\n\n    if (this.bufferSource) {\n      this.bufferSource.playbackRate.value = value;\n    }\n  }\n\n  public setVolume(value: number): void {\n    this._volume = value;\n\n    if (this.gainNode) {\n      this.gainNode.gain.value = value;\n    }\n  }\n\n  public setLoop(value: boolean): void {\n    this._loop = value;\n\n    if (this.bufferSource) {\n      this.bufferSource.loop = value;\n    }\n  }\n\n  private calculatePlayedTime(): void {\n    const now = Date.now();\n    this._elapsedTime += (now - this._lastCalculatedAt) / this._playbackRate * 0.001;\n    this._lastCalculatedAt = now;\n  }\n\n  private createBufferSource(ctx: AudioContext, buffer: AudioBuffer): void {\n    if (!this.gainNode) {\n      this.gainNode = ctx.createGain();\n      // Connect gain node to destination\n      this.gainNode.connect(ctx.destination);\n    }\n\n    this.gainNode.gain.value = this._volume;\n\n    if (this.bufferSource) {\n      this.bufferSource.stop();\n    }\n\n    this.bufferSource = ctx.createBufferSource();\n\n    /**\n     * Connect buffer source to gain node.\n     * AudioBuffer -> GainNode -> BufferSource\n     */\n    this.bufferSource.connect(this.gainNode);\n    this.bufferSource.buffer = buffer;\n    this.bufferSource.loop = this._loop;\n    this.bufferSource.playbackRate.value = this._playbackRate;\n    this.bufferSource.onended = e => this.onBufferSourceEnd(e);\n  }\n\n  private onBufferSourceEnd(e: MediaStreamErrorEvent) {\n    this._isPlaying = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Media/AudioPlayerComponent.ts","import { Resource } from 'Engine/Resource/Resource';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\n\nexport class Sound extends Resource<AudioBuffer> {\n\n  @Inject(BrowserDelegate)\n  private browser: BrowserDelegate;\n\n  private _duration = 0;\n\n  public get duration(): number { return this._duration; }\n\n  public readonly context: AudioContext = this.browser.getAudioContext();\n\n  constructor(path: string) {\n    super(path);\n    this._responseType = 'arraybuffer';\n  }\n\n  protected async processData(data: any): Promise<AudioBuffer|undefined> {\n    return new Promise<AudioBuffer>((resolve, reject) => {\n      if (!this.context) {\n        reject(new Error('Fail to create audio context'));\n        return;\n      }\n\n      this.context.decodeAudioData(\n        data,\n        audioBuffer => {\n          this._duration = audioBuffer.duration;\n          resolve(audioBuffer);\n        },\n        reject\n      );\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Resource/Sound.ts"],"sourceRoot":""}