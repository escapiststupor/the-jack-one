{"version":3,"sources":["webpack:///./Examples/manage-cameras.ts","webpack:///./Engine/Math/Rect.ts","webpack:///./Engine/Resource/Texture.ts","webpack:///./Engine/Display/Sprite.ts","webpack:///./Engine/Render/SpriteRendererComponent.ts","webpack:///./Engine/Physics/RigidbodyComponent.ts","webpack:///./Engine/Resource/Bundle.ts","webpack:///./Engine/Core/Camera.ts","webpack:///./Engine/Core/Scene.ts","webpack:///./Engine/Render/TextRendererComponent.ts","webpack:///./Engine/Render/LineRendererComponent.ts"],"names":[],"mappings":"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","file":"examples/manage-cameras.bundle.js","sourcesContent":["// tslint:disable max-classes-per-file\nimport 'Engine/preset';\n\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Component } from 'Engine/Core/Component';\nimport { Scene } from 'Engine/Core/Scene';\nimport { SceneManager } from 'Engine/Core/SceneManager';\nimport { Screen } from 'Engine/Display/Screen';\nimport { Camera } from 'Engine/Core/Camera';\nimport { instantiate, bootstrap } from 'Engine/runtime';\n\nimport { Class } from 'Engine/Decorator/Class';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { Color } from 'Engine/Display/Color';\nimport { Bounds } from 'Engine/Display/Bounds';\n\nimport { Texture } from 'Engine/Resource/Texture';\n\nimport { Vector } from 'Engine/Math/Vector';\n\nimport { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { TextRendererComponent } from 'Engine/Render/TextRendererComponent';\n\nimport { PointerInput, PointerEvent } from 'Engine/Input/PointerInput';\n\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\n\nconst texture: Texture = new Texture('./assets/circle.png');\n\n@Class()\nclass Player extends GameObject {\n\n  private renderer: SpriteRendererComponent;\n\n  private body: RigidbodyComponent;\n\n  private destination: Vector = new Vector();\n\n  private moveSpeed: number = 100;\n\n  private isMoving: boolean = false;\n\n  public start(): void {\n    super.start();\n\n    const sprite = new Sprite(texture);\n    this.transform.scale.setTo(0.25);\n\n    this.renderer = this.addComponent(SpriteRendererComponent);\n    this.renderer.sprite = sprite;\n\n    this.body = this.addComponent(RigidbodyComponent);\n  }\n\n  public move(destination: Vector): void {\n    this.isMoving = true;\n    this.destination.copy(destination);\n    this.body.velocity\n      .copy(destination)\n      // dest - pos = relative\n      .subtract(this.transform.position)\n      .normalize()\n      .multiply(this.moveSpeed);\n  }\n\n  public stopMove(): void {\n    this.isMoving = false;\n    this.body.velocity.reset();\n  }\n\n  public update(): void {\n    super.update();\n\n    if (this.isMoving) {\n      if (this.transform.position.distanceTo(this.destination) < 10) {\n        this.stopMove();\n      }\n    }\n  }\n\n}\n\n@Class()\nclass Box extends GameObject {\n\n  private size: number = 300;\n\n  public start(): void {\n    super.start();\n\n    const outline = this.addComponent(LineRendererComponent);\n\n    const halfSize = this.size / 2;\n\n    outline.addPoint(\n      new Vector(halfSize, halfSize),\n      new Vector(halfSize, -halfSize),\n      new Vector(-halfSize, -halfSize),\n      new Vector(-halfSize, halfSize)\n    );\n\n    outline.closePath = true;\n\n    outline.strokeColor = Color.White;\n  }\n\n}\n\n@Class()\nclass Label extends GameObject {\n\n  private renderer: TextRendererComponent;\n\n  public text: string = '';\n\n  public start(): void {\n    super.start();\n    this.renderer = this.addComponent(TextRendererComponent);\n    this.renderer.text = this.text;\n  }\n\n}\n\n@Class()\nclass CameraFollow extends Component {\n\n  public bounds: Bounds = new Bounds();\n\n  private target: GameObject|null;\n\n  private isFollowing: boolean = false;\n\n  private relative: Vector = new Vector();\n\n  public follow(target: GameObject|null) : void { this.target = target; }\n\n  public update(): void {\n    if (!this.target) {\n      return;\n    }\n\n    const cameraPosition = this.host.transform.position;\n    const targetPosition = this.target.transform.position;\n\n    this.bounds.center.copy(cameraPosition);\n\n    if (this.isFollowing) {\n      cameraPosition.copy(targetPosition).add(this.relative);\n      if (this.bounds.containPoint(targetPosition)) {\n        this.isFollowing = false;\n      }\n    } else {\n      if (!this.bounds.containPoint(targetPosition)) {\n        this.isFollowing = true;\n        this.relative.copy(cameraPosition).subtract(targetPosition);\n      }\n    }\n  }\n\n}\n\n@Class()\nclass Game extends Scene {\n\n  private player: Player = instantiate(Player);\n\n  // private scene: Scene = instantiate(Scene);\n\n  // private mainCamera: Camera = this.scene.mainCamera;\n\n  private subCamera: Camera = instantiate(Camera);\n\n  @Inject(SceneManager) private sceneManager: SceneManager;\n  @Inject(PointerInput) private pointerInput: PointerInput;\n\n  public start(): void {\n    super.start();\n\n    this.add(this.player);\n    this.add(this.subCamera);\n    this.add(instantiate(Box));\n\n    this.mainCamera.backgroundColor = Color.CreateByHexRgb('#4A687F');\n    const cameraFollow = this.mainCamera.addComponent(CameraFollow);\n    cameraFollow.bounds.extents.setTo(50, 50);\n    cameraFollow.follow(this.player);\n\n    const halfScreenWidth = this.screen.width * 0.5;\n\n    // split screen\n    this.mainCamera.setSize(halfScreenWidth, screen.height);\n    this.subCamera.setSize(halfScreenWidth, screen.height);\n    this.subCamera.rect.position.setTo(halfScreenWidth, 0);\n\n    this.pointerInput.pointerStart$.subscribe(e => this.onPointerStart(e));\n\n    const mainCameraLabel: Label = instantiate(Label);\n    mainCameraLabel.text = 'Main Camera, click to move';\n    mainCameraLabel.layer = 1 << 10;\n    this.add(mainCameraLabel);\n    this.mainCamera.cullingMask = this.mainCamera.cullingMask | mainCameraLabel.layer;\n\n    const subCameraLabel: Label = instantiate(Label);\n    subCameraLabel.text = 'Sub Camera';\n    subCameraLabel.layer = 1 << 11;\n    this.add(subCameraLabel);\n    this.subCamera.cullingMask = this.subCamera.cullingMask | subCameraLabel.layer;\n  }\n\n  private onPointerStart(e: PointerEvent): void {\n    const location = e.locations[0];\n    const halfScreenWidth = this.screen.width * 0.5;\n    if (location.x > halfScreenWidth) {\n      // do not handle sub camera\n      return;\n    }\n    const worldPosition = this.mainCamera.screenToWorld(location);\n    this.player.move(worldPosition);\n  }\n\n}\nconst scene = instantiate(Game);\nscene.resources.add(texture);\nbootstrap(scene).catch(console.error);\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/manage-cameras.ts","import { Vector } from 'Engine/Math/Vector';\n\nexport class Rect {\n\n  public get center(): Vector {\n    return new Vector(\n      this.position.x + this.width / 2,\n      this.position.y + this.height / 2\n    );\n  }\n\n  public get xMin(): number { return this.position.x; }\n\n  public get xMax(): number { return this.position.x + this.width; }\n\n  public get yMin(): number { return this.position.y; }\n\n  public get yMax(): number { return this.position.y + this.height; }\n\n  public get min(): Vector {\n    return new Vector(this.xMin, this.yMin);\n  }\n\n  public get max(): Vector {\n    return new Vector(this.xMax, this.yMax);\n  }\n\n  constructor(public position: Vector = new Vector(),\n              public width: number = 0,\n              public height: number = 0) {}\n\n  public contains(point: Vector): boolean {\n    if (point.x < this.position.x) {\n      return false;\n    }\n\n    if (point.y < this.position.y) {\n      return false;\n    }\n\n    if (point.x > this.position.x + this.width) {\n      return false;\n    }\n\n    if (point.y > this.position.y + this.height) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public overlap(another: Rect): boolean {\n    if (this.xMax < another.xMin || this.xMin > another.xMax) {\n      return false;\n    }\n\n    if (this.yMax < another.yMin || this.yMin > another.yMax) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Rect.ts","import { Resource } from 'Engine/Resource/Resource';\nimport { onceEvent } from 'Engine/Utility/DOM';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n/**\n * Basic texture\n */\nexport class Texture extends Resource<HTMLCanvasElement> {\n\n  @Inject(BrowserDelegate)\n  private browser: BrowserDelegate;\n\n  private isDirty: boolean = false;\n\n  private source: HTMLImageElement;\n\n  private _width = 0;\n\n  private _height = 0;\n\n  public get width(): number { return this._width; }\n\n  public set width(value: number) {\n    this._width = value;\n    this.markAsDirty();\n  }\n\n  public get height(): number { return this._height; }\n\n  public set height(value: number) {\n    this._height = value;\n    this.markAsDirty();\n  }\n\n  constructor(path: string) {\n    super(path);\n  }\n\n  public async load(): Promise<void> {\n    if (this.isLoaded) {\n      return;\n    }\n\n    return new Promise<void>(resolve => {\n      const request = new Image();\n      request.src = this.path;\n      request.onprogress = this.onprogress;\n      request.onerror = this.onerror;\n      request.onloadstart = this.onloadstart;\n      request.onload = async () => {\n        try {\n          this._data = await this.processData(request);\n          this._isLoaded = true;\n          this.onLoad.next();\n        } catch (err) {\n          this.onerror(err);\n        }\n        resolve();\n      };\n    });\n  }\n\n  public clone(): Texture {\n    const texture = new Texture(this.path);\n    texture.source = this.source;\n    texture._width = this._width;\n    texture._height = this._height;\n    texture._isLoaded = this._isLoaded;\n    return texture;\n  }\n\n  public markAsDirty(): void {\n    if (this.isDirty) {\n      return;\n    }\n\n    this.isDirty = true;\n\n    if (!this.isLoaded) {\n      return;\n    }\n\n    this.processData(this.source);\n  }\n\n  protected async processData(image: HTMLImageElement): Promise<HTMLCanvasElement> {\n    const data = this.data || this.browser.createCanvas();\n    const ctx = <CanvasRenderingContext2D>data.getContext('2d');\n\n    if (this.width === 0 && this.height === 0) {\n      data.width = this._width = image.width;\n      data.height = this._height = image.height;\n    }\n\n    ctx.drawImage(\n      image,\n      0, 0,\n      image.width,\n      image.height,\n      0, 0,\n      this._width,\n      this._height\n    );\n\n    this.isDirty = false;\n\n    this.source = image;\n\n    return data;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Resource/Texture.ts","import { Subscription } from 'rxjs/Subscription';\nimport { Texture } from 'Engine/Resource/Texture';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Rect } from 'Engine/Math/Rect';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { Class } from 'Engine/Decorator/Class';\n\n@Class()\nexport class Sprite {\n\n  public pivot: Vector = new Vector(0.5, 0.5);\n\n  @Inject(BrowserDelegate)\n  private browser: BrowserDelegate;\n\n  public canvas: HTMLCanvasElement = this.browser.createCanvas();\n\n  private ctx: CanvasRenderingContext2D = this.browser.getContext(this.canvas);\n\n  private _texture: Texture;\n\n  private textureLoaded: Subscription|undefined;\n\n  get texture(): Texture { return this._texture; }\n\n  // TODO: dynamic texture\n  // set texture(texture: Texture) { this.setTexture(texture); }\n\n  get width(): number { return this.rect.width; }\n\n  get height(): number { return this.rect.height; }\n\n  constructor(texture: Texture,\n              /**\n               * Location of the Sprite on the original Texture, specified in pixels.\n               * Default, it will set to whole texture when texture loaded.\n               */\n              public rect: Rect = new Rect()) {\n    this.setTexture(texture);\n  }\n\n  public setTexture(texture: Texture): void {\n    if (this._texture === texture) {\n      return;\n    }\n\n    this._texture = texture;\n\n    if (this.textureLoaded) {\n      this.textureLoaded.unsubscribe();\n    }\n\n    if (texture.isLoaded) {\n      this.drawTexture();\n    } else {\n      this.textureLoaded = texture.onLoad$.subscribe(() => this.drawTexture());\n    }\n  }\n\n  private drawTexture(): void {\n    if (this.rect.width === 0 && this.rect.height === 0) {\n      this.rect.width = this._texture.width;\n      this.rect.height = this._texture.height;\n    }\n\n    this.canvas.width = this.rect.width;\n    this.canvas.height = this.rect.height;\n\n    if (this.textureLoaded) {\n      this.textureLoaded.unsubscribe();\n      delete this.textureLoaded;\n    }\n\n    this.ctx.clearRect(0, 0, this.rect.width, this.rect.height);\n    this.ctx.drawImage(\n      this._texture.data,\n      this.rect.position.x,\n      this.rect.position.y,\n      this.rect.width,\n      this.rect.height,\n      0, 0,\n      this.rect.width,\n      this.rect.height\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Display/Sprite.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\n\n@UniqueComponent()\nexport class SpriteRendererComponent extends RendererComponent {\n\n  /**\n   * The sprite to render.\n   */\n  private _sprite: Sprite|undefined;\n\n  /**\n   * Only re-render if is dirty.\n   */\n  private _isDirty = false;\n\n  get sprite(): Sprite|undefined { return this._sprite; }\n\n  set sprite(value: Sprite|undefined) {\n    this._isDirty = true;\n    this._sprite = value;\n  }\n\n  get isDirty(): boolean { return this._isDirty; }\n\n  public update(): void {\n    super.update();\n    if (this._sprite) {\n      const { width, height } = this._sprite;\n      this.canvas.width = width;\n      this.canvas.height = height;\n    }\n  }\n\n  public render(): void {\n    if (!this._sprite) {\n      return;\n    }\n\n    // if (!this._isDirty) {\n    //   return;\n    // }\n\n    const ctx = this.ctx;\n\n    const { width, height } = this.canvas;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.save();\n\n    ctx.drawImage(this._sprite.canvas, 0, 0);\n\n    ctx.restore();\n\n    // TODO: check texture of sprite has loaded.\n    // this._isDirty = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/SpriteRendererComponent.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Component } from 'Engine/Core/Component';\nimport { TransformComponent } from 'Engine/Display/TransformComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Engine } from 'Engine/Core/Engine';\nimport { Time } from 'Engine/Time/Time';\nimport { ForceMode } from 'Engine/Physics/ForceMode';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\nimport { RequireComponent } from 'Engine/Decorator/RequireComponent';\nimport { Inject } from 'Engine/Decorator/Inject';\n\ninterface InternalRigidbodyComponent extends RigidbodyComponent {\n  motion: number;\n  inverseMass: number;\n  inverseMoi: number;\n}\n\nconst DoublePI = Math.PI * 2;\n\n@UniqueComponent()\n@RequireComponent([TransformComponent])\nexport class RigidbodyComponent extends Component {\n\n  public angularDrag: number = 0;\n\n  /**\n   * radians per second\n   */\n  public angularVelocity: number = 0;\n\n  public drag: number = 0;\n\n  public freezeRotation: boolean = false;\n\n  /**\n   * In kilogram\n   */\n  private _mass: number = 1;\n\n  public get mass(): number { return this._mass; }\n\n  public set mass(value: number) { this._mass = value; (<InternalRigidbodyComponent>this).inverseMass = 1 / value; }\n\n  public readonly inverseMass: number = 1;\n\n  /**\n   * moment of inertia\n   */\n  private _moi: number = 1000;\n\n  public get moi(): number { return this._moi; }\n\n  public set moi(value: number) { this._moi = value; (<InternalRigidbodyComponent>this).inverseMoi = 1 / value; }\n\n  public readonly inverseMoi: number = 0.001;\n\n  public maxAngularVelocity: number = Infinity;\n\n  /**\n   * pixel per second\n   */\n  public velocity: Vector = Vector.Get();\n\n  public useGravity: boolean = false;\n\n  public isSleeping: boolean = false;\n\n  public sleepThreshold: number = 1;\n\n  public readonly motion: number = 0;\n\n  private forces: Vector[] = [\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get()\n  ];\n\n  private torques: number[] = [0, 0, 0, 0];\n\n  private sleepTimer: number = 0;\n\n  private transform: TransformComponent;\n\n  private lastPosition: Vector = Vector.Get();\n\n  constructor(host: GameObject,\n              @Inject(Engine) private engine: Engine,\n              @Inject(Time) private time: Time) {\n    super(host);\n  }\n\n  public start(): void {\n    super.start();\n    this.transform = <TransformComponent>this.getComponent(TransformComponent);\n  }\n\n  public addForce(force: Vector, forceMode: ForceMode = ForceMode.Force): void {\n    this.forces[forceMode].add(force);\n  }\n\n  public addTorque(torque: number, forceMode: ForceMode = ForceMode.Force): void {\n    this.torques[forceMode] += torque;\n  }\n\n  public clearForce(): void {\n    this.forces.forEach(force => force.reset());\n  }\n\n  public clearTorque(): void {\n    for (let i = 0; i < this.torques.length; i++) {\n      this.torques[i] = 0;\n    }\n  }\n\n  public sleep(): void {\n    this.isSleeping = true;\n    this.velocity.reset();\n    this.angularVelocity = 0;\n    this.clearForce();\n    this.clearTorque();\n  }\n\n  public awake(): void {\n    this.isSleeping = false;\n    this.sleepTimer = 0;\n  }\n\n  public fixedUpdate(): void {\n    super.fixedUpdate();\n\n    const deltaTimeInSecond = this.time.fixedDeltaTimeInSecond;\n\n    if (this.useGravity && !this.isSleeping) {\n      this.addForce(this.engine.gravity, ForceMode.Acceleration);\n    }\n\n    /**\n     * Force\n     * f = ma = m∆v/∆t\n     * ∆tf = m∆v\n     * ∆v = ∆tf/m\n     */\n    this.forces[ForceMode.Force].multiply(deltaTimeInSecond * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Force]);\n    this.forces[ForceMode.Force].reset();\n\n    /**\n     * Acceleration ignore mass.\n     */\n    this.forces[ForceMode.Acceleration].multiply(deltaTimeInSecond);\n    this.velocity.add(this.forces[ForceMode.Acceleration]);\n    this.forces[ForceMode.Acceleration].reset();\n\n    /**\n     * Impulse handle without delta time.\n     */\n    this.forces[ForceMode.Impulse].multiply(1 * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Impulse]);\n    this.forces[ForceMode.Impulse].reset();\n\n    /**\n     * VelocityChange without delta time and mass.\n     */\n    this.velocity.add(this.forces[ForceMode.VelocityChange]);\n    this.forces[ForceMode.VelocityChange].reset();\n\n    /**\n     * Torque\n     */\n    this.torques[ForceMode.Force] *= this.inverseMoi * deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Force];\n    this.torques[ForceMode.Force] = 0;\n\n    this.torques[ForceMode.Acceleration] *= deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Acceleration];\n    this.torques[ForceMode.Acceleration] = 0;\n\n    this.torques[ForceMode.Impulse] *= this.inverseMoi;\n    this.angularVelocity += this.torques[ForceMode.Impulse];\n    this.torques[ForceMode.Impulse] = 0;\n\n    this.angularVelocity += this.torques[ForceMode.VelocityChange];\n    this.torques[ForceMode.VelocityChange] = 0;\n\n    this.checkSleep(deltaTimeInSecond);\n\n    // update position\n    if (!this.velocity.isZero) {\n      this.velocity.multiply(Math.max(0, 1 - this.drag * deltaTimeInSecond));\n      const velocity = this.velocity.clone().multiply(deltaTimeInSecond);\n      this.transform.position.add(velocity);\n      velocity.destroy();\n    }\n\n    // update rotation\n    if (this.freezeRotation) {\n      this.angularVelocity = 0;\n    } else {\n      if (Math.abs(this.angularVelocity) > 1e-6) {\n        this.angularVelocity *= Math.max(0, 1 - this.angularDrag * deltaTimeInSecond);\n\n        if (this.angularVelocity > this.maxAngularVelocity) {\n          this.angularVelocity = this.maxAngularVelocity;\n        }\n\n        this.transform.rotation += this.angularVelocity * deltaTimeInSecond;\n        this.transform.rotation = this.transform.rotation % DoublePI;\n      }\n    }\n\n    // update motion\n    (<InternalRigidbodyComponent>this).motion = (this.velocity.squareMagnitude() + Math.pow(this.angularVelocity, 2)) * 0.5;\n\n    this.lastPosition.copy(this.transform.position);\n  }\n\n  public reset(): void {\n    super.reset();\n    this.angularDrag = 0;\n    this.angularVelocity = 0;\n    this.drag = 0;\n    this.freezeRotation = false;\n    this.mass = 1;\n    this.maxAngularVelocity = Infinity;\n    this.velocity = Vector.Get();\n    this.useGravity = false;\n    this.mass = 1;\n    this.moi = 1000;\n    this.isSleeping = false;\n    this.sleepThreshold = 1;\n    this.sleepTimer = 0;\n    this.forces = [\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get()\n    ];\n    this.torques = [0, 0, 0, 0];\n    this.lastPosition = Vector.Get();\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this.velocity.destroy();\n    this.forces.forEach(force => force.destroy());\n    Vector.Put(this.velocity);\n    Vector.Put(this.lastPosition);\n    this.forces.forEach(force => Vector.Put(force));\n  }\n\n  private checkSleep(deltaTimeInSecond: number): void {\n    if (!this.isSleeping && this.sleepThreshold >= 0) {\n      if (this.motion < this.sleepThreshold) {\n        this.sleepTimer += deltaTimeInSecond;\n\n        if (this.sleepTimer > 0.5) {\n          this.sleepTimer = 0;\n          this.sleep();\n        }\n      } else {\n        this.sleepTimer = 0;\n      }\n    } else {\n      if (this.motion >= this.sleepThreshold) {\n        this.awake();\n      }\n    }\n\n    if (!this.transform.position.equalTo(this.lastPosition, 1)) {\n      this.awake();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/RigidbodyComponent.ts","import { Resource } from 'Engine/Resource/Resource';\nimport { addToArray } from 'Engine/Utility/ArrayUtility';\nimport { Observable } from 'rxjs/Observable';\n\nexport class Bundle extends Resource {\n\n  constructor(bundleName: string,\n              public readonly resources: ReadonlyArray<Resource> = []) {\n    super(bundleName);\n  }\n\n  public add(resource: Resource): void {\n    if (addToArray(<Resource[]>this.resources, resource)) {\n      this._isLoaded = false;\n    }\n\n    resource.onProgress$.subscribe(this.onProgress);\n  }\n\n  public async load(): Promise<void> {\n    if (this._isLoaded) {\n      return;\n    }\n\n    try {\n      await Promise.all(this.resources.map(async resource => resource.load()));\n    } catch (err) {\n      this.onError.next(err);\n    }\n\n    this._isLoaded = true;\n    this.onLoad.next();\n  }\n\n  public destroy(): void {\n    this.resources.forEach(resource => resource.destroy());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Resource/Bundle.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Screen } from 'Engine/Display/Screen';\nimport { GameObjectInitializer } from 'Engine/Core/GameObjectInitializer';\nimport { Color } from 'Engine/Display/Color';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Rect } from 'Engine/Math/Rect';\nimport { Matrix } from 'Engine/Math/Matrix';\nimport { Layer, AllBuiltInLayer } from 'Engine/Utility/Type';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Service } from 'Engine/Decorator/Service';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nexport const MainCamera = Symbol('MainCamera');\n\n/**\n * Camera\n */\n@Service(MainCamera)\nexport class Camera extends GameObject {\n\n  public aspect: number = 16 / 9;\n\n  public backgroundColor: Color = Color.Black;\n\n  public toWorldMatrix: Matrix = new Matrix();\n\n  public toScreenMatrix: Matrix = new Matrix();\n\n  /**\n   * Define which layers should be render.\n   */\n  public cullingMask: Layer = AllBuiltInLayer;\n\n  /**\n   * Define which layers could trigger mouse event.\n   */\n  public eventMask: Layer = AllBuiltInLayer;\n\n  /**\n   * Where on the screen is the camera rendered in normalized coordinates.\n   */\n  public rect: Rect = new Rect();\n\n  /**\n   * Camera visible area bounds in world coordinate.\n   */\n  public bounds: Bounds = new Bounds();\n\n  constructor(@Inject(BrowserDelegate) browser: BrowserDelegate,\n              @Inject(Screen) screen: Screen,\n              @Inject(GameObjectInitializer) gameObjectInitializer: GameObjectInitializer) {\n    super(gameObjectInitializer);\n    this.setSize(screen.width, screen.height);\n  }\n\n  public setSize(width: number, height: number): void {\n    this.toScreenMatrix.reset();\n\n    this.rect.width = width;\n    this.rect.height = height;\n\n    const halfWidth = width * 0.5;\n    const halfHeight = height * 0.5;\n\n    // set center as zero point.\n    this.toScreenMatrix.translate(halfWidth, halfHeight);\n    // reverse Y axis\n    this.toScreenMatrix.scale(0, -1);\n\n    this.bounds.extents.setTo(halfWidth, halfHeight);\n  }\n\n  public update(): void {\n    super.update();\n    /**\n     * Perform camera movement, rotation and scaling.\n     * Save those transform and restore after render.\n     */\n    this.toScreenMatrix.save();\n    this.toScreenMatrix.translate(-this.transform.position.x, -this.transform.position.y);\n    this.toScreenMatrix.rotate(this.transform.rotation);\n    this.toScreenMatrix.scale(this.transform.scale);\n\n    this.toWorldMatrix.invertFrom(this.toScreenMatrix);\n\n    this.bounds.center.copy(this.transform.position);\n  }\n\n  public postRender(): void {\n    super.postRender();\n    this.toScreenMatrix.restore();\n  }\n\n  public screenToWorld(point: Vector): Vector {\n    const result = point.clone();\n    this.toWorldMatrix.multiplyToPoint(result);\n    return result;\n  }\n\n  public worldToScreen(point: Vector): Vector {\n    const result = point.clone();\n    this.toScreenMatrix.multiplyToPoint(result);\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Core/Camera.ts","import { BaseObject } from 'Engine/Core/BaseObject';\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Tree } from 'Engine/Utility/Tree';\nimport { Bundle } from 'Engine/Resource/Bundle';\nimport { Camera, MainCamera } from 'Engine/Core/Camera';\nimport { addToArray,\n         removeFromArray } from 'Engine/Utility/ArrayUtility';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { Class } from 'Engine/Decorator/Class';\nimport { BroadPhaseCollisionResolver } from 'Engine/Physics/BroadPhaseCollisionResolver';\nimport { NarrowPhaseCollisionResolver } from 'Engine/Physics/NarrowPhaseCollisionResolver';\nimport { Vector } from 'Engine/Math/Vector';\nimport { GameObjectInitializer } from 'Engine/Core/GameObjectInitializer';\nimport { RenderProcess } from 'Engine/Render/RenderProcess';\nimport { ifdef, DEBUG_PHYSICS, DEBUG } from 'Engine/runtime';\nimport { Logger } from 'Engine/Core/Logger';\nimport { Screen } from 'Engine/Display/Screen';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Time } from 'Engine/Time/Time';\nimport { Color } from 'Engine/Display/Color';\nimport { PointerInput } from 'Engine/Input/PointerInput';\n\n/**\n * Scene manage game objects and resources.\n */\n@Class()\nexport class Scene extends BaseObject {\n\n  private _resources: Bundle;\n\n  /**\n   * Game objects store as a tree.\n   * If a parent was deactivated, all children of it will be deactivated.\n   */\n  protected gameObjects: Tree<GameObject>;\n\n  protected cameras: Camera[];\n\n  protected rightTop: Vector;\n\n  protected resizeSubscription: Subscription;\n\n  public get isLoaded(): boolean { return this._resources.isLoaded; }\n\n  public get resources(): Bundle { return this._resources; }\n\n  constructor(@Inject(BroadPhaseCollisionResolver) protected broadPhaseCollisionResolver: BroadPhaseCollisionResolver,\n              @Inject(NarrowPhaseCollisionResolver) protected narrowPhaseCollisionResolver: NarrowPhaseCollisionResolver,\n              @Inject(GameObjectInitializer) protected gameObjectInitializer: GameObjectInitializer,\n              @Inject(RenderProcess) protected renderProcess: RenderProcess,\n              @Inject(MainCamera) public mainCamera: Camera,\n              @Inject(Logger) protected logger: Logger,\n              @Inject(Screen) protected screen: Screen,\n              @Inject(BrowserDelegate) protected browser: BrowserDelegate,\n              @Inject(Time) protected time: Time,\n              @Inject(PointerInput) protected pointInput: PointerInput) {\n    super();\n  }\n\n  public reset(): void {\n    super.reset();\n    this._resources = new Bundle('default');\n    this.gameObjects = new Tree<GameObject>(<any>null);\n    this.cameras = [];\n    this.rightTop = Vector.Get();\n  }\n\n  public start(): void {\n    if (this.hasStarted) {\n      return;\n    }\n\n    super.start();\n    this.add(this.mainCamera);\n    this.resizeSubscription = this.browser.resize$.subscribe(() => this.onResize());\n    this.rightTop.setTo(this.screen.width, 0);\n  }\n\n  public destroy(): void {\n    super.destroy();\n\n    if (this.hasStarted) {\n      this.gameObjects.forEachChildren(gameObject => gameObject.destroy());\n      this.resizeSubscription.unsubscribe();\n    }\n\n    this.gameObjects.clear();\n\n    Vector.Put(this.rightTop);\n    delete this.rightTop;\n\n    this._resources.destroy();\n  }\n\n  public add(gameObject: GameObject, at?: Vector): boolean {\n    if (!this.gameObjects.add(gameObject.node)) {\n      return false;\n    }\n\n    if (!gameObject.hasStarted) {\n      gameObject.node.hide();\n    }\n\n    if (gameObject instanceof Camera) {\n      addToArray(this.cameras, gameObject);\n    }\n\n    if (at) {\n      gameObject.transform.position.copy(at);\n    }\n\n    return true;\n  }\n\n  public remove(gameObject: GameObject): boolean {\n    // ensure parent has visiblity to this node.\n    gameObject.node.show();\n\n    if (!this.gameObjects.remove(gameObject.node)) {\n      // It may return false if this game object's parent is not scene root.\n      return false;\n    }\n\n    if (gameObject instanceof Camera) {\n      removeFromArray(this.cameras, gameObject);\n    }\n\n    return true;\n  }\n\n  public has(gameObject: GameObject): boolean {\n    return this.gameObjects.hasChild(gameObject.node);\n  }\n\n  public async load(): Promise<void> {\n    await this._resources.load();\n  }\n\n  public fixedUpdate(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.fixedUpdate());\n    this.broadPhaseCollisionResolver.fixedUpdate();\n    this.narrowPhaseCollisionResolver.resolve(this.broadPhaseCollisionResolver.pairs);\n  }\n\n  public update(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.update());\n    this.broadPhaseCollisionResolver.update();\n    this.narrowPhaseCollisionResolver.resolve(this.broadPhaseCollisionResolver.pairs);\n    ifdef(DEBUG, () => this.logger.update());\n  }\n\n  public lateUpdate(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.lateUpdate());\n  }\n\n  public preRender(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.preRender());\n    /**\n     * TODO: It is a heavy move, should find some way to handle object layering.\n     */\n    this.gameObjects.sort((a, b) => b.data.layer - a.data.layer);\n  }\n\n  public render(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n    // TODO: camera order is an issue\n    this.renderProcess.useContext(ctx, width, height);\n    this.cameras.forEach(camera => this.renderProcess.render(camera, this.gameObjects));\n    ifdef(DEBUG_PHYSICS, () => this.cameras.forEach(camera => this.broadPhaseCollisionResolver.debugRender(ctx, camera)));\n    ifdef(DEBUG, () => {\n      this.logger.render(ctx);\n      this.debugRender(ctx);\n    });\n  }\n\n  public postRender(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.postRender());\n    /**\n     * Resove all game object initialization at final step to ensure their cycle start before first update call.\n     */\n    this.gameObjectInitializer.resolve();\n  }\n\n  public toString(): string {\n    return `Scene(${this.name})`;\n  }\n\n  protected debugRender(ctx: CanvasRenderingContext2D): void {\n    const deltaTime = ((this.time.deltaTime * 100) | 0) * 0.01;\n    const fps = ((1000 / deltaTime * 100) | 0) * 0.01;\n\n    ctx.save();\n    ctx.fillStyle = Color.White.toHexString();\n\n    const deltaTimeText = `deltaTime: ${deltaTime}`;\n    const deltaTimeWidth = ctx.measureText(deltaTimeText).width;\n    ctx.fillText(deltaTimeText, this.rightTop.x - deltaTimeWidth, this.rightTop.y + 12);\n\n    const fpsText = `fps: ${fps}`;\n    const fpsWidth = ctx.measureText(fpsText).width;\n    ctx.fillText(fpsText, this.rightTop.x - fpsWidth, this.rightTop.y + 30);\n\n    const screenPositionText = `screen: ${this.pointInput.lastPointerPosition.x}, ${this.pointInput.lastPointerPosition.y}`;\n    const screenPositionWidth = ctx.measureText(screenPositionText).width;\n    ctx.fillText(screenPositionText, this.rightTop.x - screenPositionWidth, this.rightTop.y + 48);\n\n    const worldPosition = this.pointInput.lastPointerPosition.clone();\n    this.mainCamera.toWorldMatrix.multiplyToPoint(worldPosition);\n    const worldPositionText = `world: ${worldPosition.x}, ${worldPosition.y}`;\n    const worldPositionWidth = ctx.measureText(worldPositionText).width;\n    ctx.fillText(worldPositionText, this.rightTop.x - worldPositionWidth, this.rightTop.y + 66);\n\n    ctx.restore();\n  }\n\n  protected onResize(): void {\n    this.rightTop.setTo(this.screen.width, 0);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Core/Scene.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Color } from 'Engine/Display/Color';\nimport { Class } from 'Engine/Decorator/Class';\n\n@Class()\nexport class TextRendererComponent extends RendererComponent {\n\n  public text = '';\n\n  public maxWidth = Number.MAX_VALUE;\n\n  public strokeColor: Color|undefined;\n\n  public fillColor: Color|undefined = Color.White;\n\n  public fontSize = 16;\n\n  public lineWidth = 1;\n\n  public fontFamily = 'Arial';\n\n  public fontWeight = 100;\n\n  public fontStyle: 'normal'|'italic'|'oblique'|'' = '';\n\n  public fontVariant: 'normal'|'small-caps'|'' = '';\n\n  private actualWidth = 0;\n\n  public update(): void {\n    super.update();\n\n    // Set font for measure text width.\n    this.ctx.font = `${this.fontStyle} ${this.fontVariant} ${this.fontWeight} ${this.fontSize}px ${this.fontFamily}`.trim();\n\n    this.actualWidth = this.ctx.measureText(this.text).width;\n\n    this.canvas.width = this.actualWidth;\n\n    // TODO: Ensure descender line of font can display\n    this.canvas.height = this.fontSize;\n  }\n\n  public render(): void {\n    const ctx = this.ctx;\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Set font again, because after resize canvas, it will be restore.\n    this.ctx.font = `${this.fontStyle} ${this.fontVariant} ${this.fontWeight} ${this.fontSize}px ${this.fontFamily}`;\n\n    if (this.fillColor) {\n      ctx.fillStyle = this.fillColor.toHexString();\n      ctx.fillText(this.text, 0, this.fontSize, this.maxWidth);\n    }\n\n    if (this.strokeColor) {\n      ctx.strokeStyle = this.strokeColor.toHexString();\n      ctx.lineWidth = this.lineWidth;\n      ctx.strokeText(this.text, 0, this.fontSize, this.maxWidth);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/TextRendererComponent.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Color } from 'Engine/Display/Color';\nimport { addToArray, removeFromArray } from 'Engine/Utility/ArrayUtility';\n\nexport class LineRendererComponent extends RendererComponent {\n\n  public lineWidth: number = 1;\n\n  public strokeColor: Color|undefined = Color.Red;\n\n  public fillColor: Color|undefined;\n\n  public closePath: boolean = false;\n\n  private _points: Vector[] = [];\n\n  public points(): ReadonlyArray<Vector> { return this._points; }\n\n  public addPoint(...points: Vector[]): void {\n    points.forEach(point => addToArray(this._points, point));\n  }\n\n  public removePoint(...points: Vector[]): void {\n    points.forEach(point => removeFromArray(this._points, point));\n  }\n\n  public clearPoints(): void {\n    this._points.forEach(point => point.destroy());\n    this._points.splice(0, this._points.length);\n  }\n\n  public update(): void {\n    super.update();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n\n    this._points.forEach(point => {\n      if (point.x < minX) {\n        minX = point.x;\n      }\n\n      if (point.x > maxX) {\n        maxX = point.x;\n      }\n\n      if (point.y < minY) {\n        minY = point.y;\n      }\n\n      if (point.y > maxY) {\n        maxY = point.y;\n      }\n    });\n\n    this.canvas.width = maxX - minX + this.lineWidth * 2;\n    this.canvas.height = maxY - minX + this.lineWidth * 2;\n  }\n\n  public render(): void {\n\n    const count = this._points.length;\n\n    if (count === 0) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    ctx.save();\n\n    // move to center of canvas\n    ctx.translate(this.canvas.width * 0.5, this.canvas.height * 0.5);\n\n    const firstPoint = this._points[0];\n\n    ctx.lineWidth = this.lineWidth;\n\n    ctx.beginPath();\n\n    ctx.moveTo(firstPoint.x, firstPoint.y);\n\n    for (let i = 1; i < count; i++) {\n      const point = this._points[i];\n      ctx.lineTo(point.x, point.y);\n    }\n\n    if (this.closePath) {\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    ctx.closePath();\n\n    if (this.strokeColor) {\n      ctx.strokeStyle = this.strokeColor.toHexString();\n      ctx.stroke();\n    }\n\n    if (this.fillColor) {\n      ctx.fillStyle = this.fillColor.toHexString();\n      ctx.fill();\n    }\n\n    ctx.restore();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/LineRendererComponent.ts"],"sourceRoot":""}