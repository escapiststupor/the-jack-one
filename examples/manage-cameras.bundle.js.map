{"version":3,"sources":["webpack:///./Examples/manage-cameras.ts","webpack:///./Engine/Physics/RigidbodyComponent.ts","webpack:///./Engine/Render/SpriteRendererComponent.ts","webpack:///./Engine/Render/LineRendererComponent.ts","webpack:///./Engine/Render/TextRendererComponent.ts"],"names":[],"mappings":"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","file":"examples/manage-cameras.bundle.js","sourcesContent":["// tslint:disable max-classes-per-file\nimport 'Engine/preset';\n\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Component } from 'Engine/Core/Component';\nimport { Scene } from 'Engine/Core/Scene';\nimport { SceneManager } from 'Engine/Core/SceneManager';\nimport { Screen } from 'Engine/Display/Screen';\nimport { Camera } from 'Engine/Core/Camera';\nimport { instantiate, bootstrap } from 'Engine/runtime';\n\n// import { Time } from 'Engine/Time/Time';\n\nimport { Class } from 'Engine/Decorator/Class';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { Color } from 'Engine/Display/Color';\nimport { Bounds } from 'Engine/Display/Bounds';\n\nimport { Texture } from 'Engine/Resource/Texture';\n\nimport { Vector } from 'Engine/Math/Vector';\n\nimport { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { TextRendererComponent } from 'Engine/Render/TextRendererComponent';\n\nimport { PointerInput, PointerEvent } from 'Engine/Input/PointerInput';\n\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\n\nconst texture: Texture = new Texture('../assets/circle.png');\n\n@Class()\nclass Player extends GameObject {\n\n  private renderer: SpriteRendererComponent;\n\n  private body: RigidbodyComponent;\n\n  private destination: Vector = new Vector();\n\n  private moveSpeed: number = 100;\n\n  private isMoving: boolean = false;\n\n  public start(): void {\n    super.start();\n\n    const sprite = new Sprite(texture);\n    this.transform.scale.setTo(0.25);\n\n    this.renderer = this.addComponent(SpriteRendererComponent);\n    this.renderer.sprite = sprite;\n\n    this.body = this.addComponent(RigidbodyComponent);\n  }\n\n  public move(destination: Vector): void {\n    this.isMoving = true;\n    this.destination.copy(destination);\n    this.body.velocity\n      .copy(destination)\n      // dest - pos = relative\n      .subtract(this.transform.position)\n      .normalize()\n      .multiply(this.moveSpeed);\n  }\n\n  public stopMove(): void {\n    this.isMoving = false;\n    this.body.velocity.reset();\n  }\n\n  public update(): void {\n    super.update();\n\n    if (this.isMoving) {\n      if (this.transform.position.distanceTo(this.destination) < 10) {\n        this.stopMove();\n      }\n    }\n  }\n\n}\n\n@Class()\nclass Box extends GameObject {\n\n  private size: number = 300;\n\n  public start(): void {\n    super.start();\n\n    const outline = this.addComponent(LineRendererComponent);\n\n    const halfSize = this.size / 2;\n\n    outline.addPoint(\n      new Vector(halfSize, halfSize),\n      new Vector(halfSize, -halfSize),\n      new Vector(-halfSize, -halfSize),\n      new Vector(-halfSize, halfSize)\n    );\n\n    outline.closePath = true;\n\n    outline.strokeColor = Color.White;\n  }\n\n}\n\n@Class()\nclass Label extends GameObject {\n\n  private renderer: TextRendererComponent;\n\n  public text: string = '';\n\n  public start(): void {\n    super.start();\n    this.renderer = this.addComponent(TextRendererComponent);\n    this.renderer.text = this.text;\n  }\n\n}\n\n@Class()\nclass CameraFollow extends Component {\n\n  public bounds: Bounds = new Bounds();\n\n  private target: GameObject|null;\n\n  private isFollowing: boolean = false;\n\n  private relative: Vector = new Vector();\n\n  public follow(target: GameObject|null) : void { this.target = target; }\n\n  public update(): void {\n    if (!this.target) {\n      return;\n    }\n\n    const cameraPosition = this.host.transform.position;\n    const targetPosition = this.target.transform.position;\n\n    this.bounds.center.copy(cameraPosition);\n\n    if (this.isFollowing) {\n      cameraPosition.copy(targetPosition).add(this.relative);\n      if (this.bounds.containPoint(targetPosition)) {\n        this.isFollowing = false;\n      }\n    } else {\n      if (!this.bounds.containPoint(targetPosition)) {\n        this.isFollowing = true;\n        this.relative.copy(cameraPosition).subtract(targetPosition);\n      }\n    }\n  }\n\n}\n\n@Class()\nclass Game {\n\n  private player: Player = instantiate(Player);\n\n  private scene: Scene = instantiate(Scene);\n\n  private mainCamera: Camera = this.scene.mainCamera;\n\n  private subCamera: Camera = instantiate(Camera);\n\n  constructor(@Inject(SceneManager) sceneManager: SceneManager,\n              @Inject(PointerInput) pointerInput: PointerInput,\n              @Inject(Screen) private screen: Screen) {\n    this.scene.resources.add(texture);\n    this.scene.add(this.player);\n    this.scene.add(this.subCamera);\n    this.scene.add(instantiate(Box));\n    sceneManager.add(this.scene);\n\n    this.mainCamera.backgroundColor = Color.CreateByHexRgb('#4A687F');\n    const cameraFollow = this.mainCamera.addComponent(CameraFollow);\n    cameraFollow.bounds.extents.setTo(50, 50);\n    cameraFollow.follow(this.player);\n\n    const halfScreenWidth = screen.width * 0.5;\n\n    // split screen\n    this.mainCamera.setSize(halfScreenWidth, screen.height);\n    this.subCamera.setSize(halfScreenWidth, screen.height);\n    this.subCamera.rect.position.setTo(halfScreenWidth, 0);\n\n    pointerInput.pointerStart$.subscribe(e => this.onPointerStart(e));\n\n    const mainCameraLabel: Label = instantiate(Label);\n    mainCameraLabel.text = 'Main Camera, click to move';\n    mainCameraLabel.layer = 1 << 10;\n    this.scene.add(mainCameraLabel);\n    this.mainCamera.cullingMask = this.mainCamera.cullingMask | mainCameraLabel.layer;\n\n    const subCameraLabel: Label = instantiate(Label);\n    subCameraLabel.text = 'Sub Camera';\n    subCameraLabel.layer = 1 << 11;\n    this.scene.add(subCameraLabel);\n    this.subCamera.cullingMask = this.subCamera.cullingMask | subCameraLabel.layer;\n  }\n\n  private onPointerStart(e: PointerEvent): void {\n    const location = e.locations[0];\n    const halfScreenWidth = this.screen.width * 0.5;\n    if (location.x > halfScreenWidth) {\n      // do not handle sub camera\n      return;\n    }\n    const worldPosition = this.mainCamera.screenToWorld(location);\n    this.player.move(worldPosition);\n  }\n\n}\n\ninstantiate(Game);\n\nbootstrap().catch(console.error);\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/manage-cameras.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Component } from 'Engine/Core/Component';\nimport { TransformComponent } from 'Engine/Display/TransformComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Engine } from 'Engine/Core/Engine';\nimport { Time } from 'Engine/Time/Time';\nimport { ForceMode } from 'Engine/Physics/ForceMode';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\nimport { RequireComponent } from 'Engine/Decorator/RequireComponent';\nimport { Inject } from 'Engine/Decorator/Inject';\n\ninterface InternalRigidbodyComponent extends RigidbodyComponent {\n  motion: number;\n  inverseMass: number;\n  inverseMoi: number;\n}\n\nconst DoublePI = Math.PI * 2;\n\n@UniqueComponent()\n@RequireComponent([TransformComponent])\nexport class RigidbodyComponent extends Component {\n\n  public angularDrag: number = 0;\n\n  /**\n   * radians per second\n   */\n  public angularVelocity: number = 0;\n\n  public drag: number = 0;\n\n  public freezeRotation: boolean = false;\n\n  /**\n   * In kilogram\n   */\n  private _mass: number = 1;\n\n  public get mass(): number { return this._mass; }\n\n  public set mass(value: number) { this._mass = value; (<InternalRigidbodyComponent>this).inverseMass = 1 / value; }\n\n  public readonly inverseMass: number = 1;\n\n  /**\n   * moment of inertia\n   */\n  private _moi: number = 1000;\n\n  public get moi(): number { return this._moi; }\n\n  public set moi(value: number) { this._moi = value; (<InternalRigidbodyComponent>this).inverseMoi = 1 / value; }\n\n  public readonly inverseMoi: number = 0.001;\n\n  public maxAngularVelocity: number = Infinity;\n\n  /**\n   * pixel per second\n   */\n  public velocity: Vector = Vector.Get();\n\n  public useGravity: boolean = false;\n\n  public isSleeping: boolean = false;\n\n  public sleepThreshold: number = 1;\n\n  public readonly motion: number = 0;\n\n  private forces: Vector[] = [\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get()\n  ];\n\n  private torques: number[] = [0, 0, 0, 0];\n\n  private sleepTimer: number = 0;\n\n  private transform: TransformComponent;\n\n  private lastPosition: Vector = Vector.Get();\n\n  constructor(host: GameObject,\n              @Inject(Engine) private engine: Engine,\n              @Inject(Time) private time: Time) {\n    super(host);\n  }\n\n  public start(): void {\n    super.start();\n    this.transform = <TransformComponent>this.getComponent(TransformComponent);\n  }\n\n  public addForce(force: Vector, forceMode: ForceMode = ForceMode.Force): void {\n    this.forces[forceMode].add(force);\n  }\n\n  public addTorque(torque: number, forceMode: ForceMode = ForceMode.Force): void {\n    this.torques[forceMode] += torque;\n  }\n\n  public clearForce(): void {\n    this.forces.forEach(force => force.reset());\n  }\n\n  public clearTorque(): void {\n    for (let i = 0; i < this.torques.length; i++) {\n      this.torques[i] = 0;\n    }\n  }\n\n  public sleep(): void {\n    this.isSleeping = true;\n    this.velocity.reset();\n    this.angularVelocity = 0;\n    this.clearForce();\n    this.clearTorque();\n  }\n\n  public awake(): void {\n    this.isSleeping = false;\n    this.sleepTimer = 0;\n  }\n\n  public fixedUpdate(alpha: number): void {\n    super.fixedUpdate(alpha);\n\n    const deltaTimeInSecond = this.time.fixedDeltaTimeInSecond * alpha;\n\n    if (this.useGravity && !this.isSleeping) {\n      this.addForce(this.engine.gravity, ForceMode.Acceleration);\n    }\n\n    /**\n     * Force\n     * f = ma = m∆v/∆t\n     * ∆tf = m∆v\n     * ∆v = ∆tf/m\n     */\n    this.forces[ForceMode.Force].multiply(deltaTimeInSecond * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Force]);\n    this.forces[ForceMode.Force].reset();\n\n    /**\n     * Acceleration ignore mass.\n     */\n    this.forces[ForceMode.Acceleration].multiply(deltaTimeInSecond);\n    this.velocity.add(this.forces[ForceMode.Acceleration]);\n    this.forces[ForceMode.Acceleration].reset();\n\n    /**\n     * Impulse handle without delta time.\n     */\n    this.forces[ForceMode.Impulse].multiply(1 * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Impulse]);\n    this.forces[ForceMode.Impulse].reset();\n\n    /**\n     * VelocityChange without delta time and mass.\n     */\n    this.velocity.add(this.forces[ForceMode.VelocityChange]);\n    this.forces[ForceMode.VelocityChange].reset();\n\n    /**\n     * Torque\n     */\n    this.torques[ForceMode.Force] *= this.inverseMoi * deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Force];\n    this.torques[ForceMode.Force] = 0;\n\n    this.torques[ForceMode.Acceleration] *= deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Acceleration];\n    this.torques[ForceMode.Acceleration] = 0;\n\n    this.torques[ForceMode.Impulse] *= this.inverseMoi;\n    this.angularVelocity += this.torques[ForceMode.Impulse];\n    this.torques[ForceMode.Impulse] = 0;\n\n    this.angularVelocity += this.torques[ForceMode.VelocityChange];\n    this.torques[ForceMode.VelocityChange] = 0;\n\n    this.checkSleep(deltaTimeInSecond);\n\n    // update position\n    if (!this.velocity.isZero) {\n      this.velocity.multiply(Math.max(0, 1 - this.drag * deltaTimeInSecond));\n      const velocity = this.velocity.clone().multiply(deltaTimeInSecond);\n      this.transform.position.add(velocity);\n      velocity.destroy();\n    }\n\n    // update rotation\n    if (this.freezeRotation) {\n      this.angularVelocity = 0;\n    } else {\n      if (Math.abs(this.angularVelocity) > 1e-6) {\n        this.angularVelocity *= Math.max(0, 1 - this.angularDrag * deltaTimeInSecond);\n\n        if (this.angularVelocity > this.maxAngularVelocity) {\n          this.angularVelocity = this.maxAngularVelocity;\n        }\n\n        this.transform.rotation += this.angularVelocity * deltaTimeInSecond;\n        this.transform.rotation = this.transform.rotation % DoublePI;\n      }\n    }\n\n    // update motion\n    (<InternalRigidbodyComponent>this).motion = (this.velocity.squareMagnitude() + Math.pow(this.angularVelocity, 2)) * 0.5;\n\n    this.lastPosition.copy(this.transform.position);\n  }\n\n  public reset(): void {\n    super.reset();\n    this.angularDrag = 0;\n    this.angularVelocity = 0;\n    this.drag = 0;\n    this.freezeRotation = false;\n    this.mass = 1;\n    this.maxAngularVelocity = Infinity;\n    this.velocity = Vector.Get();\n    this.useGravity = false;\n    this.mass = 1;\n    this.moi = 1000;\n    this.isSleeping = false;\n    this.sleepThreshold = 1;\n    this.sleepTimer = 0;\n    this.forces = [\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get()\n    ];\n    this.torques = [0, 0, 0, 0];\n    this.lastPosition = Vector.Get();\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this.velocity.destroy();\n    this.forces.forEach(force => force.destroy());\n    Vector.Put(this.velocity);\n    Vector.Put(this.lastPosition);\n    this.forces.forEach(force => Vector.Put(force));\n  }\n\n  private checkSleep(deltaTimeInSecond: number): void {\n    if (!this.isSleeping && this.sleepThreshold >= 0) {\n      if (this.motion < this.sleepThreshold) {\n        this.sleepTimer += deltaTimeInSecond;\n\n        if (this.sleepTimer > 0.5) {\n          this.sleepTimer = 0;\n          this.sleep();\n        }\n      } else {\n        this.sleepTimer = 0;\n      }\n    } else {\n      if (this.motion >= this.sleepThreshold) {\n        this.awake();\n      }\n    }\n\n    if (!this.transform.position.equalTo(this.lastPosition, 1)) {\n      this.awake();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/RigidbodyComponent.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\n\n@UniqueComponent()\nexport class SpriteRendererComponent extends RendererComponent {\n\n  /**\n   * The sprite to render.\n   */\n  public sprite: Sprite|undefined;\n\n  public update(): void {\n    super.update();\n    if (this.sprite) {\n      const { width, height } = this.sprite;\n      this.canvas.width = width;\n      this.canvas.height = height;\n    }\n  }\n\n  public render(): void {\n    if (!this.sprite) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const { width, height } = this.canvas;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.save();\n\n    ctx.drawImage(this.sprite.canvas, 0, 0);\n\n    ctx.restore();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/SpriteRendererComponent.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Color } from 'Engine/Display/Color';\nimport { addToArray, removeFromArray } from 'Engine/Utility/ArrayUtility';\n\nexport class LineRendererComponent extends RendererComponent {\n\n  public lineWidth: number = 1;\n\n  public strokeColor: Color|undefined = Color.Red;\n\n  public fillColor: Color|undefined;\n\n  public closePath: boolean = false;\n\n  private _points: Vector[] = [];\n\n  public points(): ReadonlyArray<Vector> { return this._points; }\n\n  public addPoint(...points: Vector[]): void {\n    points.forEach(point => addToArray(this._points, point));\n  }\n\n  public removePoint(...points: Vector[]): void {\n    points.forEach(point => removeFromArray(this._points, point));\n  }\n\n  public clearPoints(): void {\n    this._points.forEach(point => point.destroy());\n    this._points.splice(0, this._points.length);\n  }\n\n  public update(): void {\n    super.update();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n\n    this._points.forEach(point => {\n      if (point.x < minX) {\n        minX = point.x;\n      }\n\n      if (point.x > maxX) {\n        maxX = point.x;\n      }\n\n      if (point.y < minY) {\n        minY = point.y;\n      }\n\n      if (point.y > maxY) {\n        maxY = point.y;\n      }\n    });\n\n    this.canvas.width = maxX - minX + this.lineWidth * 2;\n    this.canvas.height = maxY - minX + this.lineWidth * 2;\n  }\n\n  public render(): void {\n\n    const count = this._points.length;\n\n    if (count === 0) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    ctx.save();\n\n    // move to center of canvas\n    ctx.translate(this.canvas.width * 0.5, this.canvas.height * 0.5);\n\n    const firstPoint = this._points[0];\n\n    ctx.lineWidth = this.lineWidth;\n\n    ctx.beginPath();\n\n    ctx.moveTo(firstPoint.x, firstPoint.y);\n\n    for (let i = 1; i < count; i++) {\n      const point = this._points[i];\n      ctx.lineTo(point.x, point.y);\n    }\n\n    if (this.closePath) {\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    ctx.closePath();\n\n    if (this.strokeColor) {\n      ctx.strokeStyle = this.strokeColor.toHexString();\n      ctx.stroke();\n    }\n\n    if (this.fillColor) {\n      ctx.fillStyle = this.fillColor.toHexString();\n      ctx.fill();\n    }\n\n    ctx.restore();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/LineRendererComponent.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Color } from 'Engine/Display/Color';\nimport { Class } from 'Engine/Decorator/Class';\n\n@Class()\nexport class TextRendererComponent extends RendererComponent {\n\n  public text: string = '';\n\n  public maxWidth: number = Number.MAX_VALUE;\n\n  public strokeColor: Color|undefined;\n\n  public fillColor: Color|undefined = Color.White;\n\n  public fontSize: number = 16;\n\n  public fontFamily: string = 'Arial';\n\n  public fontWeight: number = 100;\n\n  public fontStyle: 'normal'|'italic'|'oblique' = 'normal';\n\n  public fontVariant: 'normal'|'small-caps' = 'normal';\n\n  private actualWidth: number = 0;\n\n  public update(): void {\n    super.update();\n\n    this.ctx.font = `${this.fontStyle} ${this.fontVariant} ${this.fontWeight} ${this.fontSize}px ${this.fontFamily}`;\n\n    this.actualWidth = this.ctx.measureText(this.text).width;\n\n    this.canvas.width = this.actualWidth;\n\n    // TODO: Ensure descender line of font can display\n    this.canvas.height = this.fontSize;\n  }\n\n  public render(): void {\n    const ctx = this.ctx;\n\n    if (this.strokeColor) {\n      ctx.strokeStyle = this.strokeColor.toHexString();\n      ctx.strokeText(this.text, 0, this.fontSize, this.maxWidth);\n    }\n\n    if (this.fillColor) {\n      ctx.fillStyle = this.fillColor.toHexString();\n      ctx.fillText(this.text, 0, this.fontSize, this.maxWidth);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/TextRendererComponent.ts"],"sourceRoot":""}