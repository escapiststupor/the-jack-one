{"version":3,"sources":["webpack:///./Engine/Physics/BoxColliderComponent.ts","webpack:///./Engine/Physics/ColliderType.ts","webpack:///./Engine/Math/Ray.ts","webpack:///./Engine/Physics/CollisionContact.ts","webpack:///./Engine/Input/PointerInput.ts","webpack:///./Engine/Input/MouseInput.ts","webpack:///./Engine/Input/TouchInput.ts","webpack:///./Engine/Math/Projection.ts","webpack:///./Engine/Render/CircleRendererComponent.ts","webpack:///./Engine/Math/Line.ts","webpack:///./Engine/Physics/PolygonColliderComponent.ts","webpack:///./Engine/Physics/ColliderComponent.ts","webpack:///./Engine/Physics/CollisionJumpTable.ts","webpack:///./Engine/Physics/CircleColliderComponent.ts","webpack:///./Examples/physics.ts","webpack:///./Engine/Math/Random.ts"],"names":[],"mappings":"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","file":"examples/physics.bundle.js","sourcesContent":["import { GameObject } from 'Engine/Base/GameObject';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Line } from 'Engine/Math/Line';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { Color } from 'Engine/Display/Color';\nimport { PolygonColliderComponent } from 'Engine/Physics/PolygonColliderComponent';\n\n/**\n * TODO:\n * This is really strange\n * If without access GameObject ever, it will not be loaded.\n * Workaround via forward get temporarily\n * It should be a webpack relevant bug...\n */\nforwardRef(() => GameObject);\n\nexport class BoxColliderComponent extends PolygonColliderComponent {\n\n  public size: Vector = new Vector();\n\n  constructor(host: GameObject) {\n    super(host);\n    for (let i = 0; i < 4; i++) {\n      this.points.push(new Vector());\n      this._cachedPoints.push(new Vector());\n      this._cachedAxes.push(new Vector());\n      this._cachedSides.push(new Line(new Vector(), new Vector()));\n    }\n  }\n\n  /**\n   * Optimized calculation for rectangle\n   * @override\n   */\n  public calculate(): void {\n    const toWorldMatrix = this.host.transform.toWorldMatrix;\n\n    const halfSizeX = this.size.x / 2;\n    const halfSizeY = this.size.y / 2;\n\n    this.points[0].setTo(-halfSizeX, -halfSizeY);\n    this.points[1].setTo( halfSizeX, -halfSizeY);\n    this.points[2].setTo( halfSizeX,  halfSizeY);\n    this.points[3].setTo(-halfSizeX,  halfSizeY);\n\n    this._cachedPoints[0].setTo(-halfSizeX, -halfSizeY);\n    this._cachedPoints[1].setTo( halfSizeX, -halfSizeY);\n    this._cachedPoints[2].setTo( halfSizeX,  halfSizeY);\n    this._cachedPoints[3].setTo(-halfSizeX,  halfSizeY);\n    this._cachedPoints.forEach(point => toWorldMatrix.multiplyToPoint(point));\n\n    for (let i = 0; i < 4; i++) {\n      const p1 = this._cachedPoints[i];\n      const p2 = this._cachedPoints[(i + 1) % 4];\n      const axis = this._cachedAxes[i];\n      const side = this._cachedSides[i];\n      axis.copy(p1).subtract(p2);\n      side.begin.copy(p1);\n      side.end.copy(p2);\n    }\n\n    // update bounds\n    const x = this._cachedPoints.map(p => p.x);\n    const y = this._cachedPoints.map(p => p.y);\n    const minX = Math.min(...x);\n    const minY = Math.min(...y);\n    const maxX = Math.max(...x);\n    const maxY = Math.max(...y);\n\n    this.bounds.center.setTo((maxX + minX) / 2, (maxY + minY) / 2);\n    this.bounds.extents.setTo((maxX - minX) / 2, (maxY - minY) / 2);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/BoxColliderComponent.ts","export enum ColliderType {\n  Static,\n  Rigidbody,\n  Kinematic\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/ColliderType.ts","import { Vector } from 'Engine/Math/Vector';\nimport { Line } from 'Engine/Math/Line';\n\nexport class Ray {\n\n  constructor(public readonly origin: Vector = new Vector(),\n              public readonly direction: Vector = new Vector()) {\n    this.direction.normalize();\n  }\n\n  public getPoint(distance: number): Vector {\n    return this.direction.clone().scale(distance).add(this.origin);\n  }\n\n  /**\n   * Return distance (or times) from this ray to another\n   * Return -1 means no intersect\n   * @see https://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/565282#565282\n   * @param another\n   */\n  public intersect(another: Ray|Line): number {\n    const p = this.origin;\n    const r = this.direction;\n    let q: Vector;\n    let s: Vector;\n    let l = 0;\n    if (another instanceof Ray) {\n      q = another.origin;\n      s = another.direction;\n    } else {\n      q = another.begin;\n      s = another.getDirection();\n      l = another.length;\n    }\n\n    const pq = q.clone().subtract(p);\n    const r_x_s = r.cross(s);\n    const pq_x_r = pq.cross(r);\n\n    if (r_x_s === 0) {\n      return -1;\n    } else {\n      const t = pq.cross(s) / r_x_s;\n      const u = pq_x_r / r_x_s;\n\n      /**\n       * if another is a line, it may intersect at a point out of line\n       * check line's length\n       */\n      if (l && u > l) {\n        return -1;\n      }\n\n      // if u less than 0 means ray is going far way, cross at aother side\n      if (u >= 0 && t >= 0) {\n        return t;\n      }\n    }\n\n    return -1;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Ray.ts","// tslint:disable max-func-body-length cyclomatic-complexity\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Recyclable } from 'Engine/Utility/Pool';\nimport { ForceMode } from 'Engine/Physics/ForceMode';\n\nexport class CollisionContact implements Recyclable {\n\n  private _canRecycle: boolean = false;\n\n  private _resolved: boolean = false;\n\n  get canRecycle(): boolean { return this._canRecycle; }\n\n  get resolved(): boolean { return this._resolved; }\n\n  constructor(public colliderA: ColliderComponent,\n              public colliderB: ColliderComponent,\n              public mtv: Vector,\n              public point: Vector,\n              public normal: Vector) {}\n\n  public resolve(): void {\n    if (this._resolved) {\n      return;\n    }\n\n    const a = this.colliderA;\n    const b = this.colliderB;\n\n    const bodyA = a.rigidbody;\n    const bodyB = b.rigidbody;\n\n    const shouldAwakeBodyA = bodyB ? !bodyB.isSleeping : false;\n    const shouldAwakeBodyB = bodyA ? !bodyA.isSleeping : false;\n\n    if (!bodyA && !bodyB) {\n      return;\n    }\n\n    const velocityA = bodyA ? bodyA.velocity : Vector.Zero;\n    const velocityB = bodyB ? bodyB.velocity : Vector.Zero;\n\n    const angularVelocityA = bodyA ? bodyA.angularVelocity : 0;\n    const angularVelocityB = bodyB ? bodyB.angularVelocity : 0;\n\n    const relativeA = this.point.clone().subtract(a.bounds.center);\n    const relativeB = this.point.clone().subtract(b.bounds.center);\n\n    const relativeVelocity = velocityB.clone()\n      .add(relativeB.cross(-angularVelocityB))\n      .subtract(velocityA)\n      .subtract(relativeA.cross(-angularVelocityA));\n\n    const rvDotNormal = relativeVelocity.dot(this.normal);\n\n    // Do not resolve if velocities are separating\n    if (rvDotNormal > 0) {\n      return;\n    }\n\n    const restitution = Math.min(this.colliderA.restitution, this.colliderB.restitution);\n\n    const inverseMassA = bodyA ? bodyA.inverseMass : 0;\n    const inverseMassB = bodyB ? bodyB.inverseMass : 0;\n    const sumOfInverseMass = inverseMassA + inverseMassB;\n\n    const inverseMoiA = bodyA ? bodyA.inverseMoi : 0;\n    const inverseMoiB = bodyB ? bodyB.inverseMoi : 0;\n\n    const j_moi_a = Vector.Cross(relativeA.cross(this.normal), relativeA).scale(inverseMoiA);\n    const j_moi_b = Vector.Cross(relativeB.cross(this.normal), relativeB).scale(inverseMoiB);\n    const j_moi = j_moi_a.add(j_moi_b).dot(this.normal);\n\n    // Calculate impulse scalar\n    // https://en.wikipedia.org/wiki/Collision_response\n    const j = -(1 + restitution) * rvDotNormal / (sumOfInverseMass + j_moi);\n\n    const impulse = this.normal.clone().scale(j);\n\n    if (bodyA && bodyB) {\n      this.mtv.scale(0.5);\n    }\n\n    if (bodyA) {\n      if (shouldAwakeBodyA && bodyA.isSleeping) {\n        bodyA.awake();\n      }\n\n      bodyA.host.transform.position.add(this.mtv.clone().scale(-1));\n      // impulse\n      bodyA.addForce(impulse.clone().scale(-1), ForceMode.Impulse);\n\n      // TODO: force at specific point should cause torque\n      // torque\n      // bodyA.addTorque(j * relativeA.cross(this.normal) , ForceMode.Impulse);\n    }\n\n    if (bodyB) {\n      if (shouldAwakeBodyB && bodyB.isSleeping) {\n        bodyB.awake();\n      }\n\n      bodyB.host.transform.position.add(this.mtv);\n      // impulse\n      bodyB.addForce(impulse, ForceMode.Impulse);\n\n      // TODO: force at specific point should cause torque\n      // torque\n      // bodyB.addTorque(j * -relativeB.cross(this.normal) , ForceMode.Impulse);\n    }\n\n    const tangent = this.normal.normal();\n\n    let frictionImpulse: Vector;\n\n    const jt_moi_a = Vector.Cross(relativeA.cross(tangent), relativeA).scale(inverseMoiA);\n    const jt_moi_b = Vector.Cross(relativeB.cross(tangent), relativeB).scale(inverseMoiB);\n    const jt_moi = jt_moi_a.add(jt_moi_b).dot(tangent);\n\n    // Solve for the tangent vector\n    const t = relativeVelocity.clone().subtract(this.normal.clone().scale(rvDotNormal)).normalize();\n\n    // Solve for magnitude to apply along the friction vector\n    const jt = -relativeVelocity.dot(t) / (sumOfInverseMass + jt_moi);\n\n    // PythagoreanSolve = A^2 + B^2 = C^2, solving for C given A and B\n    // Use to approximate mu given friction coefficients of each body\n    const mu = Math.sqrt(Math.pow(this.colliderA.friction, 2) + Math.pow(this.colliderB.friction, 2));\n\n    // Clamp magnitude of friction and create impulse vector\n    // const frictionImpulse = tangent.clone();\n    if (Math.abs( jt ) < j * mu) {\n      frictionImpulse = t.clone().scale(jt);\n    } else {\n      frictionImpulse = t.clone().scale(-j * mu);\n    }\n\n    if (bodyA) {\n      bodyA.addForce(frictionImpulse.clone().scale(-1), ForceMode.Impulse);\n      bodyA.addTorque(-frictionImpulse.dot(t) * relativeA.cross(t) , ForceMode.Impulse);\n    }\n\n    if (bodyB) {\n      bodyB.addForce(frictionImpulse, ForceMode.Impulse);\n      bodyB.addTorque(frictionImpulse.dot(t) * relativeB.cross(t) , ForceMode.Impulse);\n    }\n  }\n\n  public destroy(): void {\n    this._canRecycle = true;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/CollisionContact.ts","import { Observable } from 'rxjs/Observable';\nimport { MouseInput } from 'Engine/Input/MouseInput';\nimport { TouchInput } from 'Engine/Input/TouchInput';\nimport { listToArray } from 'Engine/Utility/DOM';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Service } from 'Engine/Decorator/Service';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n// interface TouchEvent extends UIEvent {\n//     readonly altKey: boolean;\n//     readonly changedTouches: TouchList;\n//     readonly charCode: number;\n//     readonly ctrlKey: boolean;\n//     readonly keyCode: number;\n//     readonly metaKey: boolean;\n//     readonly shiftKey: boolean;\n//     readonly targetTouches: TouchList;\n//     readonly touches: TouchList;\n//     readonly which: number;\n// }\n\n// interface MouseEvent extends UIEvent {\n//     readonly altKey: boolean;\n//     readonly button: number;\n//     readonly buttons: number;\n//     readonly clientX: number;\n//     readonly clientY: number;\n//     readonly ctrlKey: boolean;\n//     readonly fromElement: Element;\n//     readonly layerX: number;\n//     readonly layerY: number;\n//     readonly metaKey: boolean;\n//     readonly movementX: number;\n//     readonly movementY: number;\n//     readonly offsetX: number;\n//     readonly offsetY: number;\n//     readonly pageX: number;\n//     readonly pageY: number;\n//     readonly relatedTarget: EventTarget;\n//     readonly screenX: number;\n//     readonly screenY: number;\n//     readonly shiftKey: boolean;\n//     readonly toElement: Element;\n//     readonly which: number;\n//     readonly x: number;\n//     readonly y: number;\n//     getModifierState(keyArg: string): boolean;\n// }\n\nexport interface PointerEvent {\n  altKey: boolean;\n  ctrlKey: boolean;\n  metaKey: boolean;\n  shiftKey: boolean;\n  locations: ReadonlyArray<Vector>;\n}\n\n@Service()\nexport class PointerInput {\n\n  public get pointerStart$(): Observable<PointerEvent> {\n    return Observable.merge(\n      this.mouseInput.mouseDown$.map(e => this.parseMouseEvent(e)),\n      this.touchInput.touchStart$.map(e => this.parseTouchEvent(e))\n    );\n  }\n\n  public get pointerEnd$(): Observable<PointerEvent> {\n    return Observable.merge(\n      this.mouseInput.mouseUp$.map(e => this.parseMouseEvent(e)),\n      this.touchInput.touchEnd$.map(e => this.parseTouchEvent(e))\n    );\n  }\n\n  public get pointerMove$(): Observable<PointerEvent> {\n    return Observable.merge(\n      this.mouseInput.mouseMove$.map(e => this.parseMouseEvent(e)),\n      this.touchInput.touchMove$.map(e => this.parseTouchEvent(e))\n    );\n  }\n\n  constructor(private mouseInput: MouseInput,\n              private touchInput: TouchInput) {}\n\n  private parseMouseEvent(e: MouseEvent): PointerEvent {\n    return {\n      altKey: e.altKey,\n      ctrlKey: e.ctrlKey,\n      shiftKey: e.shiftKey,\n      metaKey: e.metaKey,\n      locations: [Vector.Get(e.clientX, e.clientY)]\n    };\n  }\n\n  private parseTouchEvent(e: TouchEvent): PointerEvent {\n    const locations: Vector[] = [];\n\n    listToArray<Touch|null>(e.touches).forEach(touch => {\n      if (touch) {\n        locations.push(Vector.Get(touch.clientX, touch.clientY));\n      }\n    });\n\n    return {\n      altKey: e.altKey,\n      ctrlKey: e.ctrlKey,\n      shiftKey: e.shiftKey,\n      metaKey: e.metaKey,\n      locations\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Input/PointerInput.ts","import { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Observable } from 'rxjs/Observable';\nimport { Service } from 'Engine/Decorator/Service';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n@Service()\nexport class MouseInput {\n\n  public get click$(): Observable<MouseEvent> { return this.browserDelegate.click$; }\n\n  public get mouseMove$(): Observable<MouseEvent> { return this.browserDelegate.mouseMove$; }\n\n  public get mouseDown$(): Observable<MouseEvent> { return this.browserDelegate.mouseDown$; }\n\n  public get mouseUp$(): Observable<MouseEvent> { return this.browserDelegate.mouseUp$; }\n\n  public get wheel$(): Observable<MouseEvent> { return this.browserDelegate.wheel$; }\n\n  constructor(private browserDelegate: BrowserDelegate) {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Input/MouseInput.ts","import { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Observable } from 'rxjs/Observable';\nimport { Service } from 'Engine/Decorator/Service';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n@Service()\nexport class TouchInput {\n\n  public get touchStart$(): Observable<TouchEvent> { return this.browserDelegate.touchStart$; }\n\n  public get touchEnd$(): Observable<TouchEvent> { return this.browserDelegate.touchEnd$; }\n\n  public get touchCancel$(): Observable<TouchEvent> { return this.browserDelegate.touchCancel$; }\n\n  public get touchMove$(): Observable<TouchEvent> { return this.browserDelegate.touchMove$; }\n\n  constructor(private browserDelegate: BrowserDelegate) {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Input/TouchInput.ts","import { Pool, Recyclable } from 'Engine/Utility/Pool';\n\nexport class Projection implements Recyclable {\n\n  private _canRecycle: boolean = false;\n\n  get canRecycle(): boolean { return this._canRecycle; }\n\n  constructor(public min: number,\n              public max: number) {}\n\n  public overlaps(another: Projection): boolean {\n    return this.max > another.min && this.min < another.max;\n  }\n\n  public getOverlap(another: Projection): number {\n    if (!this.overlaps(another)) {\n      return 0;\n    }\n\n    return this.max > another.max ? another.max - this.min : this.max - another.min;\n  }\n\n  public destroy(): void {\n    this._canRecycle = true;\n  }\n\n  public toString(): string {\n    return `Projection (${this.min}, ${this.max})`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Projection.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Matrix } from 'Engine/Math/Matrix';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Color } from 'Engine/Display/Color';\n\nexport class CircleRendererComponent extends RendererComponent {\n\n  public radius: number = 60;\n\n  public lineWidth: number = 1;\n\n  public strokeColor: Color = Color.Red;\n\n  public center: Vector = new Vector();\n\n  public startAngle: number = 0;\n\n  public endAngle: number = Math.PI * 2;\n\n  public anticlockwise: boolean = false;\n\n  public useLocalCoordinate: boolean = true;\n\n  public update(): void {\n    super.update();\n    this.calculateBounds();\n  }\n\n  public render(ctx: CanvasRenderingContext2D, toScreenMatrix: Matrix): void {\n\n    ctx.save();\n\n    const m = toScreenMatrix.clone();\n\n    if (this.useLocalCoordinate) {\n      m.multiply(this.transform.toWorldMatrix);\n    }\n\n    /**\n     * reverse first to correct y-axis and rotate direction\n     */\n    m.setScaling(-1, -1);\n\n    ctx.transform(\n      m[0][0], m[0][1],\n      m[1][0], m[1][1],\n      m[0][2], m[1][2]\n    );\n\n    ctx.lineWidth = this.lineWidth;\n\n    ctx.strokeStyle = this.strokeColor.toHexString();\n\n    ctx.beginPath();\n\n    const center = this.center.clone();\n\n    ctx.arc(\n      center.x,\n      center.y,\n      this.radius,\n      this.startAngle,\n      this.endAngle,\n      this.anticlockwise\n    );\n\n    ctx.closePath();\n\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  private calculateBounds(): void {\n    this.bounds.center.copy(this.center);\n    this.bounds.extents.setTo(this.radius, this.radius);\n\n    if (this.useLocalCoordinate) {\n      this.bounds.center.add(this.transform.position);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/CircleRendererComponent.ts","import { Vector } from 'Engine/Math/Vector';\n\nexport class Line {\n\n  constructor(public begin: Vector,\n              public end: Vector) {}\n\n  public get slope(): number {\n    return (this.end.y - this.begin.y) / (this.end.x - this.begin.x);\n  }\n\n  public get intercept(): number {\n    return this.begin.y - this.slope * this.begin.x;\n  }\n\n  public get length(): number {\n    return this.begin.distanceTo(this.end);\n  }\n\n  public getLength(): number {\n    return this.begin.distanceTo(this.end);\n  }\n\n  public getDirection(): Vector {\n    return this.end.clone().subtract(this.begin).normalize();\n  }\n\n  /**\n   * Resolve given point with given axis by this line's slope and intercept.\n   * Answer may not lay on this line.\n   * @param point The point want to resolve.\n   * @param axis Value of axis has been known.\n   */\n  public resolvePoint(point: Vector, axis: 'x'|'y'): void {\n    switch (axis) {\n      case 'x':\n        point.setTo(point.x, this.slope * point.x + this.intercept);\n        break;\n      case 'y':\n        point.setTo((point.y - this.intercept) / this.slope, point.y);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * @see http://stackoverflow.com/a/11908158/109458\n   */\n  public hasPoint(point: Vector, threshold: number = 1e-6): boolean {\n    const dxc = point.x - this.begin.x;\n    const dyc = point.y - this.begin.y;\n\n    const dxl = this.end.x - this.begin.x;\n    const dyl = this.end.y - this.begin.y;\n\n    const cross = dxc * dyl - dyc * dxl;\n\n    if (Math.abs(cross) > threshold) {\n      return false;\n    }\n\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ?\n        this.begin.x <= point.x && point.x <= this.end.x :\n        this.end.x <= point.x && point.x <= this.begin.x;\n    } else {\n      return dyl > 0 ?\n        this.begin.y <= point.y && point.y <= this.end.y :\n        this.end.y <= point.y && point.y <= this.begin.y;\n    }\n  }\n\n  public toString(): string {\n    return `Line (${this.begin} -> ${this.end})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Line.ts","import { GameObject } from 'Engine/Base/GameObject';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Line } from 'Engine/Math/Line';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { CollisionJumpTable } from 'Engine/Physics/CollisionJumpTable';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { Color } from 'Engine/Display/Color';\n\n/**\n * @see BoxColliderComponent\n */\nforwardRef(() => GameObject);\n\nexport class PolygonColliderComponent extends ColliderComponent {\n\n  /**\n   * Points for polygon shape definition.\n   */\n  public points: Vector[] = [];\n\n  /**\n   * Cache points, axes and sides in world coordinate information for physics calculation.\n   */\n  protected readonly _cachedPoints: Vector[] = [];\n  protected readonly _cachedAxes: Vector[] = [];\n  protected readonly _cachedSides: Line[] = [];\n\n  /**\n   * Debug draw collider shape\n   */\n  protected debugColliderRenderer: LineRendererComponent|null = null;\n\n  /**\n   * Debug draw AABB\n   */\n  protected debugBoundsRenderer: LineRendererComponent|null = null;\n\n  /**\n   * Debug draw collider direction\n   */\n  protected debugDirectionRenderer: LineRendererComponent|null = null;\n\n  @Inject(CollisionJumpTable)\n  protected collisionJumpTable: CollisionJumpTable;\n\n  public get cachedPoints(): ReadonlyArray<Vector> { return this._cachedPoints; }\n\n  public get cachedAxes(): ReadonlyArray<Vector> { return this._cachedAxes; }\n\n  public get cachedSides(): ReadonlyArray<Line> { return this._cachedSides; }\n\n  public fixedUpdate(): void {\n    this.calculate();\n  }\n\n  public update(): void {\n    if (this.debug) {\n      const isSleep = this.rigidbody ? this.rigidbody.isSleeping : true;\n      const color = isSleep ? Color.Green : Color.Red;\n\n      if (!this.debugColliderRenderer) {\n        this.debugColliderRenderer = this.addComponent(LineRendererComponent);\n        this.debugColliderRenderer.useLocalCoordinate = false;\n        this.debugColliderRenderer.closePath = true;\n      }\n\n      if (!this.debugBoundsRenderer) {\n        this.debugBoundsRenderer = this.addComponent(LineRendererComponent);\n        this.debugBoundsRenderer.useLocalCoordinate = false;\n        this.debugBoundsRenderer.closePath = true;\n        this.debugBoundsRenderer.strokeColor = Color.Cyan;\n      }\n\n      if (!this.debugDirectionRenderer) {\n        this.debugDirectionRenderer = this.addComponent(LineRendererComponent);\n        this.debugDirectionRenderer.useLocalCoordinate = false;\n      }\n\n      this.debugColliderRenderer.strokeColor = color;\n      this.debugDirectionRenderer.strokeColor = color;\n\n      this.debugColliderRenderer.clearPoints();\n      if (this._cachedPoints.length > 1) {\n        this.debugColliderRenderer.addPoint(...this._cachedPoints);\n      }\n\n      const min = this.bounds.min;\n      const max = this.bounds.max;\n\n      this.debugBoundsRenderer.clearPoints();\n      this.debugBoundsRenderer.addPoint(\n        new Vector(min.x, min.y),\n        new Vector(min.x, max.y),\n        new Vector(max.x, max.y),\n        new Vector(max.x, min.y)\n      );\n\n      const rotation = this.host.transform.rotation;\n      const direction = new Vector(Math.cos(rotation), Math.sin(rotation));\n      const ray = new Ray(this.bounds.center.clone(), direction.clone());\n      const point = this.rayCast(ray) || direction;\n      const center = this._cachedPoints.reduce((result, curr) => result.add(curr), new Vector()).scale(1 / this._cachedPoints.length);\n      this.debugDirectionRenderer.clearPoints();\n      this.debugDirectionRenderer.addPoint(center, point);\n\n    } else {\n      if (this.debugColliderRenderer) {\n        this.removeComponent(this.debugColliderRenderer);\n        this.debugColliderRenderer = null;\n      }\n      if (this.debugBoundsRenderer) {\n        this.removeComponent(this.debugBoundsRenderer);\n        this.debugBoundsRenderer = null;\n      }\n      if (this.debugDirectionRenderer) {\n        this.removeComponent(this.debugDirectionRenderer);\n        this.debugDirectionRenderer = null;\n      }\n    }\n  }\n\n  public calculate(): void {\n    const toWorldMatrix = this.host.transform.toWorldMatrix;\n    const count = this.points.length;\n    const diff = count - this._cachedPoints.length;\n\n    if (diff > 0) {\n      for (let i = 0; i < diff; i++) {\n        this._cachedPoints.push(new Vector());\n        this._cachedAxes.push(new Vector());\n        this._cachedSides.push(new Line(new Vector(), new Vector()));\n      }\n    } else if (diff < 0) {\n      this._cachedPoints.splice(0, -diff);\n      this._cachedAxes.splice(0, -diff);\n      this._cachedSides.splice(0, -diff);\n    }\n\n    this._cachedPoints.forEach((point, index) => point.copy(this.points[index]));\n    this._cachedPoints.forEach(point => toWorldMatrix.multiplyToPoint(point));\n\n    for (let i = 0; i < count; i++) {\n      const p1 = this._cachedPoints[i];\n      const p2 = this._cachedPoints[(i + 1) % count];\n      const axis = this._cachedAxes[i];\n      const side = this._cachedSides[i];\n      axis.copy(p1).subtract(p2);\n      side.begin.copy(p1);\n      side.end.copy(p2);\n    }\n\n    // update bounds\n    const x = this._cachedPoints.map(p => p.x);\n    const y = this._cachedPoints.map(p => p.y);\n    const minX = Math.min(...x);\n    const minY = Math.min(...y);\n    const maxX = Math.max(...x);\n    const maxY = Math.max(...y);\n\n    this.bounds.center.setTo((maxX + minX) / 2, (maxY + minY) / 2);\n    this.bounds.extents.setTo((maxX - minX) / 2, (maxY - minY) / 2);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined {\n    if (another instanceof PolygonColliderComponent) {\n      return this.collisionJumpTable.polygonPolygon(this, another);\n    } else if (another instanceof CircleColliderComponent) {\n      return this.collisionJumpTable.circlePolygon(another, this);\n    }\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public contains(point: Vector): boolean {\n    const ray = new Ray(point, Vector.Right);\n    const count = this._cachedSides.reduce((acc, side) => ray.intersect(side) === -1 ? acc : ++acc, 0);\n    return count % 2 !== 0;\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public rayCast(ray: Ray): Vector|undefined {\n    let minDistance = Number.MAX_VALUE;\n    let noIntersect = true;\n    this._cachedSides.forEach(side => {\n      const distance = ray.intersect(side);\n      if (distance > 0 && distance < minDistance) {\n        minDistance = distance;\n        noIntersect = false;\n      }\n    });\n\n    if (noIntersect) {\n      return;\n    }\n\n    return ray.getPoint(minDistance);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public project(axis: Vector): Projection {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    this._cachedPoints.forEach(point => {\n      const s = point.dot(axis);\n      min = Math.min(min, s);\n      max = Math.max(max, s);\n    });\n\n    return new Projection(min, max);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public getFurthestPoint(direction: Vector): Vector {\n    let max = -Number.MAX_VALUE;\n    let pointer = -1;\n    this._cachedPoints.forEach((point, index) => {\n      const dot = point.dot(direction);\n      if (dot > max) {\n        max = dot;\n        pointer = index;\n      }\n    });\n    return this._cachedPoints[pointer].clone();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/PolygonColliderComponent.ts","import { Inject } from 'Engine/Decorator/Inject';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { Component } from 'Engine/Base/Component';\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { ColliderType } from 'Engine/Physics/ColliderType';\nimport { BroadPhaseCollisionResolver } from 'Engine/Physics/BroadPhaseCollisionResolver';\n\ninterface InternalColliderComponent {\n  rigidbody: RigidbodyComponent|undefined;\n  type: ColliderType;\n}\n\nexport class ColliderComponent extends Component {\n\n  /**\n   * AABB bounds for broadphase collition detection\n   * It will be update by collider component.\n   */\n  public bounds: Bounds = new Bounds();\n\n  /**\n   * collider offset\n   */\n  public offset: Vector = new Vector();\n\n  /**\n   * A mask to determine which layer collider should calculate collision.\n   */\n  public layer: number = 1;\n\n  public debug: boolean = false;\n\n  public restitution: number = 0.2;\n\n  public friction: number = 0.99;\n\n  public isKinematic: boolean = false;\n\n  public readonly type: ColliderType = ColliderType.Static;\n\n  /**\n   * There are at least two kinds of collider:\n   * 1. static collider     : without rigidbody\n   * 2. rigidbody collider  : with rigidbody\n   */\n  public readonly rigidbody: RigidbodyComponent|undefined;\n\n  @Inject(BroadPhaseCollisionResolver)\n  private broadPhaseCollisionResolver: BroadPhaseCollisionResolver;\n\n  /**\n   * Calculate collision contact if body collided.\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined { return; }\n\n  /**\n   * Check point is contained in.\n   */\n  public contains(point: Vector): boolean { return false; }\n\n  /**\n   * Ray cast to and get intersect point.\n   */\n  public rayCast(ray: Ray): Vector|undefined { return; }\n\n  /**\n   * Project to given axis and return projection.\n   */\n  public project(axis: Vector): Projection { return new Projection(0, 0); }\n\n  /**\n   * Get furthest point through given direction.\n   */\n  public getFurthestPoint(direction: Vector): Vector { return this.bounds.center.clone(); }\n\n  public start(): void {\n    super.start();\n    (<InternalColliderComponent>this).rigidbody = this.getComponent(RigidbodyComponent);\n    if (this.rigidbody) {\n      if (this.isKinematic) {\n        (<InternalColliderComponent>this).type = ColliderType.Kinematic;\n        this.rigidbody.sleepThreshold = -1;\n      } else {\n        (<InternalColliderComponent>this).type = ColliderType.Rigidbody;\n      }\n    }\n\n    /**\n     * TODO: track after checked target has been added to scene\n     */\n    this.broadPhaseCollisionResolver.track(this);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/ColliderComponent.ts","import { Service } from 'Engine/Decorator/Service';\nimport { PolygonColliderComponent } from 'Engine/Physics/PolygonColliderComponent';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { Vector } from 'Engine/Math/Vector';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\n\n@Service()\nexport class CollisionJumpTable {\n\n  public circleCircle(colliderA: CircleColliderComponent, colliderB: CircleColliderComponent): CollisionContact|undefined {\n    const maxDistance = colliderA.radius + colliderB.radius;\n    const positionA = colliderA.bounds.center;\n    const positionB = colliderB.bounds.center;\n\n    const distance = positionA.distanceTo(positionB);\n\n    if (distance > maxDistance) {\n      return;\n    }\n\n    const normal = positionB.clone().subtract(positionA).scale(colliderA.radius / distance);\n\n    const point = positionA.clone().add(normal);\n\n    normal.normalize();\n\n    const mtv = normal.clone().scale(maxDistance - distance);\n\n    return new CollisionContact(colliderA, colliderB, mtv, point, normal);\n  }\n\n  public circlePolygon(colliderA: CircleColliderComponent, colliderB: PolygonColliderComponent): CollisionContact|undefined  {\n    const positionA = colliderA.bounds.center;\n    const positionB = colliderB.bounds.center;\n\n    const minAxis = this.circleBoxSAT(colliderA, colliderB);\n\n    if (!minAxis) {\n      return;\n    }\n\n    const ab = positionB.clone().subtract(positionA);\n    const hasSameDirection = minAxis.dot(ab) >= 0;\n    if (!hasSameDirection) {\n      minAxis.scale(-1);\n    }\n\n    const normal = minAxis.clone().normalize();\n\n    const pointA = colliderA.getFurthestPoint(minAxis);\n    const pointB = colliderB.getFurthestPoint(minAxis);\n    const containsPointA = colliderB.contains(pointA);\n    const containsPointB = colliderA.contains(pointB);\n\n    let contactPoint: Vector;\n\n    if (containsPointA && containsPointB) {\n      contactPoint = pointA.clone().add(pointB).scale(0.5);\n    } else if (containsPointA) {\n      contactPoint = pointA.clone();\n    } else if (containsPointB) {\n      contactPoint = pointB.clone();\n    } else {\n      // I am not sure what is this condition...\n      contactPoint = pointA.clone().add(pointB).scale(0.5);\n    }\n\n    return new CollisionContact(colliderA, colliderB, minAxis, contactPoint, normal);\n  }\n\n  public polygonPolygon(colliderA: PolygonColliderComponent, colliderB: PolygonColliderComponent): CollisionContact|undefined  {\n    const positionA = colliderA.bounds.center;\n    const positionB = colliderB.bounds.center;\n\n    const minAxis = this.polygonPolygonSAT(colliderA, colliderB);\n\n    if (!minAxis) {\n      return;\n    }\n\n    const ab = positionB.clone().subtract(positionA);\n    const hasSameDirection = minAxis.dot(ab) >= 0;\n    if (!hasSameDirection) {\n      minAxis.scale(-1);\n    }\n\n    const normal = minAxis.clone().normalize();\n\n    const pointA = colliderA.getFurthestPoint(minAxis);\n    const pointB = colliderB.getFurthestPoint(minAxis);\n    const containsPointA = colliderB.contains(pointA);\n    const containsPointB = colliderA.contains(pointB);\n\n    let contactPoint: Vector;\n\n    if (containsPointA && containsPointB) {\n      contactPoint = pointA.clone().add(pointB).scale(0.5);\n    } else if (containsPointA) {\n      contactPoint = pointA.clone();\n    } else if (containsPointB) {\n      contactPoint = pointB.clone();\n    } else {\n      // I am not sure what is this condition...\n      contactPoint = pointA.clone().add(pointB).scale(0.5);\n    }\n\n    return new CollisionContact(colliderA, colliderB, minAxis, contactPoint, normal);\n  }\n\n  /**\n   * Helper for calculate mtv through SAT\n   * @see http://www.dyn4j.org/2010/01/sat/\n   */\n  public polygonPolygonSAT(colliderA: PolygonColliderComponent, colliderB: PolygonColliderComponent): Vector|undefined {\n    const axes = [...colliderA.cachedAxes, ...colliderB.cachedAxes].map(axis => axis.normal());\n    return this.findMTV(colliderA, colliderB, axes);\n  }\n\n  /**\n   * Helper for calculate mtv through SAT\n   * @see http://www.dyn4j.org/2010/01/sat/\n   */\n  public circleBoxSAT(colliderA: CircleColliderComponent, colliderB: PolygonColliderComponent): Vector|undefined {\n    const positionA = colliderA.bounds.center;\n    const positionB = colliderB.bounds.center;\n    const ba = positionA.clone().subtract(positionB);\n    const closestPointOnPoly = colliderB.getFurthestPoint(ba);\n    const axes = [...colliderB.cachedAxes.map(axis => axis.normal()), positionA.clone().subtract(closestPointOnPoly).normalize()];\n\n    return this.findMTV(colliderA, colliderB, axes);\n  }\n\n  private findMTV(colliderA: ColliderComponent, colliderB: ColliderComponent, axes: ReadonlyArray<Vector>): Vector|undefined {\n    const count = axes.length;\n    let minOverlap = Number.MAX_VALUE;\n    let minIndex = -1;\n\n    for (let i = 0; i < count; i++) {\n      const projectionA = colliderA.project(axes[i]);\n      const projectionB = colliderB.project(axes[i]);\n      const overlap = projectionA.getOverlap(projectionB);\n      if (overlap <= 0) {\n        return;\n      } else {\n        if (overlap < minOverlap) {\n          minOverlap = overlap;\n          minIndex = i;\n        }\n      }\n    }\n\n    if (minIndex === -1) {\n      return;\n    }\n\n    if (axes[minIndex].isZero) {\n      return;\n    }\n\n    return axes[minIndex].clone().normalize().scale(minOverlap);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/CollisionJumpTable.ts","import { GameObject } from 'Engine/Base/GameObject';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { CircleRendererComponent } from 'Engine/Render/CircleRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { CollisionJumpTable } from 'Engine/Physics/CollisionJumpTable';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { PolygonColliderComponent } from 'Engine/Physics/PolygonColliderComponent';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Color } from 'Engine/Display/Color';\n\n/**\n * @see BoxColliderComponent\n */\nforwardRef(() => GameObject);\n\nexport class CircleColliderComponent extends ColliderComponent {\n\n  public radius: number = 0;\n\n  /**\n   * Debug draw collider shape\n   */\n  private debugColliderRenderer: CircleRendererComponent|null = null;\n\n  /**\n   * Debug draw AABB\n   */\n  private debugBoundsRenderer: LineRendererComponent|null = null;\n\n  /**\n   * Debug draw collider direction\n   */\n  protected debugDirectionRenderer: LineRendererComponent|null = null;\n\n  @Inject(CollisionJumpTable)\n  private collisionJumpTable: CollisionJumpTable;\n\n  public fixedUpdate(): void {\n    this.calculate();\n  }\n\n  public update(): void {\n    if (this.debug) {\n      const isSleep = this.rigidbody ? this.rigidbody.isSleeping : true;\n      const color = isSleep ? Color.Green : Color.Red;\n\n      if (!this.debugColliderRenderer) {\n        this.debugColliderRenderer = this.addComponent(CircleRendererComponent);\n        this.debugColliderRenderer.useLocalCoordinate = false;\n      }\n\n      if (!this.debugBoundsRenderer) {\n        this.debugBoundsRenderer = this.addComponent(LineRendererComponent);\n        this.debugBoundsRenderer.useLocalCoordinate = false;\n        this.debugBoundsRenderer.closePath = true;\n        this.debugBoundsRenderer.strokeColor = Color.Cyan;\n      }\n\n      if (!this.debugDirectionRenderer) {\n        this.debugDirectionRenderer = this.addComponent(LineRendererComponent);\n        this.debugDirectionRenderer.useLocalCoordinate = false;\n      }\n\n      this.debugColliderRenderer.strokeColor = color;\n      this.debugDirectionRenderer.strokeColor = color;\n\n      this.debugColliderRenderer.center.copy(this.bounds.center);\n      this.debugColliderRenderer.radius = this.radius;\n\n      this.debugBoundsRenderer.clearPoints();\n      const min = this.bounds.min;\n      const max = this.bounds.max;\n      this.debugBoundsRenderer.addPoint(\n        new Vector(min.x, min.y),\n        new Vector(min.x, max.y),\n        new Vector(max.x, max.y),\n        new Vector(max.x, min.y)\n      );\n\n      const rotation = this.host.transform.rotation;\n      const direction = new Vector(Math.cos(rotation), Math.sin(rotation));\n      const point = this.host.transform.position.clone().add(direction.scale(this.radius));\n      this.debugDirectionRenderer.clearPoints();\n      this.debugDirectionRenderer.addPoint(this.bounds.center, point);\n\n    } else {\n      if (this.debugColliderRenderer) {\n        this.removeComponent(this.debugColliderRenderer);\n        this.debugColliderRenderer = null;\n      }\n      if (this.debugBoundsRenderer) {\n        this.removeComponent(this.debugBoundsRenderer);\n        this.debugBoundsRenderer = null;\n      }\n      if (this.debugDirectionRenderer) {\n        this.removeComponent(this.debugDirectionRenderer);\n        this.debugDirectionRenderer = null;\n      }\n    }\n  }\n\n  public calculate(): void {\n    // update bounds\n    this.bounds.center.copy(this.host.transform.position);\n    this.bounds.extents.setTo(this.radius, this.radius);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined {\n    if (another instanceof CircleColliderComponent) {\n      return this.collisionJumpTable.circleCircle(this, another);\n    } else if (another instanceof PolygonColliderComponent) {\n      return this.collisionJumpTable.circlePolygon(this, another);\n    }\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public contains(point: Vector): boolean {\n    return this.bounds.center.distanceTo(point) <= this.radius;\n  }\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Line–sphere_intersection\n   * @override\n   * @inheritdoc\n   */\n  public rayCast(ray: Ray, max: number = Infinity): Vector|undefined {\n    const c = this.bounds.center;\n    const r = this.radius;\n    const o = ray.origin;\n    const l = ray.direction;\n    const co = o.clone().subtract(c);\n    const discriminant = Math.sqrt(Math.pow(l.dot(co), 2) - Math.pow(co.magnitude(), 2) + Math.pow(r, 2));\n\n    if (discriminant < 0) {\n      return;\n    }\n\n    let d = -l.dot(co);\n\n    if (discriminant > 0) {\n      const d1 = d + discriminant;\n      const d2 = d - discriminant;\n      d = Math.min(d1, d2);\n    }\n\n    return ray.getPoint(d);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public project(axis: Vector): Projection {\n    const dot = this.bounds.center.dot(axis);\n    const s = [dot, dot + this.radius, dot - this.radius];\n    return new Projection(Math.min(...s), Math.max(...s));\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public getFurthestPoint(direction: Vector): Vector {\n    return this.bounds.center.clone().add(direction.clone().normalize().scale(this.radius));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/CircleColliderComponent.ts","// tslint:disable max-classes-per-file\nimport 'Engine/imports';\n\nimport { GameObject } from 'Engine/Base/GameObject';\nimport { Scene } from 'Engine/Base/Scene';\nimport { Screen } from 'Engine/Base/Screen';\nimport { SceneManager } from 'Engine/Base/SceneManager';\nimport { instantiate, bootstrap } from 'Engine/Base/runtime';\n\nimport { Type } from 'Engine/Utility/Type';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { removeFromArray } from 'Engine/Utility/ArrayUtility';\n\nimport { Class } from 'Engine/Decorator/Class';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nimport { Texture } from 'Engine/Resource/Texture';\n\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { Color } from 'Engine/Display/Color';\n\nimport { Vector } from 'Engine/Math/Vector';\nimport { Random } from 'Engine/Math/Random';\n\nimport { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { CircleRendererComponent } from 'Engine/Render/CircleRendererComponent';\n\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\nimport { BoxColliderComponent } from 'Engine/Physics/BoxColliderComponent';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\n\nimport { PointerInput, PointerEvent } from 'Engine/Input/PointerInput';\n\nconst rectTexture = new Texture('../Assets/rect.png');\nconst circleTexture = new Texture('../Assets/circle.png');\n\n@Class()\nclass Shape extends GameObject {\n\n  protected renderer: SpriteRendererComponent;\n\n  protected outline: LineRendererComponent | CircleRendererComponent;\n\n  protected body: RigidbodyComponent;\n\n  @Inject(Random)\n  protected random: Random;\n\n  protected size: number;\n\n  public get isVisible(): boolean { return this.outline && this.outline.isVisible; }\n\n  public start(): void {\n    super.start();\n    this.renderer = this.addComponent(SpriteRendererComponent);\n    this.body = this.addComponent(RigidbodyComponent);\n    this.size = this.random.integer(32, 128);\n    this.body.useGravity = true;\n  }\n\n}\n\n@Class()\nclass Box extends Shape {\n\n  private collider: BoxColliderComponent;\n\n  public start(): void {\n    super.start();\n    this.outline = this.addComponent(LineRendererComponent);\n    this.collider = this.addComponent(BoxColliderComponent);\n\n    this.renderer.sprite = new Sprite(rectTexture);\n\n    const halfSize = this.size / 2;\n\n    this.renderer.sprite.rect.width = this.size;\n    this.renderer.sprite.rect.height = this.size;\n\n    this.outline.addPoint(\n      new Vector(halfSize, halfSize),\n      new Vector(halfSize, -halfSize),\n      new Vector(-halfSize, -halfSize),\n      new Vector(-halfSize, halfSize)\n    );\n\n    this.outline.closePath = true;\n    this.outline.strokeColor = Color.CreateByHexRgb('#94CFFF');\n\n    this.collider.size.setTo(this.size, this.size);\n  }\n\n}\n\n@Class()\nclass Circle extends Shape {\n\n  private collider: CircleColliderComponent;\n\n  public start(): void {\n    super.start();\n    this.outline = this.addComponent(CircleRendererComponent);\n    this.collider = this.addComponent(CircleColliderComponent);\n\n    this.renderer.sprite = new Sprite(circleTexture);\n\n    const halfSize = this.size / 2;\n\n    this.renderer.sprite.rect.width = this.size;\n    this.renderer.sprite.rect.height = this.size;\n\n    this.outline.radius = halfSize;\n    this.outline.strokeColor = Color.CreateByHexRgb('#94CFFF');\n\n    this.collider.radius = halfSize;\n  }\n\n}\n\n@Class()\nclass Wall extends GameObject {\n\n  private collider: BoxColliderComponent;\n\n  public start(): void {\n     super.start();\n     this.collider = this.addComponent(BoxColliderComponent);\n\n     this.collider.size.setTo(3000, 2);\n     this.collider.debug = true;\n  }\n\n}\n\n@Class()\nclass GameManager extends GameObject {\n\n  public scene: Scene;\n\n  private shapes: Shape[] = [];\n\n  @Inject(Random)\n  protected random: Random;\n\n  public postRender(): void {\n    super.postRender();\n\n    const invisibleShapes = this.shapes.filter(shape => shape.isActive && !shape.isVisible);\n    invisibleShapes.forEach(invisibleShape => this.destroyShape(invisibleShape));\n  }\n\n  public createShapeAt(position: Vector): void {\n    const type = this.random.pickOne(ShapeTypes);\n    const shape = instantiate(type);\n    this.scene.add(shape, position);\n    // push after 100ms prevent game object be remove before ready.\n    setTimeout(() => this.shapes.push(shape), 100);\n  }\n\n  public destroyShape(shape: Shape): void {\n    shape.destroy();\n    this.scene.remove(shape);\n    removeFromArray(this.shapes, shape);\n  }\n\n}\n\nconst ShapeTypes: Type<Shape>[] = [Box, Circle];\n\n@Class()\nclass Game {\n\n  private scene: Scene;\n\n  private gameManager: GameManager;\n\n  private wallTop: Wall;\n  private wallBottom: Wall;\n  private wallRight: Wall;\n  private wallLeft: Wall;\n\n  constructor(private sceneManager: SceneManager,\n              private pointerInput: PointerInput,\n              private browserDelegate: BrowserDelegate,\n              private screen: Screen) {\n    // create scene\n    this.scene = instantiate(Scene);\n    this.sceneManager.add(this.scene);\n\n    // setup background color\n    this.scene.mainCamera.backgroundColor = Color.CreateByHexRgb('#4A687F');\n\n    // prepare resource\n    this.scene.resources.add(rectTexture);\n    this.scene.resources.add(circleTexture);\n\n    // walls\n    this.wallTop = instantiate(Wall);\n    this.scene.add(this.wallTop);\n\n    this.wallBottom = instantiate(Wall);\n    this.scene.add(this.wallBottom);\n\n    this.wallRight = instantiate(Wall);\n    this.wallRight.transform.rotation = Math.PI / 2;\n    this.scene.add(this.wallRight);\n\n    this.wallLeft = instantiate(Wall);\n    this.wallLeft.transform.rotation = Math.PI / 2;\n    this.scene.add(this.wallLeft);\n\n    this.adjustWalls();\n\n    // game manager\n    this.gameManager = instantiate(GameManager);\n    this.gameManager.scene = this.scene;\n    this.scene.add(this.gameManager);\n\n    // pointer input event\n    this.pointerInput.pointerStart$.subscribe(e => this.onPointerStart(e));\n\n    // resize event\n    this.browserDelegate.resize$.subscribe(e => this.onResize(e));\n  }\n\n  private onPointerStart(e: PointerEvent): void {\n    e.locations.forEach(location => {\n      const worldPosition = this.scene.mainCamera.screenToWorld(location);\n      this.gameManager.createShapeAt(worldPosition);\n    });\n  }\n\n  private adjustWalls(): void {\n    const halfWidth = this.screen.width * 0.5;\n    const halfHeight = this.screen.height * 0.5;\n    this.wallTop.transform.position.setTo(0, halfHeight);\n    this.wallBottom.transform.position.setTo(0, -halfHeight);\n    this.wallRight.transform.position.setTo(halfWidth, 0);\n    this.wallLeft.transform.position.setTo(-halfWidth, 0);\n  }\n\n  private onResize(e: Event): void {\n    this.scene.mainCamera.setSize(\n      this.screen.width,\n      this.screen.height\n    );\n    this.adjustWalls();\n  }\n\n}\n\ninstantiate(Game);\n\nbootstrap().catch(console.error);\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/physics.ts","// tslint:disable\nimport { Service } from 'Engine/Decorator/Service';\n/**\n * Pseudo-Random Utility\n * \n * A pseudo-random utility to add seeded random support for help in\n * generating things like terrain or reproducible randomness. Uses the \n * [Mersenne Twister](https://en.wikipedia.org/wiki/Mersenne_Twister) algorithm.\n * \n * [[include:Random.md]]\n */\n\n/**\n * 32-bit mask\n */\nconst BITMASK32: number = 0xFFFFFFFF;\n\n/**\n * Pseudo-random number generator following the Mersenne_Twister algorithm. Given a seed this generator will produce the same sequence \n * of numbers each time it is called.\n * See https://en.wikipedia.org/wiki/Mersenne_Twister for more details.\n * Uses the MT19937-32 (2002) implementation documented here http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html\n * \n * Api inspired by http://chancejs.com/# https://github.com/chancejs/chancejs\n */\n@Service()\nexport class Random {\n\n   // Separation point of one one word, the number of bits in the lower bitmask 0 <= r <= w-1\n   private _lowerMask: number = 0x7FFFFFFF; // 31 bits same as _r\n   private _upperMask: number = 0x80000000; // 34 high bits\n\n   // Word size, 64 bits\n   private _w: number = 32;\n\n   // Degree of recurrance\n   private _n: number = 624;\n\n   // Middle word, an offset used in the recurrance defining the series x, 1<=m<n\n   private _m: number = 397;\n   // coefficients of teh rational normal form twist matrix\n   private _a: number = 0x9908B0DF;\n\n   // tempering bit shifts and masks\n   private _u: number = 11;\n   private _s: number = 7;\n   private _b: number = 0x9d2c5680;\n   private _t: number = 15;\n   private _c: number = 0xefc60000;\n   private _l: number = 18;\n   private _f: number = 1812433253;\n\n   private _mt: number[];\n\n   private _index: number;\n\n   /**\n    * If no seed is specified, the Date.now() is used\n    */\n   constructor(public seed: number = Date.now()) {\n      this._mt = new Array<number>(this._n);\n      // need to mask to support higher bit machines\n      this._mt[0] = seed >>> 0;\n\n      for (var i = 1; i < this._n; i++) {\n         var s = this._mt[i - 1] ^ (this._mt[i - 1] >>> (this._w - 2));\n         // numbers are bigger than the JS max safe int, add in 16-bit chunks to prevent IEEE rounding errors on high bits         \n         this._mt[i] = (((this._f * ((s & 0xFFFF0000) >>> 16)) << 16) + (this._f * (s & 0xFFFF)) + i) >>> 0;\n      }\n      this._index = this._n;\n   }\n\n   /**\n    * Apply the twist\n    */\n   private _twist(): void {\n\n      var mag01 = [0x0, this._a];\n      var y = 0;\n      for (var i = 0; i < this._n - this._m; i++) {\n         y = (this._mt[i] & this._upperMask) | (this._mt[i + 1] & this._lowerMask);\n         this._mt[i] = this._mt[i + this._m] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n      }\n      for (; i < this._n - 1; i++) {\n         y = (this._mt[i] & this._upperMask) | (this._mt[i + 1] & this._lowerMask);\n         this._mt[i] = this._mt[i + (this._m - this._n)] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n      }\n      y = (this._mt[this._n - 1] & this._upperMask) | (this._mt[0] & this._lowerMask);\n      this._mt[this._n - 1] = this._mt[this._m - 1] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n\n      this._index = 0;\n   }\n\n   /**\n    * Return next 32 bit integer number in sequence\n    */\n   public nextInt(): number {\n      if (this._index >= this._n) {\n         this._twist();\n      }\n\n      var y = this._mt[this._index++];\n\n      y ^= y >>> this._u;\n      y ^= ((y << this._s) & this._b);\n      y ^= ((y << this._t) & this._c);\n      y ^= (y >>> this._l);\n\n      return y >>> 0;\n   }\n\n   /**\n    * Return a random floating point number between [0, 1)\n    */\n   public next(): number {\n      return this.nextInt() * (1.0 / 4294967296.0); // divided by 2^32\n   }\n\n   /**\n    * Return a random floating point in range [min, max) min is included, max is not included\n    */\n   public floating(min: number, max: number): number {\n      return (max - min) * this.next() + min;\n   }\n\n   /**\n    * Return a random integer in range [min, max] min is included, max is included.\n    * Implemented with rejection sampling, see https://medium.com/@betable/tifu-by-using-math-random-f1c308c4fd9d#.i13tdiu5a\n    */\n   public integer(min: number, max: number): number {\n      return Math.floor((max - min + 1) * this.next() + min);\n   }\n\n   /**\n    * Returns true or false randomly with 50/50 odds by default. \n    * By default the likelihood of returning a true is .5 (50%).\n    * @param likelihood takes values between [0, 1]\n    */\n   public bool(likelihood: number = .5): boolean {\n      return this.next() <= likelihood;\n   }\n\n   /**\n    * Returns one element from an array at random\n    */\n   public pickOne<T>(array: Array<T>): T {\n      return array[this.integer(0, array.length - 1)];\n   }\n\n   /**\n    * Returns a new array random picking elements from the original\n    * @param array Original array to pick from\n    * @param numPicks can be any positive number\n    * @param allowDuplicates indicates whether the returned set is allowed duplicates (it does not mean there will always be duplicates \n    * just that it is possible)\n    */\n   public pickSet<T>(array: Array<T>, numPicks: number, allowDuplicates: boolean = false): Array<T> {\n      if (allowDuplicates) {\n         return this._pickSetWithDuplicates(array, numPicks);\n      } else {\n         return this._pickSetWithoutDuplicates(array, numPicks);\n      }\n   }\n\n   /**\n    * Returns a new array randomly picking elements in the original (not reused)\n    * @param numPicks must be less than or equal to the number of elements in the array.\n    */\n   private _pickSetWithoutDuplicates<T>(array: Array<T>, numPicks: number): Array<T> {\n      if (numPicks > array.length || numPicks < 0) {\n         throw new Error('Invalid number of elements to pick, must pick a value 0 < n <= length');\n      }\n      if (numPicks === array.length) {\n         return array;\n      }\n\n      var result: Array<T> = new Array<T>(numPicks);\n      var currentPick = 0;\n      var tempArray = array.slice(0);\n      while (currentPick < numPicks) {\n         var index = this.integer(0, tempArray.length - 1);\n         result[currentPick++] = tempArray[index];\n         tempArray.splice(index, 1);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns a new array random picking elements from the original allowing duplicates\n    * @param numPicks can be any positive number\n    */\n   private _pickSetWithDuplicates<T>(array: Array<T>, numPicks: number): Array<T> {\n    // Typescript numbers are all floating point, so do we add check for int? (or floor the input?)\n      if (numPicks < 0) {\n         throw new Error('Invalid number of elements to pick, must pick a value 0 <= n < MAX_INT');\n      }\n      var result = new Array<T>(numPicks);\n      for (var i = 0; i < numPicks; i++) {\n         result.push(this.pickOne(array));\n      }\n      return result;\n   }\n\n   /**\n    * Returns a new array that has its elements shuffled. Using the Fisher/Yates method\n    * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n    */\n   public shuffle<T>(array: Array<T>): Array<T> {\n      var tempArray = array.slice(0);\n      var swap: T|null = null;\n      for (var i = 0; i < tempArray.length - 2; i++) {\n         var randomIndex = this.integer(i, tempArray.length - 1);\n         swap = tempArray[i];\n         tempArray[i] = tempArray[randomIndex];\n         tempArray[randomIndex] = swap;\n      }\n\n      return tempArray;\n   }\n\n   /**\n    * Generate a list of random integer numbers\n    * @param length the length of the final array\n    * @param min the minimum integer number to generate inclusive\n    * @param max the maximum integer number to generate inclusive\n    */\n   public range(length: number, min: number, max: number): Array<number> {\n      var result: Array<number> = new Array(length);\n      for (var i = 0; i < length; i++) {\n         result[i] = this.integer(min, max);\n      }\n      return result;\n   }\n\n   /**\n    * Returns the result of a d4 dice roll\n    */\n   public d4() {\n      return this.integer(1, 4);\n   }\n\n   /**\n    * Returns the result of a d6 dice roll\n    */\n   public d6() {\n      return this.integer(1, 6);\n   }\n\n   /**\n    * Returns the result of a d8 dice roll\n    */\n   public d8() {\n      return this.integer(1, 8);\n   }\n\n   /**\n    * Returns the result of a d10 dice roll\n    */\n   public d10() {\n      return this.integer(1, 10);\n   }\n\n   /**\n    * Returns the result of a d12 dice roll\n    */\n   public d12() {\n      return this.integer(1, 12);\n   }\n\n   /**\n    * Returns the result of a d20 dice roll\n    */\n   public d20() {\n      return this.integer(1, 20);\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Random.ts"],"sourceRoot":""}