{"version":3,"sources":["webpack:///./Examples/physics.ts","webpack:///./Engine/Math/Rect.ts","webpack:///./Engine/Resource/Texture.ts","webpack:///./Engine/Display/Sprite.ts","webpack:///./Engine/Render/SpriteRendererComponent.ts","webpack:///./Engine/Physics/RigidbodyComponent.ts","webpack:///./Engine/Resource/Bundle.ts","webpack:///./Engine/Core/Camera.ts","webpack:///./Engine/Core/Scene.ts","webpack:///./Engine/Math/Projection.ts","webpack:///./Engine/Math/Line.ts","webpack:///./Engine/Physics/PolygonColliderComponent.ts","webpack:///./Engine/Physics/ColliderComponent.ts","webpack:///./Engine/Physics/CircleColliderComponent.ts","webpack:///./Engine/Physics/BoxColliderComponent.ts","webpack:///./Engine/Math/Random.ts","webpack:///./Engine/Physics/ColliderType.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAuB;AACvB,uCAAmF;AAEnF,aAAG,CAAC,eAAK,CAAC,CAAC;AAEX,0CAAoD;AACpD,sCAA0C;AAE1C,6CAAwD;AAGxD,+CAAiE;AACjE,6CAA8D;AAE9D,qCAA+C;AAC/C,sCAAiD;AAEjD,wCAAkD;AAElD,uCAA+C;AAC/C,qCAA6C;AAG7C,uCAA4C;AAE5C,wDAAgF;AAIhF,mDAAuE;AACvE,qDAA2E;AAC3E,wDAAiF;AAEjF,6CAAuE;AAEvE,IAAM,WAAW,GAAG,IAAI,iBAAO,CAAC,mBAAmB,CAAC,CAAC;AACrD,IAAM,aAAa,GAAG,IAAI,iBAAO,CAAC,qBAAqB,CAAC,CAAC;AAGzD;IAAoB,yBAAU;IAD9B;QAAA,qEAwBC;QAbQ,eAAS,GAAY,IAAI,CAAC;;IAanC,CAAC;IAXQ,qBAAK,GAAZ;QAAA,iBASC;QARC,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,iDAAuB,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,GAAG,IAAI,EAArB,CAAqB,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,uCAAkB,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC9B,CAAC;IAbe;QAAf,eAAM,CAAC,eAAM,CAAC;kCAAmB,eAAM;yCAAC;IARrC,KAAK;QADV,aAAK,EAAE;OACF,KAAK,CAuBV;IAAD,YAAC;CAAA,CAvBmB,uBAAU,GAuB7B;AAGD;IAAkB,uBAAK;IAAvB;;IAWA,CAAC;IAPQ,mBAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,2CAAoB,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,eAAM,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IATG,GAAG;QADR,aAAK,EAAE;OACF,GAAG,CAWR;IAAD,UAAC;CAAA,CAXiB,KAAK,GAWtB;AAGD;IAAqB,0BAAK;IAA1B;;IAWA,CAAC;IAPQ,sBAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,iDAAuB,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,eAAM,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;IAC7B,CAAC;IATG,MAAM;QADX,aAAK,EAAE;OACF,MAAM,CAWX;IAAD,aAAC;CAAA,CAXoB,KAAK,GAWzB;AAGD;IAAmB,wBAAU;IAA7B;;IAUA,CAAC;IANQ,oBAAK,GAAZ;QACG,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,2CAAoB,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IARG,IAAI;QADT,aAAK,EAAE;OACF,IAAI,CAUT;IAAD,WAAC;CAAA,CAVkB,uBAAU,GAU5B;AAGD;IAA0B,+BAAU;IADpC;QAAA,qEA+BC;QA1BS,YAAM,GAAY,EAAE,CAAC;;IA0B/B,CAAC;IArBQ,gCAAU,GAAjB;QAAA,iBAKC;QAJC,iBAAM,UAAU,WAAE,CAAC;QAEnB,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,EAAlC,CAAkC,CAAC,CAAC;QACxF,eAAe,CAAC,OAAO,CAAC,wBAAc,IAAI,YAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAjC,CAAiC,CAAC,CAAC;IAC/E,CAAC;IAEM,mCAAa,GAApB,UAAqB,QAAgB;QAArC,iBAMC;QALC,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAM,KAAK,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEhC,UAAU,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAvB,CAAuB,EAAE,GAAG,CAAC,CAAC;IACjD,CAAC;IAEM,kCAAY,GAAnB,UAAoB,KAAY;QAC9B,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzB,8BAAe,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IArBD;QADC,eAAM,CAAC,eAAM,CAAC;kCACG,eAAM;+CAAC;IAPrB,WAAW;QADhB,aAAK,EAAE;OACF,WAAW,CA8BhB;IAAD,kBAAC;CAAA,CA9ByB,uBAAU,GA8BnC;AAED,IAAM,UAAU,GAAkB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAGhD;IAAmB,wBAAK;IAAxB;;IAmEA,CAAC;IAtDQ,oBAAK,GAAZ;QAAA,iBA8BC;QA7BC,iBAAM,KAAK,WAAE,CAAC;QAGd,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,aAAK,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAGlE,IAAI,CAAC,OAAO,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvB,IAAI,CAAC,UAAU,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE1B,IAAI,CAAC,SAAS,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAExB,IAAI,CAAC,WAAW,EAAE,CAAC;QAGnB,IAAI,CAAC,WAAW,GAAG,qBAAW,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAG3B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACzE,CAAC;IAEO,6BAAc,GAAtB,UAAuB,CAAe;QAAtC,iBAKC;QAJC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;YAC1B,IAAM,aAAa,GAAG,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9D,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,0BAAW,GAAnB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;QAC1C,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAES,uBAAQ,GAAlB;QACE,iBAAM,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAxDqB;QAArB,eAAM,CAAC,2BAAY,CAAC;;8CAAoC;IACnC;QAArB,eAAM,CAAC,2BAAY,CAAC;;8CAAoC;IAChC;QAAxB,eAAM,CAAC,iCAAe,CAAC;;iDAA0C;IAX9D,IAAI;QADT,aAAK,EAAE;OACF,IAAI,CAmET;IAAD,WAAC;CAAA,CAnEkB,aAAK,GAmEvB;AAED,IAAM,KAAK,GAAG,qBAAW,CAAC,IAAI,CAAC,CAAC;AAEhC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACjC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAEnC,mBAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;ACxNtC,sCAA4C;AAE5C;IAyBE,cAAmB,QAA+B,EAC/B,KAAiB,EACjB,MAAkB;QAFlB,0CAAuB,eAAM,EAAE;QAC/B,iCAAiB;QACjB,mCAAkB;QAFlB,aAAQ,GAAR,QAAQ,CAAuB;QAC/B,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAY;IAAG,CAAC;IAzBzC,sBAAW,wBAAM;aAAjB;YACE,MAAM,CAAC,IAAI,eAAM,CACf,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAChC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAClC,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAW,sBAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAW,sBAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAElE,sBAAW,sBAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAErD,sBAAW,sBAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAEnE,sBAAW,qBAAG;aAAd;YACE,MAAM,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAED,sBAAW,qBAAG;aAAd;YACE,MAAM,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IAMM,uBAAQ,GAAf,UAAgB,KAAa;QAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,sBAAO,GAAd,UAAe,OAAa;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,WAAC;AAAD,CAAC;AA5DY,oBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjB,yCAAoD;AAEpD,+CAAiE;AACjE,sCAAiD;AAKjD;IAA6B,2BAA2B;IA2BtD,iBAAY,IAAY;QAAxB,YACE,kBAAM,IAAI,CAAC,SACZ;QAxBO,aAAO,GAAY,KAAK,CAAC;QAIzB,YAAM,GAAG,CAAC,CAAC;QAEX,aAAO,GAAG,CAAC,CAAC;;IAkBpB,CAAC;IAhBD,sBAAW,0BAAK;aAAhB,cAA6B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aAElD,UAAiB,KAAa;YAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;;;OALiD;IAOlD,sBAAW,2BAAM;aAAjB,cAA8B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aAEpD,UAAkB,KAAa;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;;;OALmD;IAWvC,sBAAI,GAAjB;;;;gBACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAClB,MAAM,KAAC;gBACT,CAAC;gBAED,WAAO,IAAI,OAAO,CAAO,iBAAO;wBAC9B,IAAM,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;wBAC5B,OAAO,CAAC,GAAG,GAAG,KAAI,CAAC,IAAI,CAAC;wBACxB,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;wBACrC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;wBAC/B,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC;wBACvC,OAAO,CAAC,MAAM,GAAG;;;;;;wCAEb,SAAI;wCAAS,WAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;;wCAA5C,GAAK,KAAK,GAAG,SAA+B,CAAC;wCAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wCACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;;;wCAEnB,IAAI,CAAC,OAAO,CAAC,KAAG,CAAC,CAAC;;;wCAEpB,OAAO,EAAE,CAAC;;;;6BACX,CAAC;oBACJ,CAAC,CAAC,EAAC;;;KACJ;IAEM,uBAAK,GAAZ;QACE,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAEM,6BAAW,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEe,6BAAW,GAA3B,UAA4B,KAAuB;;;;gBAC3C,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;gBAChD,GAAG,GAA6B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAE5D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;oBACvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC5C,CAAC;gBAED,GAAG,CAAC,SAAS,CACX,KAAK,EACL,CAAC,EAAE,CAAC,EACJ,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,MAAM,EACZ,CAAC,EAAE,CAAC,EACJ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,OAAO,CACb,CAAC;gBAEF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAErB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBAEpB,WAAO,IAAI,EAAC;;;KACb;IAnGD;QADC,eAAM,CAAC,iCAAe,CAAC;;4CACS;IAqGnC,cAAC;CAAA,CAxG4B,mBAAQ,GAwGpC;AAxGY,0BAAO;;;;;;;;;;;;;;;;;;;;ACPpB,wCAAkD;AAClD,sCAA4C;AAC5C,qCAAwC;AACxC,+CAAiE;AACjE,sCAAiD;AACjD,qCAA+C;AAG/C;IAwBE,gBAAY,OAAgB,EAKT,IAAuB;QAAvB,kCAAiB,WAAI,EAAE;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QA3BnC,UAAK,GAAW,IAAI,eAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAKrC,WAAM,GAAsB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAEvD,QAAG,GAA6B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAqB3E,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAhBD,sBAAI,2BAAO;aAAX,cAAyB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAKhD,sBAAI,yBAAK;aAAT,cAAsB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IAE/C,sBAAI,0BAAM;aAAV,cAAuB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAW1C,2BAAU,GAAjB,UAAkB,OAAgB;QAAlC,iBAgBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAC3E,CAAC;IACH,CAAC;IAEO,4BAAW,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAEtC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjC,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,SAAS,CAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,CAAC,EAAE,CAAC,EACJ,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,IAAI,CAAC,MAAM,CACjB,CAAC;IACJ,CAAC;IAvED;QADC,eAAM,CAAC,iCAAe,CAAC;;2CACS;IALtB,MAAM;QADlB,aAAK,EAAE;yCAyBe,iBAAO;YAKH,WAAI;OA7BlB,MAAM,CA8ElB;IAAD,aAAC;CAAA;AA9EY,wBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTnB,kDAAoE;AAEpE,gDAAmE;AAGnE;IAA6C,2CAAiB;IAD9D;QAAA,qEAwDC;QA7CS,cAAQ,GAAG,KAAK,CAAC;;IA6C3B,CAAC;IA3CC,sBAAI,2CAAM;aAAV,cAAiC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aAEvD,UAAW,KAAuB;YAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OALsD;IAOvD,sBAAI,4CAAO;aAAX,cAAyB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEzC,wCAAM,GAAb;QACE,iBAAM,MAAM,WAAE,CAAC;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,qBAAgC,EAA9B,gBAAK,EAAE,kBAAM,CAAkB;YACvC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC9B,CAAC;IACH,CAAC;IAEM,wCAAM,GAAb;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;QACT,CAAC;QAMD,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QAEf,oBAA+B,EAA7B,gBAAK,EAAE,kBAAM,CAAiB;QAEtC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEX,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzC,GAAG,CAAC,OAAO,EAAE,CAAC;IAIhB,CAAC;IArDU,uBAAuB;QADnC,iCAAe,EAAE;OACL,uBAAuB,CAuDnC;IAAD,8BAAC;CAAA,CAvD4C,qCAAiB,GAuD7D;AAvDY,0DAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLpC,0CAAoD;AACpD,0CAAkD;AAClD,mDAAuE;AACvE,sCAA4C;AAC5C,uCAA4C;AAC5C,qCAAwC;AACxC,0CAAqD;AACrD,gDAAmE;AACnE,iDAAqE;AACrE,sCAAiD;AAQjD,IAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAI7B;IAAwC,sCAAS;IAiE/C,4BAAY,IAAgB,EACQ,MAAc,EAChB,IAAU;QAF5C,YAGE,kBAAM,IAAI,CAAC,SACZ;QAHmC,YAAM,GAAN,MAAM,CAAQ;QAChB,UAAI,GAAJ,IAAI,CAAM;QAjErC,iBAAW,GAAW,CAAC,CAAC;QAKxB,qBAAe,GAAW,CAAC,CAAC;QAE5B,UAAI,GAAW,CAAC,CAAC;QAEjB,oBAAc,GAAY,KAAK,CAAC;QAK/B,WAAK,GAAW,CAAC,CAAC;QAMV,iBAAW,GAAW,CAAC,CAAC;QAKhC,UAAI,GAAW,IAAI,CAAC;QAMZ,gBAAU,GAAW,KAAK,CAAC;QAEpC,wBAAkB,GAAW,QAAQ,CAAC;QAKtC,cAAQ,GAAW,eAAM,CAAC,GAAG,EAAE,CAAC;QAEhC,gBAAU,GAAY,KAAK,CAAC;QAE5B,gBAAU,GAAY,KAAK,CAAC;QAE5B,oBAAc,GAAW,CAAC,CAAC;QAElB,YAAM,GAAW,CAAC,CAAC;QAE3B,YAAM,GAAa;YACzB,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;SACb,CAAC;QAEM,aAAO,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjC,gBAAU,GAAW,CAAC,CAAC;QAIvB,kBAAY,GAAW,eAAM,CAAC,GAAG,EAAE,CAAC;;IAM5C,CAAC;IAnDD,sBAAW,oCAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAEhD,UAAgB,KAAa,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAA8B,IAAK,CAAC,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;;;OAFlE;IAWhD,sBAAW,mCAAG;aAAd,cAA2B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAE9C,UAAe,KAAa,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAA8B,IAAK,CAAC,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;;;OAFjE;IA0CvC,kCAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAuB,IAAI,CAAC,YAAY,CAAC,uCAAkB,CAAC,CAAC;IAC7E,CAAC;IAEM,qCAAQ,GAAf,UAAgB,KAAa,EAAE,SAAsC;QAAtC,wCAAuB,qBAAS,CAAC,KAAK;QACnE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAEM,sCAAS,GAAhB,UAAiB,MAAc,EAAE,SAAsC;QAAtC,wCAAuB,qBAAS,CAAC,KAAK;QACrE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC;IACpC,CAAC;IAEM,uCAAU,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK,IAAI,YAAK,CAAC,KAAK,EAAE,EAAb,CAAa,CAAC,CAAC;IAC9C,CAAC;IAEM,wCAAW,GAAlB;QACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAEM,kCAAK,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,kCAAK,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAEM,wCAAW,GAAlB;QACE,iBAAM,WAAW,WAAE,CAAC;QAEpB,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC;QAE3D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,qBAAS,CAAC,YAAY,CAAC,CAAC;QAC7D,CAAC;QAQD,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAKrC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;QAK5C,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QAKvC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,cAAc,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAK9C,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QACrE,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAElC,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,YAAY,CAAC,IAAI,iBAAiB,CAAC;QAC1D,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,YAAY,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAEzC,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC;QACnD,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEpC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,qBAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAGnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC;YACvE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACrB,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,CAAC;gBAE9E,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACjD,CAAC;gBAED,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC;gBACpE,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC/D,CAAC;QACH,CAAC;QAG4B,IAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAExH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC;IAEM,kCAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,eAAM,CAAC,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG;YACZ,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;YACZ,eAAM,CAAC,GAAG,EAAE;SACb,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,eAAM,CAAC,GAAG,EAAE,CAAC;IACnC,CAAC;IAEM,oCAAO,GAAd;QACE,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;QAC9C,eAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1B,eAAM,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK,IAAI,sBAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAClD,CAAC;IAEO,uCAAU,GAAlB,UAAmB,iBAAyB;QAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,UAAU,IAAI,iBAAiB,CAAC;gBAErC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC;IACH,CAAC;IA3PU,kBAAkB;QAF9B,iCAAe,EAAE;QACjB,mCAAgB,CAAC,CAAC,uCAAkB,CAAC,CAAC;QAmExB,0BAAM,CAAC,eAAM,CAAC;QACd,0BAAM,CAAC,WAAI,CAAC;yCAFP,uBAAU;OAjEjB,kBAAkB,CA4P9B;IAAD,yBAAC;CAAA,CA5PuC,qBAAS,GA4PhD;AA5PY,gDAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrB/B,yCAAoD;AACpD,6CAAyD;AAGzD;IAA4B,0BAAQ;IAElC,gBAAY,UAAkB,EACF,SAAuC;QAAvC,0CAAuC;QADnE,YAEE,kBAAM,UAAU,CAAC,SAClB;QAF2B,eAAS,GAAT,SAAS,CAA8B;;IAEnE,CAAC;IAEM,oBAAG,GAAV,UAAW,QAAkB;QAC3B,EAAE,CAAC,CAAC,yBAAU,CAAa,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;QAED,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClD,CAAC;IAEY,qBAAI,GAAjB;;;;;;;wBACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;4BACnB,MAAM,KAAC;wBACT,CAAC;;;;wBAGC,WAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAM,QAAQ;gCAAI,mBAAQ,CAAC,IAAI,EAAE;qCAAA,CAAC,CAAC;;wBAAxE,SAAwE,CAAC;;;;wBAEzE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAG,CAAC,CAAC;;;wBAGzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;;;;KACpB;IAEM,wBAAO,GAAd;QACE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ,IAAI,eAAQ,CAAC,OAAO,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACzD,CAAC;IAEH,aAAC;AAAD,CAAC,CAlC2B,mBAAQ,GAkCnC;AAlCY,wBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJnB,0CAAoD;AACpD,uCAA+C;AAC/C,sDAA0E;AAC1E,qCAA6C;AAC7C,uCAA+C;AAE/C,qCAAwC;AACxC,uCAA4C;AAC5C,oCAA6D;AAC7D,+CAAiE;AACjE,uCAAmD;AACnD,sCAAiD;AAEpC,kBAAU,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AAM/C;IAA4B,0BAAU;IA8BpC,gBAAqC,OAAwB,EACjC,MAAc,EACC,qBAA4C;QAFvF,YAGE,kBAAM,qBAAqB,CAAC,SAE7B;QAjCM,YAAM,GAAW,EAAE,GAAG,CAAC,CAAC;QAExB,qBAAe,GAAU,aAAK,CAAC,KAAK,CAAC;QAErC,mBAAa,GAAW,IAAI,eAAM,EAAE,CAAC;QAErC,oBAAc,GAAW,IAAI,eAAM,EAAE,CAAC;QAKtC,iBAAW,GAAU,sBAAe,CAAC;QAKrC,eAAS,GAAU,sBAAe,CAAC;QAKnC,UAAI,GAAS,IAAI,WAAI,EAAE,CAAC;QAKxB,YAAM,GAAW,IAAI,eAAM,EAAE,CAAC;QAMnC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;;IAC5C,CAAC;IAEM,wBAAO,GAAd,UAAe,KAAa,EAAE,MAAc;QAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAE5B,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAE1B,IAAM,SAAS,GAAG,KAAK,GAAG,GAAG,CAAC;QAC9B,IAAM,UAAU,GAAG,MAAM,GAAG,GAAG,CAAC;QAGhC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAErD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC;IAEM,uBAAM,GAAb;QACE,iBAAM,MAAM,WAAE,CAAC;QAKf,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEhD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,2BAAU,GAAjB;QACE,iBAAM,UAAU,WAAE,CAAC;QACnB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAEM,8BAAa,GAApB,UAAqB,KAAa;QAChC,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEM,8BAAa,GAApB,UAAqB,KAAa;QAChC,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IArFU,MAAM;QADlB,iBAAO,CAAC,kBAAU,CAAC;QA+BL,0BAAM,CAAC,iCAAe,CAAC;QACvB,0BAAM,CAAC,eAAM,CAAC;QACd,0BAAM,CAAC,6CAAqB,CAAC;;OAhC/B,MAAM,CAuFlB;IAAD,aAAC;CAAA,CAvF2B,uBAAU,GAuFrC;AAvFY,wBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBnB,2CAAoD;AAEpD,qCAA2C;AAC3C,uCAAgD;AAChD,uCAAwD;AACxD,6CAC8D;AAC9D,sCAAiD;AACjD,qCAA+C;AAC/C,4DAAyF;AACzF,6DAA2F;AAC3F,sCAA4C;AAC5C,sDAA0E;AAC1E,8CAA4D;AAC5D,uCAA6D;AAC7D,uCAA4C;AAC5C,uCAA+C;AAC/C,+CAAiE;AAEjE,qCAAwC;AACxC,qCAA6C;AAC7C,6CAAyD;AAMzD;IAA2B,yBAAU;IAoBnC,eAA2D,2BAAwD,EACvD,4BAA0D,EACjE,qBAA4C,EACpD,aAA4B,EAClC,UAAkB,EACnB,MAAc,EACd,MAAc,EACL,OAAwB,EACnC,IAAU,EACF,UAAwB;QATpE,YAUE,iBAAO,SACR;QAX0D,iCAA2B,GAA3B,2BAA2B,CAA6B;QACvD,kCAA4B,GAA5B,4BAA4B,CAA8B;QACjE,2BAAqB,GAArB,qBAAqB,CAAuB;QACpD,mBAAa,GAAb,aAAa,CAAe;QAClC,gBAAU,GAAV,UAAU,CAAQ;QACnB,YAAM,GAAN,MAAM,CAAQ;QACd,YAAM,GAAN,MAAM,CAAQ;QACL,aAAO,GAAP,OAAO,CAAiB;QACnC,UAAI,GAAJ,IAAI,CAAM;QACF,gBAAU,GAAV,UAAU,CAAc;;IAEpE,CAAC;IAfD,sBAAW,2BAAQ;aAAnB,cAAiC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAEnE,sBAAW,4BAAS;aAApB,cAAiC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAenD,qBAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,eAAM,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAI,CAAkB,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,eAAM,CAAC,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,qBAAK,GAAZ;QAAA,iBASC;QARC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC;QACT,CAAC;QAED,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEM,uBAAO,GAAd;QACE,iBAAM,OAAO,WAAE,CAAC;QAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,OAAO,EAAE,EAApB,CAAoB,CAAC,CAAC;YACrE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAEzB,eAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC;QAErB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEM,mBAAG,GAAV,UAAW,UAAsB,EAAE,EAAW;QAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3B,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,YAAY,eAAM,CAAC,CAAC,CAAC;YACjC,yBAAU,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACvC,CAAC;QAED,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,sBAAM,GAAb,UAAc,UAAsB;QAElC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAEvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAE9C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,YAAY,eAAM,CAAC,CAAC,CAAC;YACjC,8BAAe,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,mBAAG,GAAV,UAAW,UAAsB;QAC/B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAEY,oBAAI,GAAjB;;;;4BACE,WAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;;wBAA5B,SAA4B,CAAC;;;;;KAC9B;IAEM,2BAAW,GAAlB;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,WAAW,EAAE,EAAxB,CAAwB,CAAC,CAAC;QACzE,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;QAC/C,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;IACpF,CAAC;IAEM,sBAAM,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,MAAM,EAAE,EAAnB,CAAmB,CAAC,CAAC;QACpE,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,CAAC;QAC1C,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;QAClF,eAAK,CAAC,eAAK,EAAE,cAAM,YAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAApB,CAAoB,CAAC,CAAC;IAC3C,CAAC;IAEM,0BAAU,GAAjB;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,UAAU,EAAE,EAAvB,CAAuB,CAAC,CAAC;IAC1E,CAAC;IAEM,yBAAS,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,SAAS,EAAE,EAAtB,CAAsB,CAAC,CAAC;QAIvE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAA3B,CAA2B,CAAC,CAAC;IAC/D,CAAC;IAEM,sBAAM,GAAb,UAAc,GAA6B,EAAE,KAAa,EAAE,MAAc;QAA1E,iBASC;QAPC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM,IAAI,YAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,EAAnD,CAAmD,CAAC,CAAC;QACpF,eAAK,CAAC,uBAAa,EAAE,cAAM,YAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM,IAAI,YAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,EAAzD,CAAyD,CAAC,EAAzF,CAAyF,CAAC,CAAC;QACtH,eAAK,CAAC,eAAK,EAAE;YACX,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,0BAAU,GAAjB;QACE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAU,IAAI,iBAAU,CAAC,UAAU,EAAE,EAAvB,CAAuB,CAAC,CAAC;QAIxE,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;IACvC,CAAC;IAEM,wBAAQ,GAAf;QACE,MAAM,CAAC,WAAS,IAAI,CAAC,IAAI,MAAG,CAAC;IAC/B,CAAC;IAES,2BAAW,GAArB,UAAsB,GAA6B;QACjD,IAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC3D,IAAM,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAElD,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,GAAG,CAAC,SAAS,GAAG,aAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE1C,IAAM,aAAa,GAAG,gBAAc,SAAW,CAAC;QAChD,IAAM,cAAc,GAAG,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC5D,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAEpF,IAAM,OAAO,GAAG,UAAQ,GAAK,CAAC;QAC9B,IAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QAChD,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAExE,IAAM,kBAAkB,GAAG,aAAW,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,UAAK,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAG,CAAC;QACxH,IAAM,mBAAmB,GAAG,GAAG,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QACtE,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAE9F,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QAClE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QAC7D,IAAM,iBAAiB,GAAG,YAAU,aAAa,CAAC,CAAC,UAAK,aAAa,CAAC,CAAG,CAAC;QAC1E,IAAM,kBAAkB,GAAG,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACpE,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAE5F,GAAG,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAES,wBAAQ,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IA9LU,KAAK;QADjB,aAAK,EAAE;QAqBO,0BAAM,CAAC,yDAA2B,CAAC;QACnC,0BAAM,CAAC,2DAA4B,CAAC;QACpC,0BAAM,CAAC,6CAAqB,CAAC;QAC7B,0BAAM,CAAC,6BAAa,CAAC;QACrB,0BAAM,CAAC,mBAAU,CAAC;QAClB,0BAAM,CAAC,eAAM,CAAC;QACd,0BAAM,CAAC,eAAM,CAAC;QACd,0BAAM,CAAC,iCAAe,CAAC;QACvB,0BAAM,CAAC,WAAI,CAAC;QACZ,0BAAM,CAAC,2BAAY,CAAC;yEALkB,eAAM;OAxB9C,KAAK,CAgMjB;IAAD,YAAC;CAAA,CAhM0B,uBAAU,GAgMpC;AAhMY,sBAAK;;;;;;;;;;;ACzBlB;IAME,oBAAmB,GAAW,EACX,GAAW;QADX,QAAG,GAAH,GAAG,CAAQ;QACX,QAAG,GAAH,GAAG,CAAQ;QALtB,gBAAW,GAAY,KAAK,CAAC;IAKJ,CAAC;IAHlC,sBAAI,kCAAU;aAAd,cAA4B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAK/C,6BAAQ,GAAf,UAAgB,OAAmB;QACjC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IAC1D,CAAC;IAEM,+BAAU,GAAjB,UAAkB,OAAmB;QACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,CAAC,CAAC;QACX,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IAClF,CAAC;IAEM,4BAAO,GAAd;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAEM,0BAAK,GAAZ,UAAa,GAAe,EAAE,GAAe;QAAhC,6BAAe;QAAE,6BAAe;QAC3C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAEM,6BAAQ,GAAf;QACE,MAAM,CAAC,iBAAe,IAAI,CAAC,GAAG,UAAK,IAAI,CAAC,GAAG,MAAG,CAAC;IACjD,CAAC;IAEH,iBAAC;AAAD,CAAC;AAlCY,gCAAU;;;;;;;;;;;ACAvB;IAEE,cAAmB,KAAa,EACb,GAAW;QADX,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;IAAG,CAAC;IAElC,sBAAW,uBAAK;aAAhB;YACE,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC;;;OAAA;IAED,sBAAW,2BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC;;;OAAA;IAED,sBAAW,wBAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAEM,wBAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAEM,2BAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3D,CAAC;IAQM,2BAAY,GAAnB,UAAoB,KAAa,EAAE,IAAa;QAC9C,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,GAAG;gBACN,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5D,KAAK,CAAC;YACR,KAAK,GAAG;gBACN,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9D,KAAK,CAAC;YACR;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAKM,uBAAQ,GAAf,UAAgB,KAAa,EAAE,SAAwB;QAAxB,4CAAwB;QACrD,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACnC,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEnC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACtC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEtC,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEpC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAEM,uBAAQ,GAAf;QACE,MAAM,CAAC,WAAS,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,GAAG,MAAG,CAAC;IAC/C,CAAC;IACH,WAAC;AAAD,CAAC;AA1EY,oBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjB,0CAAoD;AACpD,kDAAqE;AAErE,sCAA4C;AAC5C,qCAAwC;AACxC,oCAAsC;AACtC,2CAAoD;AACpD,mDAAuE;AACvE,sCAAiD;AAEjD,wDAAiF;AACjF,oCAAiD;AAMjD,iBAAU,CAAC,cAAM,8BAAU,EAAV,CAAU,CAAC,CAAC;AAE7B;IAA8C,4CAAiB;IAkB7D,kCAAY,IAAgB,EACsB,kBAAsC;QADxF,YAEE,kBAAM,IAAI,CAAC,SACZ;QAFiD,wBAAkB,GAAlB,kBAAkB,CAAoB;QAdjF,YAAM,GAAa,EAAE,CAAC;QAEV,uBAAiB,GAAa,EAAE,CAAC;QACjC,qBAAe,GAAa,EAAE,CAAC;QAC/B,sBAAgB,GAAW,EAAE,CAAC;;IAYjD,CAAC;IAPD,sBAAW,sDAAgB;aAA3B,cAAuD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;;;OAAA;IACvF,sBAAW,oDAAc;aAAzB,cAAqD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;;;OAAA;IACnF,sBAAW,qDAAe;aAA1B,cAAoD,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;;;OAAA;IAO5E,8CAAW,GAAlB;QACE,iBAAM,WAAW,WAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEM,4CAAS,GAAhB;QAAA,iBAwCC;QAvCC,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACxD,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QACjC,IAAM,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAEnD,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,eAAM,EAAE,CAAC,CAAC;gBAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAM,EAAE,CAAC,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,eAAM,EAAE,EAAE,IAAI,eAAM,EAAE,CAAC,CAAC,CAAC;YACnE,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,YAAK,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAA9B,CAA8B,CAAC,CAAC;QACjF,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAK,IAAI,oBAAa,CAAC,eAAe,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;QAE9E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACnD,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrC,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpB,CAAC;QAGD,IAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;QAC/C,IAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;QAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAE5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAMM,0CAAO,GAAd,UAAe,OAA0B;QACvC,EAAE,CAAC,CAAC,OAAO,YAAY,wBAAwB,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,YAAY,iDAAuB,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAMM,2CAAQ,GAAf,UAAgB,KAAa;QAC3B,IAAM,GAAG,GAAG,IAAI,SAAG,CAAC,KAAK,EAAE,eAAM,CAAC,KAAK,CAAC,CAAC;QACzC,IAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,IAAI,IAAK,UAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAxC,CAAwC,EAAE,CAAC,CAAC,CAAC;QACvG,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAMM,0CAAO,GAAd,UAAe,GAAQ;QACrB,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAI;YAChC,IAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC;gBAC3C,WAAW,GAAG,QAAQ,CAAC;gBACvB,WAAW,GAAG,KAAK,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACT,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACnC,CAAC;IAMM,0CAAO,GAAd,UAAe,IAAY;QACzB,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;QAC3B,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAK;YAClC,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACvB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,uBAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC;IAMM,mDAAgB,GAAvB,UAAwB,SAAiB;QACvC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QAC5B,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;YAC1C,IAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;gBACd,GAAG,GAAG,GAAG,CAAC;gBACV,OAAO,GAAG,KAAK,CAAC;YAClB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IACjD,CAAC;IAjJU,wBAAwB;QAmBtB,0BAAM,CAAC,uCAAkB,CAAC;yCADrB,uBAAU;OAlBjB,wBAAwB,CAmJpC;IAAD,+BAAC;CAAA,CAnJ6C,qCAAiB,GAmJ9D;AAnJY,4DAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBrC,sCAAiD;AACjD,uCAA+C;AAC/C,0CAAkD;AAClD,mDAAuE;AACvE,sCAA4C;AAG5C,2CAAoD;AACpD,6CAA2D;AAC3D,4DAAyF;AACzF,mDAAuE;AACvE,wCAAuC;AASvC;IAAuC,qCAAS;IAAhD;QAAA,qEAkHC;QA5GQ,YAAM,GAAW,IAAI,eAAM,EAAE,CAAC;QAK9B,YAAM,GAAW,IAAI,eAAM,EAAE,CAAC;QAK9B,WAAK,GAAW,CAAC,CAAC;QAIlB,iBAAW,GAAW,GAAG,CAAC;QAE1B,cAAQ,GAAW,IAAI,CAAC;QAExB,iBAAW,GAAY,KAAK,CAAC;QAE7B,cAAQ,GAAY,KAAK,CAAC;QAEjB,UAAI,GAAiB,2BAAY,CAAC,MAAM,CAAC;QAuCjD,iBAAW,GAAG,IAAI,iBAAO,EAAoB,CAAC;QAE9C,iBAAW,GAAG,IAAI,iBAAO,EAAqB,CAAC;;IA6CzD,CAAC;IArEQ,mCAAO,GAAd,UAAe,OAA0B,IAAgC,MAAM,CAAC,CAAC,CAAC;IAK3E,oCAAQ,GAAf,UAAgB,KAAa,IAAa,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAKlD,mCAAO,GAAd,UAAe,GAAQ,IAAsB,MAAM,CAAC,CAAC,CAAC;IAK/C,mCAAO,GAAd,UAAe,IAAY,IAAgB,MAAM,CAAC,IAAI,uBAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAKlE,4CAAgB,GAAvB,UAAwB,SAAiB,IAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAMzF,sBAAW,yCAAU;aAArB,cAAwD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAEjG,sBAAW,yCAAU;aAArB,cAAyD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;;;OAAA;IAE3F,iCAAK,GAAZ;QACE,iBAAM,KAAK,WAAE,CAAC;QACc,IAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,uCAAkB,CAAC,CAAC;QACpF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACO,IAAK,CAAC,IAAI,GAAG,2BAAY,CAAC,SAAS,CAAC;gBAChE,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACsB,IAAK,CAAC,IAAI,GAAG,2BAAY,CAAC,SAAS,CAAC;YAClE,CAAC;QACH,CAAC;QAE2B,IAAK,CAAC,SAAS,GAAuB,IAAI,CAAC,YAAY,CAAC,uCAAkB,CAAC,CAAC;QAKxG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAEM,qCAAS,GAAhB,UAAiB,gBAAkC;QACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC;IAEM,qCAAS,GAAhB,UAAiB,KAAwB;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,iCAAK,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAO,EAAoB,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAO,EAAqB,CAAC;IACtD,CAAC;IAEM,mCAAO,GAAd;QACE,iBAAM,OAAO,WAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAxED;QADC,eAAM,CAAC,yDAA2B,CAAC;;0EAC6B;IA0EnE,wBAAC;CAAA,CAlHsC,qBAAS,GAkH/C;AAlHY,8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB9B,0CAAoD;AACpD,kDAAqE;AAIrE,2CAAoD;AACpD,mDAAuE;AACvE,sCAAiD;AACjD,oCAAiD;AACjD,yDAAmF;AAYnF,iBAAU,CAAC,cAAM,8BAAU,EAAV,CAAU,CAAC,CAAC;AAE7B;IAA6C,2CAAiB;IAS5D,iCAAY,IAAgB,EACoB,kBAAsC;QADtF,YAEE,kBAAM,IAAI,CAAC,SACZ;QAF+C,wBAAkB,GAAlB,kBAAkB,CAAoB;QAR/E,YAAM,GAAW,CAAC,CAAC;QAKV,sBAAgB,GAAG,CAAC,CAAC;;IAKrC,CAAC;IAEM,6CAAW,GAAlB;QACE,iBAAM,WAAW,WAAE,CAAC;QAEpB,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACpC,IAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAE/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC1E,CAAC;IAMM,yCAAO,GAAd,UAAe,OAA0B;QACvC,EAAE,CAAC,CAAC,OAAO,YAAY,uBAAuB,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,YAAY,mDAAwB,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAMM,0CAAQ,GAAf,UAAgB,KAAa;QAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC;IACvE,CAAC;IAOM,yCAAO,GAAd,UAAe,GAAQ;QACrB,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC7B,IAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAChC,IAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;QACrB,IAAM,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;QACxB,IAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjC,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEtG,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEnB,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAM,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC;YAC5B,IAAM,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC;YAC5B,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAMM,yCAAO,GAAd,UAAe,IAAY;QACzB,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,MAAM,CAAC,IAAI,uBAAU,CAAC,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,EAAE,CAAC;IACxD,CAAC;IAMM,kDAAgB,GAAvB,UAAwB,SAAiB;QACvC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvG,CAAC;IAxFU,uBAAuB;QAUrB,0BAAM,CAAC,uCAAkB,CAAC;yCADrB,uBAAU;OATjB,uBAAuB,CA0FnC;IAAD,8BAAC;CAAA,CA1F4C,qCAAiB,GA0F7D;AA1FY,0DAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBpC,0CAAoD;AACpD,sCAA4C;AAC5C,qCAAwC;AACxC,oCAAiD;AACjD,yDAAmF;AACnF,sCAAiD;AACjD,mDAAuE;AASvE,iBAAU,CAAC,cAAM,8BAAU,EAAV,CAAU,CAAC,CAAC;AAE7B;IAA0C,wCAAwB;IAIhE,8BAAY,IAAgB,EACY,kBAAsC;QAD9E,YAEE,kBAAM,IAAI,EAAE,kBAAkB,CAAC,SAOhC;QAXM,UAAI,GAAW,IAAI,eAAM,EAAE,CAAC;QAKjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,eAAM,EAAE,CAAC,CAAC;YAC/B,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,eAAM,EAAE,CAAC,CAAC;YAC1C,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAM,EAAE,CAAC,CAAC;YACxC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,eAAM,EAAE,EAAE,IAAI,eAAM,EAAE,CAAC,CAAC,CAAC;QACnE,CAAC;;IACH,CAAC;IAMM,wCAAS,GAAhB;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QAExD,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACpC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QAEpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,SAAS,EAAG,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAG,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,SAAS,EAAG,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,EAAG,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAK,IAAI,oBAAa,CAAC,eAAe,CAAC,KAAK,CAAC,EAApC,CAAoC,CAAC,CAAC;QAE9E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3B,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrC,IAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpB,CAAC;QAGD,IAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;QAC/C,IAAM,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;QAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,CAAC,CAAC,CAAC;QAE5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAxDU,oBAAoB;QAKlB,0BAAM,CAAC,uCAAkB,CAAC;yCADrB,uBAAU;OAJjB,oBAAoB,CA0DhC;IAAD,2BAAC;CAAA,CA1DyC,mDAAwB,GA0DjE;AA1DY,oDAAoB;;;;;;;;;;;;;;;;;;;;AChBjC,uCAAmD;AAcnD,IAAM,SAAS,GAAW,UAAU,CAAC;AAWrC;IAiCG,gBAAmB,IAAyB;QAAzB,8BAAe,IAAI,CAAC,GAAG,EAAE;QAAzB,SAAI,GAAJ,IAAI,CAAqB;QA9BpC,eAAU,GAAW,UAAU,CAAC;QAChC,eAAU,GAAW,UAAU,CAAC;QAGhC,OAAE,GAAW,EAAE,CAAC;QAGhB,OAAE,GAAW,GAAG,CAAC;QAGjB,OAAE,GAAW,GAAG,CAAC;QAEjB,OAAE,GAAW,UAAU,CAAC;QAGxB,OAAE,GAAW,EAAE,CAAC;QAChB,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAW,UAAU,CAAC;QACxB,OAAE,GAAW,EAAE,CAAC;QAChB,OAAE,GAAW,UAAU,CAAC;QACxB,OAAE,GAAW,EAAE,CAAC;QAChB,OAAE,GAAW,UAAU,CAAC;QAU7B,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAS,IAAI,CAAC,EAAE,CAAC,CAAC;QAEtC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC;QAEzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAE9D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QACtG,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;IACzB,CAAC;IAKO,uBAAM,GAAd;QAEG,IAAI,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,CAAC;QAChF,CAAC;QACD,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3B,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,CAAC;QAC5F,CAAC;QACD,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QAChF,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,CAAC;QAEvF,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACnB,CAAC;IAKM,wBAAO,GAAd;QACG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;QACjB,CAAC;QAED,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAEhC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QAErB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAKM,qBAAI,GAAX;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,GAAG,YAAY,CAAC,CAAC;IAChD,CAAC;IAKM,yBAAQ,GAAf,UAAgB,GAAW,EAAE,GAAW;QACrC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC;IAC1C,CAAC;IAMM,wBAAO,GAAd,UAAe,GAAW,EAAE,GAAW;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC;IAC1D,CAAC;IAOM,qBAAI,GAAX,UAAY,UAAuB;QAAvB,4CAAuB;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC;IACpC,CAAC;IAKM,wBAAO,GAAd,UAAkB,KAAe;QAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;IASM,wBAAO,GAAd,UAAkB,KAAe,EAAE,QAAgB,EAAE,eAAgC;QAAhC,yDAAgC;QAClF,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvD,CAAC;QAAC,IAAI,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC1D,CAAC;IACJ,CAAC;IAMO,0CAAyB,GAAjC,UAAqC,KAAe,EAAE,QAAgB;QACnE,EAAE,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;QAC5F,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC;QAChB,CAAC;QAED,IAAI,MAAM,GAAa,IAAI,KAAK,CAAI,QAAQ,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,OAAO,WAAW,GAAG,QAAQ,EAAE,CAAC;YAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;YACzC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IACjB,CAAC;IAMO,uCAAsB,GAA9B,UAAkC,KAAe,EAAE,QAAgB;QAEhE,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;QAC7F,CAAC;QACD,IAAI,MAAM,GAAG,IAAI,KAAK,CAAI,QAAQ,CAAC,CAAC;QACpC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACjB,CAAC;IAMM,wBAAO,GAAd,UAAkB,KAAe;QAC9B,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7C,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACxD,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;YACtC,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QACjC,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACpB,CAAC;IAQM,sBAAK,GAAZ,UAAa,MAAc,EAAE,GAAW,EAAE,GAAW;QAClD,IAAI,MAAM,GAAkB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACjB,CAAC;IAKM,mBAAE,GAAT;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAKM,mBAAE,GAAT;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAKM,mBAAE,GAAT;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAKM,oBAAG,GAAV;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC;IAKM,oBAAG,GAAV;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC;IAKM,oBAAG,GAAV;QACG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC;IAzPS,MAAM;QADlB,iBAAO,EAAE;;OACG,MAAM,CA0PlB;IAAD,aAAC;CAAA;AA1PY,wBAAM;;;;;;;;;;;AC1BnB,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,mDAAM;IACN,yDAAS;IACT,yDAAS;AACX,CAAC,EAJW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAIvB","file":"examples/physics.bundle.js","sourcesContent":["// tslint:disable max-classes-per-file\nimport 'Engine/preset';\nimport { instantiate, bootstrap, def, DEBUG_PHYSICS, DEBUG } from 'Engine/runtime';\n// def(DEBUG_PHYSICS);\ndef(DEBUG);\n\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Scene } from 'Engine/Core/Scene';\nimport { Screen } from 'Engine/Display/Screen';\nimport { SceneManager } from 'Engine/Core/SceneManager';\n\nimport { Type } from 'Engine/Utility/Type';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { removeFromArray } from 'Engine/Utility/ArrayUtility';\n\nimport { Class } from 'Engine/Decorator/Class';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nimport { Texture } from 'Engine/Resource/Texture';\n\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { Color } from 'Engine/Display/Color';\n\nimport { Vector } from 'Engine/Math/Vector';\nimport { Random } from 'Engine/Math/Random';\n\nimport { SpriteRendererComponent } from 'Engine/Render/SpriteRendererComponent';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { CircleRendererComponent } from 'Engine/Render/CircleRendererComponent';\n\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\nimport { BoxColliderComponent } from 'Engine/Physics/BoxColliderComponent';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\n\nimport { PointerInput, PointerEvent } from 'Engine/Input/PointerInput';\n\nconst rectTexture = new Texture('./assets/rect.png');\nconst circleTexture = new Texture('./assets/circle.png');\n\n@Class()\nclass Shape extends GameObject {\n\n  protected renderer: SpriteRendererComponent;\n\n  protected body: RigidbodyComponent;\n\n  protected size: number;\n\n  @Inject(Random) protected random: Random;\n\n  public isVisible: boolean = true;\n\n  public start(): void {\n    super.start();\n    this.renderer = this.addComponent(SpriteRendererComponent);\n    this.renderer.onBecameVisible$.subscribe(() => this.isVisible = true);\n    this.renderer.onBecameInvisible$.subscribe(() => this.isVisible = false);\n    this.body = this.addComponent(RigidbodyComponent);\n    this.size = this.random.integer(64, 128);\n    this.transform.scale.setTo(this.size / 400);\n    this.body.useGravity = true;\n  }\n\n}\n\n@Class()\nclass Box extends Shape {\n\n  private collider: BoxColliderComponent;\n\n  public start(): void {\n    super.start();\n    this.collider = this.addComponent(BoxColliderComponent);\n    this.renderer.sprite = new Sprite(rectTexture);\n    this.collider.size.setTo(400);\n  }\n\n}\n\n@Class()\nclass Circle extends Shape {\n\n  private collider: CircleColliderComponent;\n\n  public start(): void {\n    super.start();\n    this.collider = this.addComponent(CircleColliderComponent);\n    this.renderer.sprite = new Sprite(circleTexture);\n    this.collider.radius = 200;\n  }\n\n}\n\n@Class()\nclass Wall extends GameObject {\n\n  private collider: BoxColliderComponent;\n\n  public start(): void {\n     super.start();\n     this.collider = this.addComponent(BoxColliderComponent);\n     this.collider.size.setTo(3000, 2);\n  }\n\n}\n\n@Class()\nclass GameManager extends GameObject {\n\n  public scene: Scene;\n\n  private shapes: Shape[] = [];\n\n  @Inject(Random)\n  protected random: Random;\n\n  public postRender(): void {\n    super.postRender();\n\n    const invisibleShapes = this.shapes.filter(shape => shape.isActive && !shape.isVisible);\n    invisibleShapes.forEach(invisibleShape => this.destroyShape(invisibleShape));\n  }\n\n  public createShapeAt(position: Vector): void {\n    const type = this.random.pickOne(ShapeTypes);\n    const shape = instantiate(type);\n    this.scene.add(shape, position);\n    // push after 100ms prevent game object be remove before ready.\n    setTimeout(() => this.shapes.push(shape), 100);\n  }\n\n  public destroyShape(shape: Shape): void {\n    shape.destroy();\n    this.scene.remove(shape);\n    removeFromArray(this.shapes, shape);\n  }\n\n}\n\nconst ShapeTypes: Type<Shape>[] = [Box, Circle];\n\n@Class()\nclass Game extends Scene {\n\n  private gameManager: GameManager;\n\n  private wallTop: Wall;\n  private wallBottom: Wall;\n  private wallRight: Wall;\n  private wallLeft: Wall;\n\n  @Inject(SceneManager) private sceneManager: SceneManager;\n  @Inject(PointerInput) private pointerInput: PointerInput;\n  @Inject(BrowserDelegate) private browserDelegate: BrowserDelegate;\n\n  public start(): void {\n    super.start();\n\n    // setup background color\n    this.mainCamera.backgroundColor = Color.CreateByHexRgb('#4A687F');\n\n    // walls\n    this.wallTop = instantiate(Wall);\n    this.add(this.wallTop);\n\n    this.wallBottom = instantiate(Wall);\n    this.add(this.wallBottom);\n\n    this.wallRight = instantiate(Wall);\n    this.wallRight.transform.rotation = Math.PI / 2;\n    this.add(this.wallRight);\n\n    this.wallLeft = instantiate(Wall);\n    this.wallLeft.transform.rotation = Math.PI / 2;\n    this.add(this.wallLeft);\n\n    this.adjustWalls();\n\n    // game manager\n    this.gameManager = instantiate(GameManager);\n    this.gameManager.scene = this;\n    this.add(this.gameManager);\n\n    // pointer input event\n    this.pointerInput.pointerStart$.subscribe(e => this.onPointerStart(e));\n  }\n\n  private onPointerStart(e: PointerEvent): void {\n    e.locations.forEach(location => {\n      const worldPosition = this.mainCamera.screenToWorld(location);\n      this.gameManager.createShapeAt(worldPosition);\n    });\n  }\n\n  private adjustWalls(): void {\n    const halfWidth = this.screen.width * 0.5;\n    const halfHeight = this.screen.height * 0.5;\n    this.wallTop.transform.position.setTo(0, halfHeight);\n    this.wallBottom.transform.position.setTo(0, -halfHeight);\n    this.wallRight.transform.position.setTo(halfWidth, 0);\n    this.wallLeft.transform.position.setTo(-halfWidth, 0);\n  }\n\n  protected onResize(): void {\n    super.onResize();\n    this.mainCamera.setSize(this.screen.width, this.screen.height);\n    this.adjustWalls();\n  }\n\n}\n\nconst scene = instantiate(Game);\n// prepare resource\nscene.resources.add(rectTexture);\nscene.resources.add(circleTexture);\n\nbootstrap(scene).catch(console.error);\n\n\n\n// WEBPACK FOOTER //\n// ./Examples/physics.ts","import { Vector } from 'Engine/Math/Vector';\n\nexport class Rect {\n\n  public get center(): Vector {\n    return new Vector(\n      this.position.x + this.width / 2,\n      this.position.y + this.height / 2\n    );\n  }\n\n  public get xMin(): number { return this.position.x; }\n\n  public get xMax(): number { return this.position.x + this.width; }\n\n  public get yMin(): number { return this.position.y; }\n\n  public get yMax(): number { return this.position.y + this.height; }\n\n  public get min(): Vector {\n    return new Vector(this.xMin, this.yMin);\n  }\n\n  public get max(): Vector {\n    return new Vector(this.xMax, this.yMax);\n  }\n\n  constructor(public position: Vector = new Vector(),\n              public width: number = 0,\n              public height: number = 0) {}\n\n  public contains(point: Vector): boolean {\n    if (point.x < this.position.x) {\n      return false;\n    }\n\n    if (point.y < this.position.y) {\n      return false;\n    }\n\n    if (point.x > this.position.x + this.width) {\n      return false;\n    }\n\n    if (point.y > this.position.y + this.height) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public overlap(another: Rect): boolean {\n    if (this.xMax < another.xMin || this.xMin > another.xMax) {\n      return false;\n    }\n\n    if (this.yMax < another.yMin || this.yMin > another.yMax) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Rect.ts","import { Resource } from 'Engine/Resource/Resource';\nimport { onceEvent } from 'Engine/Utility/DOM';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Inject } from 'Engine/Decorator/Inject';\n\n/**\n * Basic texture\n */\nexport class Texture extends Resource<HTMLCanvasElement> {\n\n  @Inject(BrowserDelegate)\n  private browser: BrowserDelegate;\n\n  private isDirty: boolean = false;\n\n  private source: HTMLImageElement;\n\n  private _width = 0;\n\n  private _height = 0;\n\n  public get width(): number { return this._width; }\n\n  public set width(value: number) {\n    this._width = value;\n    this.markAsDirty();\n  }\n\n  public get height(): number { return this._height; }\n\n  public set height(value: number) {\n    this._height = value;\n    this.markAsDirty();\n  }\n\n  constructor(path: string) {\n    super(path);\n  }\n\n  public async load(): Promise<void> {\n    if (this.isLoaded) {\n      return;\n    }\n\n    return new Promise<void>(resolve => {\n      const request = new Image();\n      request.src = this.path;\n      request.onprogress = this.onprogress;\n      request.onerror = this.onerror;\n      request.onloadstart = this.onloadstart;\n      request.onload = async () => {\n        try {\n          this._data = await this.processData(request);\n          this._isLoaded = true;\n          this.onLoad.next();\n        } catch (err) {\n          this.onerror(err);\n        }\n        resolve();\n      };\n    });\n  }\n\n  public clone(): Texture {\n    const texture = new Texture(this.path);\n    texture.source = this.source;\n    texture._width = this._width;\n    texture._height = this._height;\n    texture._isLoaded = this._isLoaded;\n    return texture;\n  }\n\n  public markAsDirty(): void {\n    if (this.isDirty) {\n      return;\n    }\n\n    this.isDirty = true;\n\n    if (!this.isLoaded) {\n      return;\n    }\n\n    this.processData(this.source);\n  }\n\n  protected async processData(image: HTMLImageElement): Promise<HTMLCanvasElement> {\n    const data = this.data || this.browser.createCanvas();\n    const ctx = <CanvasRenderingContext2D>data.getContext('2d');\n\n    if (this.width === 0 && this.height === 0) {\n      data.width = this._width = image.width;\n      data.height = this._height = image.height;\n    }\n\n    ctx.drawImage(\n      image,\n      0, 0,\n      image.width,\n      image.height,\n      0, 0,\n      this._width,\n      this._height\n    );\n\n    this.isDirty = false;\n\n    this.source = image;\n\n    return data;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Resource/Texture.ts","import { Subscription } from 'rxjs/Subscription';\nimport { Texture } from 'Engine/Resource/Texture';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Rect } from 'Engine/Math/Rect';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { Class } from 'Engine/Decorator/Class';\n\n@Class()\nexport class Sprite {\n\n  public pivot: Vector = new Vector(0.5, 0.5);\n\n  @Inject(BrowserDelegate)\n  private browser: BrowserDelegate;\n\n  public canvas: HTMLCanvasElement = this.browser.createCanvas();\n\n  private ctx: CanvasRenderingContext2D = this.browser.getContext(this.canvas);\n\n  private _texture: Texture;\n\n  private textureLoaded: Subscription|undefined;\n\n  get texture(): Texture { return this._texture; }\n\n  // TODO: dynamic texture\n  // set texture(texture: Texture) { this.setTexture(texture); }\n\n  get width(): number { return this.rect.width; }\n\n  get height(): number { return this.rect.height; }\n\n  constructor(texture: Texture,\n              /**\n               * Location of the Sprite on the original Texture, specified in pixels.\n               * Default, it will set to whole texture when texture loaded.\n               */\n              public rect: Rect = new Rect()) {\n    this.setTexture(texture);\n  }\n\n  public setTexture(texture: Texture): void {\n    if (this._texture === texture) {\n      return;\n    }\n\n    this._texture = texture;\n\n    if (this.textureLoaded) {\n      this.textureLoaded.unsubscribe();\n    }\n\n    if (texture.isLoaded) {\n      this.drawTexture();\n    } else {\n      this.textureLoaded = texture.onLoad$.subscribe(() => this.drawTexture());\n    }\n  }\n\n  private drawTexture(): void {\n    if (this.rect.width === 0 && this.rect.height === 0) {\n      this.rect.width = this._texture.width;\n      this.rect.height = this._texture.height;\n    }\n\n    this.canvas.width = this.rect.width;\n    this.canvas.height = this.rect.height;\n\n    if (this.textureLoaded) {\n      this.textureLoaded.unsubscribe();\n      delete this.textureLoaded;\n    }\n\n    this.ctx.clearRect(0, 0, this.rect.width, this.rect.height);\n    this.ctx.drawImage(\n      this._texture.data,\n      this.rect.position.x,\n      this.rect.position.y,\n      this.rect.width,\n      this.rect.height,\n      0, 0,\n      this.rect.width,\n      this.rect.height\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Display/Sprite.ts","import { RendererComponent } from 'Engine/Render/RendererComponent';\nimport { Sprite } from 'Engine/Display/Sprite';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\n\n@UniqueComponent()\nexport class SpriteRendererComponent extends RendererComponent {\n\n  /**\n   * The sprite to render.\n   */\n  private _sprite: Sprite|undefined;\n\n  /**\n   * Only re-render if is dirty.\n   */\n  private _isDirty = false;\n\n  get sprite(): Sprite|undefined { return this._sprite; }\n\n  set sprite(value: Sprite|undefined) {\n    this._isDirty = true;\n    this._sprite = value;\n  }\n\n  get isDirty(): boolean { return this._isDirty; }\n\n  public update(): void {\n    super.update();\n    if (this._sprite) {\n      const { width, height } = this._sprite;\n      this.canvas.width = width;\n      this.canvas.height = height;\n    }\n  }\n\n  public render(): void {\n    if (!this._sprite) {\n      return;\n    }\n\n    // if (!this._isDirty) {\n    //   return;\n    // }\n\n    const ctx = this.ctx;\n\n    const { width, height } = this.canvas;\n\n    ctx.clearRect(0, 0, width, height);\n\n    ctx.save();\n\n    ctx.drawImage(this._sprite.canvas, 0, 0);\n\n    ctx.restore();\n\n    // TODO: check texture of sprite has loaded.\n    // this._isDirty = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Render/SpriteRendererComponent.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Component } from 'Engine/Core/Component';\nimport { TransformComponent } from 'Engine/Display/TransformComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Engine } from 'Engine/Core/Engine';\nimport { Time } from 'Engine/Time/Time';\nimport { ForceMode } from 'Engine/Physics/ForceMode';\nimport { UniqueComponent } from 'Engine/Decorator/UniqueComponent';\nimport { RequireComponent } from 'Engine/Decorator/RequireComponent';\nimport { Inject } from 'Engine/Decorator/Inject';\n\ninterface InternalRigidbodyComponent extends RigidbodyComponent {\n  motion: number;\n  inverseMass: number;\n  inverseMoi: number;\n}\n\nconst DoublePI = Math.PI * 2;\n\n@UniqueComponent()\n@RequireComponent([TransformComponent])\nexport class RigidbodyComponent extends Component {\n\n  public angularDrag: number = 0;\n\n  /**\n   * radians per second\n   */\n  public angularVelocity: number = 0;\n\n  public drag: number = 0;\n\n  public freezeRotation: boolean = false;\n\n  /**\n   * In kilogram\n   */\n  private _mass: number = 1;\n\n  public get mass(): number { return this._mass; }\n\n  public set mass(value: number) { this._mass = value; (<InternalRigidbodyComponent>this).inverseMass = 1 / value; }\n\n  public readonly inverseMass: number = 1;\n\n  /**\n   * moment of inertia\n   */\n  private _moi: number = 1000;\n\n  public get moi(): number { return this._moi; }\n\n  public set moi(value: number) { this._moi = value; (<InternalRigidbodyComponent>this).inverseMoi = 1 / value; }\n\n  public readonly inverseMoi: number = 0.001;\n\n  public maxAngularVelocity: number = Infinity;\n\n  /**\n   * pixel per second\n   */\n  public velocity: Vector = Vector.Get();\n\n  public useGravity: boolean = false;\n\n  public isSleeping: boolean = false;\n\n  public sleepThreshold: number = 1;\n\n  public readonly motion: number = 0;\n\n  private forces: Vector[] = [\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get(),\n    Vector.Get()\n  ];\n\n  private torques: number[] = [0, 0, 0, 0];\n\n  private sleepTimer: number = 0;\n\n  private transform: TransformComponent;\n\n  private lastPosition: Vector = Vector.Get();\n\n  constructor(host: GameObject,\n              @Inject(Engine) private engine: Engine,\n              @Inject(Time) private time: Time) {\n    super(host);\n  }\n\n  public start(): void {\n    super.start();\n    this.transform = <TransformComponent>this.getComponent(TransformComponent);\n  }\n\n  public addForce(force: Vector, forceMode: ForceMode = ForceMode.Force): void {\n    this.forces[forceMode].add(force);\n  }\n\n  public addTorque(torque: number, forceMode: ForceMode = ForceMode.Force): void {\n    this.torques[forceMode] += torque;\n  }\n\n  public clearForce(): void {\n    this.forces.forEach(force => force.reset());\n  }\n\n  public clearTorque(): void {\n    for (let i = 0; i < this.torques.length; i++) {\n      this.torques[i] = 0;\n    }\n  }\n\n  public sleep(): void {\n    this.isSleeping = true;\n    this.velocity.reset();\n    this.angularVelocity = 0;\n    this.clearForce();\n    this.clearTorque();\n  }\n\n  public awake(): void {\n    this.isSleeping = false;\n    this.sleepTimer = 0;\n  }\n\n  public fixedUpdate(): void {\n    super.fixedUpdate();\n\n    const deltaTimeInSecond = this.time.fixedDeltaTimeInSecond;\n\n    if (this.useGravity && !this.isSleeping) {\n      this.addForce(this.engine.gravity, ForceMode.Acceleration);\n    }\n\n    /**\n     * Force\n     * f = ma = m∆v/∆t\n     * ∆tf = m∆v\n     * ∆v = ∆tf/m\n     */\n    this.forces[ForceMode.Force].multiply(deltaTimeInSecond * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Force]);\n    this.forces[ForceMode.Force].reset();\n\n    /**\n     * Acceleration ignore mass.\n     */\n    this.forces[ForceMode.Acceleration].multiply(deltaTimeInSecond);\n    this.velocity.add(this.forces[ForceMode.Acceleration]);\n    this.forces[ForceMode.Acceleration].reset();\n\n    /**\n     * Impulse handle without delta time.\n     */\n    this.forces[ForceMode.Impulse].multiply(1 * this.inverseMass);\n    this.velocity.add(this.forces[ForceMode.Impulse]);\n    this.forces[ForceMode.Impulse].reset();\n\n    /**\n     * VelocityChange without delta time and mass.\n     */\n    this.velocity.add(this.forces[ForceMode.VelocityChange]);\n    this.forces[ForceMode.VelocityChange].reset();\n\n    /**\n     * Torque\n     */\n    this.torques[ForceMode.Force] *= this.inverseMoi * deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Force];\n    this.torques[ForceMode.Force] = 0;\n\n    this.torques[ForceMode.Acceleration] *= deltaTimeInSecond;\n    this.angularVelocity += this.torques[ForceMode.Acceleration];\n    this.torques[ForceMode.Acceleration] = 0;\n\n    this.torques[ForceMode.Impulse] *= this.inverseMoi;\n    this.angularVelocity += this.torques[ForceMode.Impulse];\n    this.torques[ForceMode.Impulse] = 0;\n\n    this.angularVelocity += this.torques[ForceMode.VelocityChange];\n    this.torques[ForceMode.VelocityChange] = 0;\n\n    this.checkSleep(deltaTimeInSecond);\n\n    // update position\n    if (!this.velocity.isZero) {\n      this.velocity.multiply(Math.max(0, 1 - this.drag * deltaTimeInSecond));\n      const velocity = this.velocity.clone().multiply(deltaTimeInSecond);\n      this.transform.position.add(velocity);\n      velocity.destroy();\n    }\n\n    // update rotation\n    if (this.freezeRotation) {\n      this.angularVelocity = 0;\n    } else {\n      if (Math.abs(this.angularVelocity) > 1e-6) {\n        this.angularVelocity *= Math.max(0, 1 - this.angularDrag * deltaTimeInSecond);\n\n        if (this.angularVelocity > this.maxAngularVelocity) {\n          this.angularVelocity = this.maxAngularVelocity;\n        }\n\n        this.transform.rotation += this.angularVelocity * deltaTimeInSecond;\n        this.transform.rotation = this.transform.rotation % DoublePI;\n      }\n    }\n\n    // update motion\n    (<InternalRigidbodyComponent>this).motion = (this.velocity.squareMagnitude() + Math.pow(this.angularVelocity, 2)) * 0.5;\n\n    this.lastPosition.copy(this.transform.position);\n  }\n\n  public reset(): void {\n    super.reset();\n    this.angularDrag = 0;\n    this.angularVelocity = 0;\n    this.drag = 0;\n    this.freezeRotation = false;\n    this.mass = 1;\n    this.maxAngularVelocity = Infinity;\n    this.velocity = Vector.Get();\n    this.useGravity = false;\n    this.mass = 1;\n    this.moi = 1000;\n    this.isSleeping = false;\n    this.sleepThreshold = 1;\n    this.sleepTimer = 0;\n    this.forces = [\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get(),\n      Vector.Get()\n    ];\n    this.torques = [0, 0, 0, 0];\n    this.lastPosition = Vector.Get();\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this.velocity.destroy();\n    this.forces.forEach(force => force.destroy());\n    Vector.Put(this.velocity);\n    Vector.Put(this.lastPosition);\n    this.forces.forEach(force => Vector.Put(force));\n  }\n\n  private checkSleep(deltaTimeInSecond: number): void {\n    if (!this.isSleeping && this.sleepThreshold >= 0) {\n      if (this.motion < this.sleepThreshold) {\n        this.sleepTimer += deltaTimeInSecond;\n\n        if (this.sleepTimer > 0.5) {\n          this.sleepTimer = 0;\n          this.sleep();\n        }\n      } else {\n        this.sleepTimer = 0;\n      }\n    } else {\n      if (this.motion >= this.sleepThreshold) {\n        this.awake();\n      }\n    }\n\n    if (!this.transform.position.equalTo(this.lastPosition, 1)) {\n      this.awake();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/RigidbodyComponent.ts","import { Resource } from 'Engine/Resource/Resource';\nimport { addToArray } from 'Engine/Utility/ArrayUtility';\nimport { Observable } from 'rxjs/Observable';\n\nexport class Bundle extends Resource {\n\n  constructor(bundleName: string,\n              public readonly resources: ReadonlyArray<Resource> = []) {\n    super(bundleName);\n  }\n\n  public add(resource: Resource): void {\n    if (addToArray(<Resource[]>this.resources, resource)) {\n      this._isLoaded = false;\n    }\n\n    resource.onProgress$.subscribe(this.onProgress);\n  }\n\n  public async load(): Promise<void> {\n    if (this._isLoaded) {\n      return;\n    }\n\n    try {\n      await Promise.all(this.resources.map(async resource => resource.load()));\n    } catch (err) {\n      this.onError.next(err);\n    }\n\n    this._isLoaded = true;\n    this.onLoad.next();\n  }\n\n  public destroy(): void {\n    this.resources.forEach(resource => resource.destroy());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Resource/Bundle.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Screen } from 'Engine/Display/Screen';\nimport { GameObjectInitializer } from 'Engine/Core/GameObjectInitializer';\nimport { Color } from 'Engine/Display/Color';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Rect } from 'Engine/Math/Rect';\nimport { Matrix } from 'Engine/Math/Matrix';\nimport { Layer, AllBuiltInLayer } from 'Engine/Utility/Type';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Service } from 'Engine/Decorator/Service';\nimport { Inject } from 'Engine/Decorator/Inject';\n\nexport const MainCamera = Symbol('MainCamera');\n\n/**\n * Camera\n */\n@Service(MainCamera)\nexport class Camera extends GameObject {\n\n  public aspect: number = 16 / 9;\n\n  public backgroundColor: Color = Color.Black;\n\n  public toWorldMatrix: Matrix = new Matrix();\n\n  public toScreenMatrix: Matrix = new Matrix();\n\n  /**\n   * Define which layers should be render.\n   */\n  public cullingMask: Layer = AllBuiltInLayer;\n\n  /**\n   * Define which layers could trigger mouse event.\n   */\n  public eventMask: Layer = AllBuiltInLayer;\n\n  /**\n   * Where on the screen is the camera rendered in normalized coordinates.\n   */\n  public rect: Rect = new Rect();\n\n  /**\n   * Camera visible area bounds in world coordinate.\n   */\n  public bounds: Bounds = new Bounds();\n\n  constructor(@Inject(BrowserDelegate) browser: BrowserDelegate,\n              @Inject(Screen) screen: Screen,\n              @Inject(GameObjectInitializer) gameObjectInitializer: GameObjectInitializer) {\n    super(gameObjectInitializer);\n    this.setSize(screen.width, screen.height);\n  }\n\n  public setSize(width: number, height: number): void {\n    this.toScreenMatrix.reset();\n\n    this.rect.width = width;\n    this.rect.height = height;\n\n    const halfWidth = width * 0.5;\n    const halfHeight = height * 0.5;\n\n    // set center as zero point.\n    this.toScreenMatrix.translate(halfWidth, halfHeight);\n    // reverse Y axis\n    this.toScreenMatrix.scale(0, -1);\n\n    this.bounds.extents.setTo(halfWidth, halfHeight);\n  }\n\n  public update(): void {\n    super.update();\n    /**\n     * Perform camera movement, rotation and scaling.\n     * Save those transform and restore after render.\n     */\n    this.toScreenMatrix.save();\n    this.toScreenMatrix.translate(-this.transform.position.x, -this.transform.position.y);\n    this.toScreenMatrix.rotate(this.transform.rotation);\n    this.toScreenMatrix.scale(this.transform.scale);\n\n    this.toWorldMatrix.invertFrom(this.toScreenMatrix);\n\n    this.bounds.center.copy(this.transform.position);\n  }\n\n  public postRender(): void {\n    super.postRender();\n    this.toScreenMatrix.restore();\n  }\n\n  public screenToWorld(point: Vector): Vector {\n    const result = point.clone();\n    this.toWorldMatrix.multiplyToPoint(result);\n    return result;\n  }\n\n  public worldToScreen(point: Vector): Vector {\n    const result = point.clone();\n    this.toScreenMatrix.multiplyToPoint(result);\n    return result;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Core/Camera.ts","import { BaseObject } from 'Engine/Core/BaseObject';\nimport { GameObject } from 'Engine/Core/GameObject';\nimport { Tree } from 'Engine/Utility/Tree';\nimport { Bundle } from 'Engine/Resource/Bundle';\nimport { Camera, MainCamera } from 'Engine/Core/Camera';\nimport { addToArray,\n         removeFromArray } from 'Engine/Utility/ArrayUtility';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { Class } from 'Engine/Decorator/Class';\nimport { BroadPhaseCollisionResolver } from 'Engine/Physics/BroadPhaseCollisionResolver';\nimport { NarrowPhaseCollisionResolver } from 'Engine/Physics/NarrowPhaseCollisionResolver';\nimport { Vector } from 'Engine/Math/Vector';\nimport { GameObjectInitializer } from 'Engine/Core/GameObjectInitializer';\nimport { RenderProcess } from 'Engine/Render/RenderProcess';\nimport { ifdef, DEBUG_PHYSICS, DEBUG } from 'Engine/runtime';\nimport { Logger } from 'Engine/Core/Logger';\nimport { Screen } from 'Engine/Display/Screen';\nimport { BrowserDelegate } from 'Engine/Utility/BrowserDelegate';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Time } from 'Engine/Time/Time';\nimport { Color } from 'Engine/Display/Color';\nimport { PointerInput } from 'Engine/Input/PointerInput';\n\n/**\n * Scene manage game objects and resources.\n */\n@Class()\nexport class Scene extends BaseObject {\n\n  private _resources: Bundle;\n\n  /**\n   * Game objects store as a tree.\n   * If a parent was deactivated, all children of it will be deactivated.\n   */\n  protected gameObjects: Tree<GameObject>;\n\n  protected cameras: Camera[];\n\n  protected rightTop: Vector;\n\n  protected resizeSubscription: Subscription;\n\n  public get isLoaded(): boolean { return this._resources.isLoaded; }\n\n  public get resources(): Bundle { return this._resources; }\n\n  constructor(@Inject(BroadPhaseCollisionResolver) protected broadPhaseCollisionResolver: BroadPhaseCollisionResolver,\n              @Inject(NarrowPhaseCollisionResolver) protected narrowPhaseCollisionResolver: NarrowPhaseCollisionResolver,\n              @Inject(GameObjectInitializer) protected gameObjectInitializer: GameObjectInitializer,\n              @Inject(RenderProcess) protected renderProcess: RenderProcess,\n              @Inject(MainCamera) public mainCamera: Camera,\n              @Inject(Logger) protected logger: Logger,\n              @Inject(Screen) protected screen: Screen,\n              @Inject(BrowserDelegate) protected browser: BrowserDelegate,\n              @Inject(Time) protected time: Time,\n              @Inject(PointerInput) protected pointInput: PointerInput) {\n    super();\n  }\n\n  public reset(): void {\n    super.reset();\n    this._resources = new Bundle('default');\n    this.gameObjects = new Tree<GameObject>(<any>null);\n    this.cameras = [];\n    this.rightTop = Vector.Get();\n  }\n\n  public start(): void {\n    if (this.hasStarted) {\n      return;\n    }\n\n    super.start();\n    this.add(this.mainCamera);\n    this.resizeSubscription = this.browser.resize$.subscribe(() => this.onResize());\n    this.rightTop.setTo(this.screen.width, 0);\n  }\n\n  public destroy(): void {\n    super.destroy();\n\n    if (this.hasStarted) {\n      this.gameObjects.forEachChildren(gameObject => gameObject.destroy());\n      this.resizeSubscription.unsubscribe();\n    }\n\n    this.gameObjects.clear();\n\n    Vector.Put(this.rightTop);\n    delete this.rightTop;\n\n    this._resources.destroy();\n  }\n\n  public add(gameObject: GameObject, at?: Vector): boolean {\n    if (!this.gameObjects.add(gameObject.node)) {\n      return false;\n    }\n\n    if (!gameObject.hasStarted) {\n      gameObject.node.hide();\n    }\n\n    if (gameObject instanceof Camera) {\n      addToArray(this.cameras, gameObject);\n    }\n\n    if (at) {\n      gameObject.transform.position.copy(at);\n    }\n\n    return true;\n  }\n\n  public remove(gameObject: GameObject): boolean {\n    // ensure parent has visiblity to this node.\n    gameObject.node.show();\n\n    if (!this.gameObjects.remove(gameObject.node)) {\n      // It may return false if this game object's parent is not scene root.\n      return false;\n    }\n\n    if (gameObject instanceof Camera) {\n      removeFromArray(this.cameras, gameObject);\n    }\n\n    return true;\n  }\n\n  public has(gameObject: GameObject): boolean {\n    return this.gameObjects.hasChild(gameObject.node);\n  }\n\n  public async load(): Promise<void> {\n    await this._resources.load();\n  }\n\n  public fixedUpdate(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.fixedUpdate());\n    this.broadPhaseCollisionResolver.fixedUpdate();\n    this.narrowPhaseCollisionResolver.resolve(this.broadPhaseCollisionResolver.pairs);\n  }\n\n  public update(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.update());\n    this.broadPhaseCollisionResolver.update();\n    this.narrowPhaseCollisionResolver.resolve(this.broadPhaseCollisionResolver.pairs);\n    ifdef(DEBUG, () => this.logger.update());\n  }\n\n  public lateUpdate(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.lateUpdate());\n  }\n\n  public preRender(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.preRender());\n    /**\n     * TODO: It is a heavy move, should find some way to handle object layering.\n     */\n    this.gameObjects.sort((a, b) => b.data.layer - a.data.layer);\n  }\n\n  public render(ctx: CanvasRenderingContext2D, width: number, height: number): void {\n    // TODO: camera order is an issue\n    this.renderProcess.useContext(ctx, width, height);\n    this.cameras.forEach(camera => this.renderProcess.render(camera, this.gameObjects));\n    ifdef(DEBUG_PHYSICS, () => this.cameras.forEach(camera => this.broadPhaseCollisionResolver.debugRender(ctx, camera)));\n    ifdef(DEBUG, () => {\n      this.logger.render(ctx);\n      this.debugRender(ctx);\n    });\n  }\n\n  public postRender(): void {\n    this.gameObjects.forEachChildren(gameObject => gameObject.postRender());\n    /**\n     * Resove all game object initialization at final step to ensure their cycle start before first update call.\n     */\n    this.gameObjectInitializer.resolve();\n  }\n\n  public toString(): string {\n    return `Scene(${this.name})`;\n  }\n\n  protected debugRender(ctx: CanvasRenderingContext2D): void {\n    const deltaTime = ((this.time.deltaTime * 100) | 0) * 0.01;\n    const fps = ((1000 / deltaTime * 100) | 0) * 0.01;\n\n    ctx.save();\n    ctx.fillStyle = Color.White.toHexString();\n\n    const deltaTimeText = `deltaTime: ${deltaTime}`;\n    const deltaTimeWidth = ctx.measureText(deltaTimeText).width;\n    ctx.fillText(deltaTimeText, this.rightTop.x - deltaTimeWidth, this.rightTop.y + 12);\n\n    const fpsText = `fps: ${fps}`;\n    const fpsWidth = ctx.measureText(fpsText).width;\n    ctx.fillText(fpsText, this.rightTop.x - fpsWidth, this.rightTop.y + 30);\n\n    const screenPositionText = `screen: ${this.pointInput.lastPointerPosition.x}, ${this.pointInput.lastPointerPosition.y}`;\n    const screenPositionWidth = ctx.measureText(screenPositionText).width;\n    ctx.fillText(screenPositionText, this.rightTop.x - screenPositionWidth, this.rightTop.y + 48);\n\n    const worldPosition = this.pointInput.lastPointerPosition.clone();\n    this.mainCamera.toWorldMatrix.multiplyToPoint(worldPosition);\n    const worldPositionText = `world: ${worldPosition.x}, ${worldPosition.y}`;\n    const worldPositionWidth = ctx.measureText(worldPositionText).width;\n    ctx.fillText(worldPositionText, this.rightTop.x - worldPositionWidth, this.rightTop.y + 66);\n\n    ctx.restore();\n  }\n\n  protected onResize(): void {\n    this.rightTop.setTo(this.screen.width, 0);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Core/Scene.ts","import { Recyclable } from 'Engine/Utility/Pool';\n\nexport class Projection implements Recyclable {\n\n  private _canRecycle: boolean = false;\n\n  get canRecycle(): boolean { return this._canRecycle; }\n\n  constructor(public min: number,\n              public max: number) {}\n\n  public overlaps(another: Projection): boolean {\n    return this.max > another.min && this.min < another.max;\n  }\n\n  public getOverlap(another: Projection): number {\n    if (!this.overlaps(another)) {\n      return 0;\n    }\n\n    return this.max > another.max ? another.max - this.min : this.max - another.min;\n  }\n\n  public destroy(): void {\n    this._canRecycle = true;\n  }\n\n  public reset(min: number = 0, max: number = 0): void {\n    this.min = min;\n    this.max = max;\n  }\n\n  public toString(): string {\n    return `Projection (${this.min}, ${this.max})`;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Projection.ts","import { Vector } from 'Engine/Math/Vector';\n\nexport class Line {\n\n  constructor(public begin: Vector,\n              public end: Vector) {}\n\n  public get slope(): number {\n    return (this.end.y - this.begin.y) / (this.end.x - this.begin.x);\n  }\n\n  public get intercept(): number {\n    return this.begin.y - this.slope * this.begin.x;\n  }\n\n  public get length(): number {\n    return this.begin.distanceTo(this.end);\n  }\n\n  public getLength(): number {\n    return this.begin.distanceTo(this.end);\n  }\n\n  public getDirection(): Vector {\n    return this.end.clone().subtract(this.begin).normalize();\n  }\n\n  /**\n   * Resolve given point with given axis by this line's slope and intercept.\n   * Answer may not lay on this line.\n   * @param point The point want to resolve.\n   * @param axis Value of axis has been known.\n   */\n  public resolvePoint(point: Vector, axis: 'x'|'y'): void {\n    switch (axis) {\n      case 'x':\n        point.setTo(point.x, this.slope * point.x + this.intercept);\n        break;\n      case 'y':\n        point.setTo((point.y - this.intercept) / this.slope, point.y);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * @see http://stackoverflow.com/a/11908158/109458\n   */\n  public hasPoint(point: Vector, threshold: number = 1e-6): boolean {\n    const dxc = point.x - this.begin.x;\n    const dyc = point.y - this.begin.y;\n\n    const dxl = this.end.x - this.begin.x;\n    const dyl = this.end.y - this.begin.y;\n\n    const cross = dxc * dyl - dyc * dxl;\n\n    if (Math.abs(cross) > threshold) {\n      return false;\n    }\n\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n      return dxl > 0 ?\n        this.begin.x <= point.x && point.x <= this.end.x :\n        this.end.x <= point.x && point.x <= this.begin.x;\n    } else {\n      return dyl > 0 ?\n        this.begin.y <= point.y && point.y <= this.end.y :\n        this.end.y <= point.y && point.y <= this.begin.y;\n    }\n  }\n\n  public toString(): string {\n    return `Line (${this.begin} -> ${this.end})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Line.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Line } from 'Engine/Math/Line';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { CollisionJumpTable } from 'Engine/Physics/CollisionJumpTable';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { CircleColliderComponent } from 'Engine/Physics/CircleColliderComponent';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { Color } from 'Engine/Display/Color';\n\n/**\n * @see BoxColliderComponent\n */\nforwardRef(() => GameObject);\n\nexport class PolygonColliderComponent extends ColliderComponent {\n\n  /**\n   * Points for polygon shape definition in local space.\n   */\n  public points: Vector[] = [];\n\n  protected readonly _calculatedPoints: Vector[] = [];\n  protected readonly _calculatedAxes: Vector[] = [];\n  protected readonly _calculatedSides: Line[] = [];\n\n  /**\n   * Calculated points, axes and sides in world coordinate information for physics calculation.\n   */\n  public get calculatedPoints(): ReadonlyArray<Vector> { return this._calculatedPoints; }\n  public get calculatedAxes(): ReadonlyArray<Vector> { return this._calculatedAxes; }\n  public get calculatedSides(): ReadonlyArray<Line> { return this._calculatedSides; }\n\n  constructor(host: GameObject,\n              @Inject(CollisionJumpTable) protected collisionJumpTable: CollisionJumpTable) {\n    super(host);\n  }\n\n  public fixedUpdate(): void {\n    super.fixedUpdate();\n    this.calculate();\n  }\n\n  public calculate(): void {\n    const toWorldMatrix = this.host.transform.toWorldMatrix;\n    const count = this.points.length;\n    const diff = count - this._calculatedPoints.length;\n\n    if (diff > 0) {\n      for (let i = 0; i < diff; i++) {\n        this._calculatedPoints.push(new Vector());\n        this._calculatedAxes.push(new Vector());\n        this._calculatedSides.push(new Line(new Vector(), new Vector()));\n      }\n    } else if (diff < 0) {\n      this._calculatedPoints.splice(0, -diff);\n      this._calculatedAxes.splice(0, -diff);\n      this._calculatedSides.splice(0, -diff);\n    }\n\n    this._calculatedPoints.forEach((point, index) => point.copy(this.points[index]));\n    this._calculatedPoints.forEach(point => toWorldMatrix.multiplyToPoint(point));\n\n    for (let i = 0; i < count; i++) {\n      const p1 = this._calculatedPoints[i];\n      const p2 = this._calculatedPoints[(i + 1) % count];\n      const axis = this._calculatedAxes[i];\n      const side = this._calculatedSides[i];\n      axis.copy(p1).subtract(p2);\n      side.begin.copy(p1);\n      side.end.copy(p2);\n    }\n\n    // update bounds\n    const x = this._calculatedPoints.map(p => p.x);\n    const y = this._calculatedPoints.map(p => p.y);\n    const minX = Math.min(...x);\n    const minY = Math.min(...y);\n    const maxX = Math.max(...x);\n    const maxY = Math.max(...y);\n\n    this.bounds.center.setTo((maxX + minX) / 2, (maxY + minY) / 2);\n    this.bounds.extents.setTo((maxX - minX) / 2, (maxY - minY) / 2);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined {\n    if (another instanceof PolygonColliderComponent) {\n      return this.collisionJumpTable.polygonPolygon(this, another);\n    } else if (another instanceof CircleColliderComponent) {\n      return this.collisionJumpTable.circlePolygon(another, this);\n    }\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public contains(point: Vector): boolean {\n    const ray = new Ray(point, Vector.Right);\n    const count = this._calculatedSides.reduce((acc, side) => ray.intersect(side) === -1 ? acc : ++acc, 0);\n    return count % 2 !== 0;\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public rayCast(ray: Ray): Vector|undefined {\n    let minDistance = Number.MAX_VALUE;\n    let noIntersect = true;\n    this._calculatedSides.forEach(side => {\n      const distance = ray.intersect(side);\n      if (distance > 0 && distance < minDistance) {\n        minDistance = distance;\n        noIntersect = false;\n      }\n    });\n\n    if (noIntersect) {\n      return;\n    }\n\n    return ray.getPoint(minDistance);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public project(axis: Vector): Projection {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    this._calculatedPoints.forEach(point => {\n      const s = point.dot(axis);\n      min = Math.min(min, s);\n      max = Math.max(max, s);\n    });\n\n    return new Projection(min, max);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public getFurthestPoint(direction: Vector): Vector {\n    let max = -Number.MAX_VALUE;\n    let pointer = -1;\n    this._calculatedPoints.forEach((point, index) => {\n      const dot = point.dot(direction);\n      if (dot > max) {\n        max = dot;\n        pointer = index;\n      }\n    });\n    return this._calculatedPoints[pointer].clone();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/PolygonColliderComponent.ts","import { Inject } from 'Engine/Decorator/Inject';\nimport { Bounds } from 'Engine/Display/Bounds';\nimport { Component } from 'Engine/Core/Component';\nimport { RigidbodyComponent } from 'Engine/Physics/RigidbodyComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { ColliderType } from 'Engine/Physics/ColliderType';\nimport { BroadPhaseCollisionResolver } from 'Engine/Physics/BroadPhaseCollisionResolver';\nimport { TransformComponent } from 'Engine/Display/TransformComponent';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\ninterface InternalColliderComponent {\n  rigidbody: RigidbodyComponent|undefined;\n  transform: TransformComponent;\n  type: ColliderType;\n}\n\nexport class ColliderComponent extends Component {\n\n  /**\n   * AABB bounds for broadphase collition detection\n   * It will be update by collider component.\n   */\n  public bounds: Bounds = new Bounds();\n\n  /**\n   * collider offset\n   */\n  public offset: Vector = new Vector();\n\n  /**\n   * A mask to determine which layer collider should calculate collision.\n   */\n  public layer: number = 1;\n\n  // public debug: boolean = false;\n\n  public restitution: number = 0.2;\n\n  public friction: number = 0.99;\n\n  public isKinematic: boolean = false;\n\n  public isTigger: boolean = false;\n\n  public readonly type: ColliderType = ColliderType.Static;\n\n  /**\n   * There are at least two kinds of collider:\n   * 1. static collider     : without rigidbody\n   * 2. rigidbody collider  : with rigidbody\n   */\n  public readonly rigidbody: RigidbodyComponent|undefined;\n\n  public readonly transform: TransformComponent;\n\n  @Inject(BroadPhaseCollisionResolver)\n  private broadPhaseCollisionResolver: BroadPhaseCollisionResolver;\n\n  /**\n   * Calculate collision contact if body collided.\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined { return; }\n\n  /**\n   * Check point is contained in.\n   */\n  public contains(point: Vector): boolean { return false; }\n\n  /**\n   * Ray cast to and get intersect point.\n   */\n  public rayCast(ray: Ray): Vector|undefined { return; }\n\n  /**\n   * Project to given axis and return projection.\n   */\n  public project(axis: Vector): Projection { return new Projection(0, 0); }\n\n  /**\n   * Get furthest point through given direction.\n   */\n  public getFurthestPoint(direction: Vector): Vector { return this.bounds.center.clone(); }\n\n  private _onCollide$ = new Subject<CollisionContact>();\n\n  private _onTirgger$ = new Subject<ColliderComponent>();\n\n  public get onCollide$(): Observable<CollisionContact> { return this._onCollide$.asObservable(); }\n\n  public get onTrigger$(): Observable<ColliderComponent> { return this._onTirgger$.asObservable(); }\n\n  public start(): void {\n    super.start();\n    (<InternalColliderComponent>this).rigidbody = this.getComponent(RigidbodyComponent);\n    if (this.rigidbody) {\n      if (this.isKinematic) {\n        (<InternalColliderComponent>this).type = ColliderType.Kinematic;\n        this.rigidbody.sleepThreshold = -1;\n      } else {\n        (<InternalColliderComponent>this).type = ColliderType.Rigidbody;\n      }\n    }\n\n    (<InternalColliderComponent>this).transform = <TransformComponent>this.getComponent(TransformComponent);\n\n    /**\n     * TODO: track after checked target has been added to scene\n     */\n    this.broadPhaseCollisionResolver.track(this);\n  }\n\n  public onCollide(collisionContact: CollisionContact): void {\n    this._onCollide$.next(collisionContact);\n  }\n\n  public onTrigger(other: ColliderComponent): void {\n    this._onTirgger$.next(other);\n  }\n\n  public reset(): void {\n    this._onCollide$ = new Subject<CollisionContact>();\n    this._onTirgger$ = new Subject<ColliderComponent>();\n  }\n\n  public destroy(): void {\n    super.destroy();\n    this._onCollide$.complete();\n    this._onTirgger$.complete();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/ColliderComponent.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { ColliderComponent } from 'Engine/Physics/ColliderComponent';\nimport { CircleRendererComponent } from 'Engine/Render/CircleRendererComponent';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Ray } from 'Engine/Math/Ray';\nimport { Projection } from 'Engine/Math/Projection';\nimport { CollisionJumpTable } from 'Engine/Physics/CollisionJumpTable';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { PolygonColliderComponent } from 'Engine/Physics/PolygonColliderComponent';\nimport { CollisionContact } from 'Engine/Physics/CollisionContact';\nimport { LineRendererComponent } from 'Engine/Render/LineRendererComponent';\nimport { Color } from 'Engine/Display/Color';\n\ninterface InternalCircleColliderComponent {\n  calculatedRadius: number;\n}\n\n/**\n * @see BoxColliderComponent\n */\nforwardRef(() => GameObject);\n\nexport class CircleColliderComponent extends ColliderComponent {\n\n  public radius: number = 0;\n\n  /**\n   * Calaulated radius.\n   */\n  public readonly calculatedRadius = 0;\n\n  constructor(host: GameObject,\n              @Inject(CollisionJumpTable) private collisionJumpTable: CollisionJumpTable) {\n    super(host);\n  }\n\n  public fixedUpdate(): void {\n    super.fixedUpdate();\n\n    const scale = (this.transform.scale.x + this.transform.scale.y) * 0.5;\n    (<InternalCircleColliderComponent>this).calculatedRadius = this.radius * scale;\n    // update bounds\n    this.bounds.center.copy(this.host.transform.position);\n    this.bounds.extents.setTo(this.calculatedRadius, this.calculatedRadius);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public collide(another: ColliderComponent): CollisionContact|undefined {\n    if (another instanceof CircleColliderComponent) {\n      return this.collisionJumpTable.circleCircle(this, another);\n    } else if (another instanceof PolygonColliderComponent) {\n      return this.collisionJumpTable.circlePolygon(this, another);\n    }\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public contains(point: Vector): boolean {\n    return this.bounds.center.distanceTo(point) <= this.calculatedRadius;\n  }\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Line–sphere_intersection\n   * @override\n   * @inheritdoc\n   */\n  public rayCast(ray: Ray): Vector|undefined {\n    const c = this.bounds.center;\n    const r = this.calculatedRadius;\n    const o = ray.origin;\n    const l = ray.direction;\n    const co = o.clone().subtract(c);\n    const discriminant = Math.sqrt(Math.pow(l.dot(co), 2) - Math.pow(co.magnitude(), 2) + Math.pow(r, 2));\n\n    if (discriminant < 0) {\n      return;\n    }\n\n    let d = -l.dot(co);\n\n    if (discriminant > 0) {\n      const d1 = d + discriminant;\n      const d2 = d - discriminant;\n      d = Math.min(d1, d2);\n    }\n\n    return ray.getPoint(d);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public project(axis: Vector): Projection {\n    const dot = this.bounds.center.dot(axis);\n    const s = [dot, dot + this.calculatedRadius, dot - this.calculatedRadius];\n    return new Projection(Math.min(...s), Math.max(...s));\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  public getFurthestPoint(direction: Vector): Vector {\n    return this.bounds.center.clone().add(direction.clone().normalize().multiply(this.calculatedRadius));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/CircleColliderComponent.ts","import { GameObject } from 'Engine/Core/GameObject';\nimport { Vector } from 'Engine/Math/Vector';\nimport { Line } from 'Engine/Math/Line';\nimport { forwardRef } from 'Engine/Utility/Type';\nimport { PolygonColliderComponent } from 'Engine/Physics/PolygonColliderComponent';\nimport { Inject } from 'Engine/Decorator/Inject';\nimport { CollisionJumpTable } from 'Engine/Physics/CollisionJumpTable';\n\n/**\n * TODO:\n * This is really strange\n * If without access GameObject ever, it will not be loaded.\n * Workaround via forward get temporarily\n * It should be a webpack relevant bug...\n */\nforwardRef(() => GameObject);\n\nexport class BoxColliderComponent extends PolygonColliderComponent {\n\n  public size: Vector = new Vector();\n\n  constructor(host: GameObject,\n              @Inject(CollisionJumpTable) collisionJumpTable: CollisionJumpTable) {\n    super(host, collisionJumpTable);\n    for (let i = 0; i < 4; i++) {\n      this.points.push(new Vector());\n      this._calculatedPoints.push(new Vector());\n      this._calculatedAxes.push(new Vector());\n      this._calculatedSides.push(new Line(new Vector(), new Vector()));\n    }\n  }\n\n  /**\n   * Optimized calculation for rectangle\n   * @override\n   */\n  public calculate(): void {\n    const toWorldMatrix = this.host.transform.toWorldMatrix;\n\n    const halfSizeX = this.size.x * 0.5;\n    const halfSizeY = this.size.y * 0.5;\n\n    this.points[0].setTo(-halfSizeX, -halfSizeY);\n    this.points[1].setTo( halfSizeX, -halfSizeY);\n    this.points[2].setTo( halfSizeX,  halfSizeY);\n    this.points[3].setTo(-halfSizeX,  halfSizeY);\n\n    this._calculatedPoints[0].setTo(-halfSizeX, -halfSizeY);\n    this._calculatedPoints[1].setTo( halfSizeX, -halfSizeY);\n    this._calculatedPoints[2].setTo( halfSizeX,  halfSizeY);\n    this._calculatedPoints[3].setTo(-halfSizeX,  halfSizeY);\n    this._calculatedPoints.forEach(point => toWorldMatrix.multiplyToPoint(point));\n\n    for (let i = 0; i < 4; i++) {\n      const p1 = this._calculatedPoints[i];\n      const p2 = this._calculatedPoints[(i + 1) % 4];\n      const axis = this._calculatedAxes[i];\n      const side = this._calculatedSides[i];\n      axis.copy(p1).subtract(p2);\n      side.begin.copy(p1);\n      side.end.copy(p2);\n    }\n\n    // update bounds\n    const x = this._calculatedPoints.map(p => p.x);\n    const y = this._calculatedPoints.map(p => p.y);\n    const minX = Math.min(...x);\n    const minY = Math.min(...y);\n    const maxX = Math.max(...x);\n    const maxY = Math.max(...y);\n\n    this.bounds.center.setTo((maxX + minX) / 2, (maxY + minY) / 2);\n    this.bounds.extents.setTo((maxX - minX) / 2, (maxY - minY) / 2);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/BoxColliderComponent.ts","// tslint:disable\nimport { Service } from 'Engine/Decorator/Service';\n/**\n * Pseudo-Random Utility\n * \n * A pseudo-random utility to add seeded random support for help in\n * generating things like terrain or reproducible randomness. Uses the \n * [Mersenne Twister](https://en.wikipedia.org/wiki/Mersenne_Twister) algorithm.\n * \n * [[include:Random.md]]\n */\n\n/**\n * 32-bit mask\n */\nconst BITMASK32: number = 0xFFFFFFFF;\n\n/**\n * Pseudo-random number generator following the Mersenne_Twister algorithm. Given a seed this generator will produce the same sequence \n * of numbers each time it is called.\n * See https://en.wikipedia.org/wiki/Mersenne_Twister for more details.\n * Uses the MT19937-32 (2002) implementation documented here http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html\n * \n * Api inspired by http://chancejs.com/# https://github.com/chancejs/chancejs\n */\n@Service()\nexport class Random {\n\n   // Separation point of one one word, the number of bits in the lower bitmask 0 <= r <= w-1\n   private _lowerMask: number = 0x7FFFFFFF; // 31 bits same as _r\n   private _upperMask: number = 0x80000000; // 34 high bits\n\n   // Word size, 64 bits\n   private _w: number = 32;\n\n   // Degree of recurrance\n   private _n: number = 624;\n\n   // Middle word, an offset used in the recurrance defining the series x, 1<=m<n\n   private _m: number = 397;\n   // coefficients of teh rational normal form twist matrix\n   private _a: number = 0x9908B0DF;\n\n   // tempering bit shifts and masks\n   private _u: number = 11;\n   private _s: number = 7;\n   private _b: number = 0x9d2c5680;\n   private _t: number = 15;\n   private _c: number = 0xefc60000;\n   private _l: number = 18;\n   private _f: number = 1812433253;\n\n   private _mt: number[];\n\n   private _index: number;\n\n   /**\n    * If no seed is specified, the Date.now() is used\n    */\n   constructor(public seed: number = Date.now()) {\n      this._mt = new Array<number>(this._n);\n      // need to mask to support higher bit machines\n      this._mt[0] = seed >>> 0;\n\n      for (var i = 1; i < this._n; i++) {\n         var s = this._mt[i - 1] ^ (this._mt[i - 1] >>> (this._w - 2));\n         // numbers are bigger than the JS max safe int, add in 16-bit chunks to prevent IEEE rounding errors on high bits         \n         this._mt[i] = (((this._f * ((s & 0xFFFF0000) >>> 16)) << 16) + (this._f * (s & 0xFFFF)) + i) >>> 0;\n      }\n      this._index = this._n;\n   }\n\n   /**\n    * Apply the twist\n    */\n   private _twist(): void {\n\n      var mag01 = [0x0, this._a];\n      var y = 0;\n      for (var i = 0; i < this._n - this._m; i++) {\n         y = (this._mt[i] & this._upperMask) | (this._mt[i + 1] & this._lowerMask);\n         this._mt[i] = this._mt[i + this._m] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n      }\n      for (; i < this._n - 1; i++) {\n         y = (this._mt[i] & this._upperMask) | (this._mt[i + 1] & this._lowerMask);\n         this._mt[i] = this._mt[i + (this._m - this._n)] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n      }\n      y = (this._mt[this._n - 1] & this._upperMask) | (this._mt[0] & this._lowerMask);\n      this._mt[this._n - 1] = this._mt[this._m - 1] ^ (y >>> 1) ^ mag01[y & 0x1] & BITMASK32;\n\n      this._index = 0;\n   }\n\n   /**\n    * Return next 32 bit integer number in sequence\n    */\n   public nextInt(): number {\n      if (this._index >= this._n) {\n         this._twist();\n      }\n\n      var y = this._mt[this._index++];\n\n      y ^= y >>> this._u;\n      y ^= ((y << this._s) & this._b);\n      y ^= ((y << this._t) & this._c);\n      y ^= (y >>> this._l);\n\n      return y >>> 0;\n   }\n\n   /**\n    * Return a random floating point number between [0, 1)\n    */\n   public next(): number {\n      return this.nextInt() * (1.0 / 4294967296.0); // divided by 2^32\n   }\n\n   /**\n    * Return a random floating point in range [min, max) min is included, max is not included\n    */\n   public floating(min: number, max: number): number {\n      return (max - min) * this.next() + min;\n   }\n\n   /**\n    * Return a random integer in range [min, max] min is included, max is included.\n    * Implemented with rejection sampling, see https://medium.com/@betable/tifu-by-using-math-random-f1c308c4fd9d#.i13tdiu5a\n    */\n   public integer(min: number, max: number): number {\n      return Math.floor((max - min + 1) * this.next() + min);\n   }\n\n   /**\n    * Returns true or false randomly with 50/50 odds by default. \n    * By default the likelihood of returning a true is .5 (50%).\n    * @param likelihood takes values between [0, 1]\n    */\n   public bool(likelihood: number = .5): boolean {\n      return this.next() <= likelihood;\n   }\n\n   /**\n    * Returns one element from an array at random\n    */\n   public pickOne<T>(array: Array<T>): T {\n      return array[this.integer(0, array.length - 1)];\n   }\n\n   /**\n    * Returns a new array random picking elements from the original\n    * @param array Original array to pick from\n    * @param numPicks can be any positive number\n    * @param allowDuplicates indicates whether the returned set is allowed duplicates (it does not mean there will always be duplicates \n    * just that it is possible)\n    */\n   public pickSet<T>(array: Array<T>, numPicks: number, allowDuplicates: boolean = false): Array<T> {\n      if (allowDuplicates) {\n         return this._pickSetWithDuplicates(array, numPicks);\n      } else {\n         return this._pickSetWithoutDuplicates(array, numPicks);\n      }\n   }\n\n   /**\n    * Returns a new array randomly picking elements in the original (not reused)\n    * @param numPicks must be less than or equal to the number of elements in the array.\n    */\n   private _pickSetWithoutDuplicates<T>(array: Array<T>, numPicks: number): Array<T> {\n      if (numPicks > array.length || numPicks < 0) {\n         throw new Error('Invalid number of elements to pick, must pick a value 0 < n <= length');\n      }\n      if (numPicks === array.length) {\n         return array;\n      }\n\n      var result: Array<T> = new Array<T>(numPicks);\n      var currentPick = 0;\n      var tempArray = array.slice(0);\n      while (currentPick < numPicks) {\n         var index = this.integer(0, tempArray.length - 1);\n         result[currentPick++] = tempArray[index];\n         tempArray.splice(index, 1);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns a new array random picking elements from the original allowing duplicates\n    * @param numPicks can be any positive number\n    */\n   private _pickSetWithDuplicates<T>(array: Array<T>, numPicks: number): Array<T> {\n    // Typescript numbers are all floating point, so do we add check for int? (or floor the input?)\n      if (numPicks < 0) {\n         throw new Error('Invalid number of elements to pick, must pick a value 0 <= n < MAX_INT');\n      }\n      var result = new Array<T>(numPicks);\n      for (var i = 0; i < numPicks; i++) {\n         result.push(this.pickOne(array));\n      }\n      return result;\n   }\n\n   /**\n    * Returns a new array that has its elements shuffled. Using the Fisher/Yates method\n    * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n    */\n   public shuffle<T>(array: Array<T>): Array<T> {\n      var tempArray = array.slice(0);\n      var swap: T|null = null;\n      for (var i = 0; i < tempArray.length - 2; i++) {\n         var randomIndex = this.integer(i, tempArray.length - 1);\n         swap = tempArray[i];\n         tempArray[i] = tempArray[randomIndex];\n         tempArray[randomIndex] = swap;\n      }\n\n      return tempArray;\n   }\n\n   /**\n    * Generate a list of random integer numbers\n    * @param length the length of the final array\n    * @param min the minimum integer number to generate inclusive\n    * @param max the maximum integer number to generate inclusive\n    */\n   public range(length: number, min: number, max: number): Array<number> {\n      var result: Array<number> = new Array(length);\n      for (var i = 0; i < length; i++) {\n         result[i] = this.integer(min, max);\n      }\n      return result;\n   }\n\n   /**\n    * Returns the result of a d4 dice roll\n    */\n   public d4() {\n      return this.integer(1, 4);\n   }\n\n   /**\n    * Returns the result of a d6 dice roll\n    */\n   public d6() {\n      return this.integer(1, 6);\n   }\n\n   /**\n    * Returns the result of a d8 dice roll\n    */\n   public d8() {\n      return this.integer(1, 8);\n   }\n\n   /**\n    * Returns the result of a d10 dice roll\n    */\n   public d10() {\n      return this.integer(1, 10);\n   }\n\n   /**\n    * Returns the result of a d12 dice roll\n    */\n   public d12() {\n      return this.integer(1, 12);\n   }\n\n   /**\n    * Returns the result of a d20 dice roll\n    */\n   public d20() {\n      return this.integer(1, 20);\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./Engine/Math/Random.ts","export enum ColliderType {\n  Static,\n  Rigidbody,\n  Kinematic\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Engine/Physics/ColliderType.ts"],"sourceRoot":""}